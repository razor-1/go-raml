// Code generated by go-bindata.
// sources:
// codegen/templates/.DS_Store
// codegen/templates/bindata.go
// codegen/templates/class_python.tmpl
// codegen/templates/client_go.tmpl
// codegen/templates/client_initpy_python.tmpl
// codegen/templates/client_nim.tmpl
// codegen/templates/client_python.tmpl
// codegen/templates/client_service_go.tmpl
// codegen/templates/client_service_nim.tmpl
// codegen/templates/client_service_python.tmpl
// codegen/templates/client_setup_python.tmpl
// codegen/templates/client_support_python.tmpl
// codegen/templates/client_utils_go.tmpl
// codegen/templates/client_utils_python.tmpl
// codegen/templates/client_v2_python.tmpl
// codegen/templates/date.tmpl
// codegen/templates/docs_markdown.tmpl
// codegen/templates/enum_capnp.tmpl
// codegen/templates/enum_go.tmpl
// codegen/templates/enum_nim.tmpl
// codegen/templates/enum_python.tmpl
// codegen/templates/generic_main.tmpl
// codegen/templates/index.html.tmpl
// codegen/templates/init_py.tmpl
// codegen/templates/input_validators_python.tmpl
// codegen/templates/libjwt_nim.tmpl
// codegen/templates/oauth2_client_go.tmpl
// codegen/templates/oauth2_client_nim.tmpl
// codegen/templates/oauth2_client_python.tmpl
// codegen/templates/oauth2_jwt_nim.tmpl
// codegen/templates/oauth2_middleware.tmpl
// codegen/templates/oauth2_middleware_python.tmpl
// codegen/templates/object_nim.tmpl
// codegen/templates/python_server_resource.tmpl
// codegen/templates/requirements_python.tmpl
// codegen/templates/server_main_go.tmpl
// codegen/templates/server_main_nim.tmpl
// codegen/templates/server_main_python.tmpl
// codegen/templates/server_resources_api.tmpl
// codegen/templates/server_resources_api_nim.tmpl
// codegen/templates/server_resources_interface.tmpl
// codegen/templates/struct.tmpl
// codegen/templates/struct_capnp.tmpl
// codegen/templates/struct_input_validator.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDs_store = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xd8\x31\x0a\x02\x31\x10\x85\xe1\x37\x31\x45\xc0\x26\xa5\x65\x1a\x0f\xe0\x0d\xc2\xb2\x9e\xc0\x0b\x58\x78\x05\xfb\x1c\x5d\x96\x79\x60\x60\xd5\x4e\x8c\xcb\xfb\x40\xfe\x05\x37\x2a\x16\x31\x23\x00\x9b\xee\xb7\x13\x90\x01\x24\x78\x71\xc4\x4b\x89\x8f\x95\xd0\x5d\x1b\x5f\x43\x44\x44\x44\xc6\x66\x9e\xb4\xff\xf5\x07\x11\x91\xe1\x2c\xfb\x43\x61\x2b\xdb\xbc\xc6\xe7\x03\x1b\xbb\x35\x99\x2d\x6c\x65\x9b\xd7\x78\x5f\x60\x23\x9b\xd8\xcc\x16\xb6\xb2\xcd\xcb\x4d\xcb\x38\x7c\x18\xdf\xd9\x38\xa1\x18\xa7\x10\x2b\x6c\xfd\xce\x77\x23\xf2\xef\x76\x9e\xbc\xfc\xfe\x9f\xdf\xcf\xff\x22\xb2\x61\x16\xe7\xcb\x3c\x3d\x07\x82\xf5\x0d\x00\xae\xdd\xf5\xa7\x43\x40\xf0\x3f\x0b\x0f\xdd\x5a\x1d\x04\x44\x06\xf3\x08\x00\x00\xff\xff\x6a\x00\x88\x6d\x04\x18\x00\x00")

func templatesDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_templatesDs_store,
		"templates/.DS_Store",
	)
}

func templatesDs_store() (*asset, error) {
	bytes, err := templatesDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.DS_Store", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesBindataGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x82\x35\xd0\x85\xb4\xc8\xda\x92\x3f\x64\x3b\x40\x2e\x6d\xba\x40\x0f\xdb\x02\xdb\xde\x76\x16\x06\x45\x91\x0e\x5b\x7d\x55\xa2\x92\x71\x8a\xfc\xf7\xc5\x88\xb2\xeb\x34\x89\xad\x02\x7b\x70\x2c\x8e\xde\xbc\x79\xc3\x19\x0e\x9d\xc9\x84\xbf\x2d\x53\xc5\xb7\xaa\x50\xb5\xb0\x2a\xe5\xc9\x8e\x6f\xcb\x3f\x12\x53\xa4\xc2\x8a\x31\x9b\x4c\x78\x53\xb6\xb5\x54\xcd\x25\x3d\xcb\x32\x55\x5b\x55\x4c\xac\xca\xab\x4c\x58\xd5\x4c\xc6\xd7\x9f\x36\x9f\x6c\x59\xab\xe7\x5f\xef\x89\xb6\xe5\xf3\xef\x65\x26\x9a\x66\x53\xed\xec\x4d\x59\x8c\x6d\x5e\x65\x2f\xc1\x8c\x2a\xec\x66\x5b\x9e\xc7\x98\xc2\xd8\x6a\x37\x98\xb2\x30\xf9\x79\xd0\x50\xb2\x46\xd5\xb7\x46\xaa\x41\x3a\xf7\xd8\x41\x02\xf6\xe0\xe1\x42\x6c\x5b\x0d\x47\xb7\x55\x55\xd6\xc3\xd3\x6c\xad\xc9\x9a\x41\x49\x3a\xe4\x50\xde\xdb\xe9\x79\x68\x2a\xac\x3a\xf5\xba\x94\xcd\x26\x17\xf5\xd7\xb4\xbc\x3b\x45\xa3\x8a\x36\xdf\x48\x51\x15\xd5\x39\xd0\xc9\x34\x3b\xc4\xe9\x0a\x76\x90\xb3\x69\x75\x07\xd0\xc8\x4d\x2e\xcc\x29\x98\x29\x52\x85\xe3\x1b\x9b\x67\x27\x41\x86\x6a\x79\x12\x51\xb5\x76\x73\x2b\x32\x93\x0a\x5b\xd6\x03\x2a\x94\x99\xe4\xcb\xdd\xb9\xd3\x52\x8a\xd6\xde\x4c\x37\x43\x0e\xeb\x63\xe8\xaf\xd0\x9e\x95\xda\xc3\x07\xcb\xcd\x4d\x9a\x66\xea\x4e\xd4\xa7\xfa\xea\x09\x76\x80\x8e\xe4\x8b\x92\xe7\x34\x38\x96\xee\x7c\xab\x7a\x53\x2b\x37\x6c\x4f\x38\xd4\xea\x5b\x6b\x6a\x95\xab\xc2\x0e\x28\x5b\xcf\x4b\x5d\x75\xba\x1e\xc7\xc0\xd3\x8a\x8f\x91\x43\xe3\xef\xf3\x6a\x36\xa2\x32\xbf\x08\x1f\x26\xe7\x87\x8b\x29\xac\xaa\xb5\x38\xb9\x89\x8d\xad\x5b\x69\xcf\x02\xce\x0e\x88\x1e\xf6\xd3\x71\x3a\x38\x5c\x7f\xe4\x1f\x3e\x7e\xe6\xef\xae\xdf\x7f\x7e\xc5\x58\x25\xe4\x57\xb1\x55\xfc\xe0\xce\x98\xc9\x69\xee\x72\x9f\x79\xa3\x64\x67\x55\x33\x62\xde\x48\x96\x79\x55\xab\xa6\x99\x6c\xef\x4d\x45\x06\x9d\x5b\xfa\x32\xa5\xfb\x3b\x31\x25\x4d\x55\x5a\x94\x9d\x43\x25\xec\xcd\x44\x9b\x4c\xd1\x03\x19\x1a\x5b\x9b\x62\xdb\xbd\xb3\x26\x57\x23\x16\x30\xa6\xdb\x42\xf2\xfe\x32\xfe\x5b\x89\xd4\xa7\x07\xfe\xcf\xbf\x14\xf6\x82\x17\x22\x57\xdc\xb9\x05\xdc\xdf\x5b\x55\x5d\x97\x75\xc0\xbf\x33\x6f\x7b\xdf\xad\xf8\xe5\x15\x27\x55\xe3\x0f\xea\x8e\x48\x54\xed\x77\xb2\x69\xfd\xa6\xd5\x5a\xd5\x1d\x6d\x10\x30\xcf\xe8\xce\xe1\xd5\x15\x2f\x4c\x46\x14\x5e\xad\x6c\x5b\x17\xb4\xbc\xe0\x3a\xb7\xe3\x77\xc4\xae\xfd\x11\x11\xf1\xd7\xdf\x2e\xf9\xeb\xdb\x91\x53\xd2\xc5\x0a\x98\xf7\xc0\x98\x77\x2b\x6a\x9e\xb4\x9a\xbb\x38\x2e\x08\xf3\x36\x4e\xce\x15\x37\xe5\xf8\x6d\x59\xed\xfc\xdf\x92\x56\x5f\xf0\xed\x7d\xc0\x3c\x99\xbd\xdb\x2b\x1d\xbf\xcd\xca\x46\xf9\x01\xfb\xbf\xf4\x10\x8d\xe3\x7f\x81\x48\xd5\xb5\xd3\xdd\x1b\x93\x56\x8f\xdf\x90\x74\x3f\xb8\x20\x04\x7b\x60\xcc\xee\x2a\xc5\x45\xd3\x28\xcb\x5d\xff\x10\x4b\x97\x5f\x5f\x0f\xe6\x99\x42\x97\x9c\x97\xcd\xf8\x4f\x93\xa9\xf7\x85\x2e\x0f\x7e\x7d\x09\xf7\xf6\x23\x86\xae\x86\x9c\xf7\x65\x64\x5e\x63\xee\xbb\xb5\x29\x6c\x3c\x67\x5e\x4e\x3f\xf3\xf8\x81\xf4\xaf\x32\x55\x9d\xf1\xb3\xc9\x15\xa7\x36\x19\xd3\x13\xc5\xe9\x5a\xc5\xd7\xe6\xe7\x58\x01\xff\x20\x72\xe5\x07\x7d\x04\x8a\xd9\x67\xa9\xcd\x98\xa2\xb3\x87\x13\xbe\x9f\xcc\x3d\xf9\x76\x6a\x1e\xbb\x92\xd0\x93\xae\xa4\xd5\x0f\x8e\x95\x3f\x26\xa0\xd4\xce\x11\x50\x72\x7e\xf0\x23\xd1\x27\x0c\x7d\xf6\x2f\x93\xbc\x6f\xae\x4d\xed\x07\x3c\x29\xcb\xec\xd8\x5b\x64\xcd\x99\xcc\x77\x8d\x4b\xdc\x8d\xa5\xef\x0f\x47\xde\x7d\x4b\x50\x97\x6f\x0e\x73\xe1\xba\xd9\x34\xf4\x8b\x9a\x5f\xf5\x0d\xe1\x8f\x00\x23\x0d\xb8\x4a\x00\xc3\x15\x60\x18\xf6\x9f\x35\x60\xac\x00\x57\xbd\x4d\x6b\x40\x25\x01\xd3\x15\xe0\x2c\x02\x0c\x05\x60\x38\x75\xcf\x51\x08\xb8\x5a\x00\xaa\x08\x70\xb6\x74\xb6\xf9\x02\x50\x86\x80\xd3\x18\x50\x2c\x00\xe3\x05\x60\x44\x3e\xc4\x43\xfc\x29\xa0\x9c\x02\x26\x53\xc0\xb5\x72\xd8\x30\x01\x5c\xac\x00\x97\x14\x73\x01\xa8\x13\xc0\x48\x02\x2e\x52\xc0\x75\x0c\xb8\x24\x4d\xa1\xfb\xa4\x0b\xc0\x39\xe9\x93\x80\x32\x71\xd8\x39\xe9\x54\xce\x97\x74\x4c\x05\x60\x14\x3b\x3d\xd3\x99\xcb\x63\x9d\x00\x2a\x05\x98\x2c\x01\xa3\x19\xe0\x9a\xe2\xd2\xfb\xb9\x8b\xbb\x8c\x00\xe5\x1c\x70\x9e\x00\xae\xd6\x80\x2b\x0d\xb8\x5e\x00\xa6\xa1\xd3\x11\x91\x46\x0d\x38\x9f\x01\xce\xe7\x3f\x3e\x32\x06\x8c\x63\x97\x4b\x32\x77\xfb\xa5\x17\x80\x21\xc5\x89\x00\xd7\x91\xdb\x9f\xa9\xec\xb5\xce\x00\x63\x5a\x27\x80\x69\x02\x98\x48\xc7\xa1\x96\x80\xe1\xcc\xc5\x49\x12\xc0\xd9\x02\x70\xbd\x06\x9c\xa6\x80\xb1\x74\xfb\x48\x39\xa4\x4b\xa7\x97\xb4\xd0\x7e\x50\x7e\x9d\x7d\x05\x28\xa5\xcb\x3b\x89\xdd\xfe\xca\xd4\xed\xd1\xbc\xff\x9e\x51\x9e\x84\x59\x01\xa6\x1a\x30\x5d\x3b\x9b\x88\x9c\x4d\x2c\x5d\x4d\x49\x1b\xc5\xd4\xe4\xa7\x00\x97\x4b\x17\x47\x4f\x01\x95\x06\x5c\xee\xf3\x25\x8c\x74\x7b\xbf\xd6\x8e\x53\x6a\xb7\x07\xd3\xbe\xc6\x94\x6b\xd4\xe7\xd7\x69\x90\x80\xb3\xd4\xed\xcf\x6a\xda\xef\x55\xea\x6a\x24\x14\x60\x9a\x3a\x1b\x69\xe9\xf6\x9a\x6a\x1b\x02\xce\xb4\xeb\x13\xea\x23\xc2\x2c\xa8\xc6\xe4\xd7\xd7\x21\x8c\x01\xf5\xec\x71\x2f\xeb\x5e\x4b\x2c\xdc\x9a\x7a\x3a\xee\x7d\xa2\x03\x6e\xb4\xbf\xca\x9e\x1c\x96\x7e\xca\x3e\x77\x7b\xed\x67\xf1\xd1\xed\xc7\x3c\xef\xe9\x79\xbb\x60\x9e\x37\x7a\xe6\x3f\xdb\xd1\x05\xf3\x82\xc3\x64\x7c\xe2\x46\x41\x7f\xef\xe6\xf9\x71\xd0\x6e\xa0\x1f\x6e\xcd\x97\xe4\x9e\xbb\x98\x0e\xf7\x49\x77\x23\x5c\x5e\xfd\x3c\x5d\xbe\xd3\xdc\xbd\xe4\xcf\xab\xe6\x34\x59\x2f\x79\x78\xc1\x69\x42\x5e\x1e\x0f\x50\x3f\x0c\x3a\xeb\x7f\x01\x00\x00\xff\xff\x89\xb0\xa9\x86\x00\x10\x00\x00")

func templatesBindataGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesBindataGo,
		"templates/bindata.go",
	)
}

func templatesBindataGo() (*asset, error) {
	bytes, err := templatesBindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/bindata.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClass_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x4d\x8b\xe3\x46\x10\xbd\xfb\x57\x14\x93\x01\xc9\x8b\x6c\x72\xc8\xc9\xa0\x43\xc8\x07\x59\x08\x43\x08\x21\x97\x65\x11\x2d\xa9\x64\xf7\xac\xd4\xad\x54\x97\x9c\x08\xa1\xff\x1e\xaa\x25\xeb\x73\x92\xec\x46\x97\x76\x5b\xaf\x5f\xbd\xaa\x57\xae\x76\xd7\x9d\x20\xc7\x42\x1b\x84\xa7\xac\x54\xce\x25\x75\xcb\x37\x6b\x9e\xe0\xd4\xf7\x87\xa7\xa7\xa7\xc3\xb7\x0d\xdb\xd3\x15\x0d\x92\x62\xcc\xc1\x83\xa0\xb0\x04\x5d\x77\x7e\x51\x15\x8e\xb0\xae\x23\x65\xae\x08\xcf\x9f\x22\x78\xbe\xc3\x25\x86\xf3\xfb\xaa\xb6\xc4\xce\x33\x75\xdd\xf3\xdd\x2f\x68\xf2\xbe\x3f\x68\xff\x0a\xb2\x52\xa3\xe1\xc4\x35\xb5\x6c\x0f\x87\xc3\xc0\x3e\x31\x87\x36\x7d\xc5\x8c\x8f\x97\x03\x00\x80\x84\x91\x55\xad\x14\x9d\x21\xb7\x26\x60\x60\xdb\x64\xb7\xf3\x04\xf4\x1f\x72\x2c\x20\x49\xb4\xd1\x9c\x24\xa1\xc3\xb2\x88\xe0\xd5\x59\x13\xbf\x58\x83\x11\xbc\x7b\xf7\xe9\x4f\x45\x57\x37\xd2\xcb\xa3\x0b\x30\x96\x3d\x08\x94\xc9\xfd\x66\x00\xcd\x18\x79\x48\x69\x87\xf0\xbb\x2a\x1b\xfc\x81\xc8\x52\x18\xbc\x58\xc8\x15\x2b\xb0\x34\x1e\x80\x9a\xd0\xa1\xe1\xe0\x78\x98\x8e\x0e\x15\x36\xaa\x42\x88\x21\x98\xd2\x0c\x66\x00\xa1\x62\x4c\x50\x38\x3d\x24\x2b\x5d\x7f\x81\xc6\xa8\xb4\x44\x60\x3b\x02\xa0\xab\xc9\xd6\x3d\x14\x64\x2b\xb8\x8b\x8a\x0b\x74\x77\x55\xf6\x17\xe8\x90\x68\x41\x48\xf8\x47\xa3\x09\xf3\x1d\x65\xa5\x9d\xd3\xe6\x3a\x01\x40\x18\x91\xb8\x1d\xb9\x83\x59\xb5\xcf\x2b\x1e\x8a\x32\xa5\x37\xbd\x9d\x3e\x48\x2b\x3d\x7a\x00\x5b\xe9\x02\x55\xfa\x3e\xf8\x51\x63\x99\xbb\xbe\x9f\x19\x1f\xb1\x16\xa5\x10\xf4\xae\x1c\xc2\x10\xfb\xf8\xe7\x2b\x72\xb8\x3a\x76\x5c\x9a\x26\x40\xed\xbc\x5d\xe2\xed\xda\xac\xae\x13\x88\x0f\xf0\x93\x72\xdf\xdd\x74\x99\xff\x32\x30\x69\x1c\xba\x73\x89\xfe\x0a\x6c\xfa\x5a\xa9\x5a\xf8\x14\xe4\x3a\x63\xb0\x0d\x97\xda\x48\xb5\xf8\x86\xe0\x98\x9a\x8c\x1b\x42\xb0\x05\xf0\x4d\xbb\xc1\x01\x08\x2d\x81\x66\x07\x15\x56\x98\x22\x39\x09\xaa\x39\x10\x96\x52\x3b\x3e\x6e\xa2\x08\xb4\xb0\x54\x29\x96\x48\x5d\xa0\x98\x49\xf2\x0a\x2e\xd0\x05\x92\x32\xb7\xb5\x6c\x3e\xc8\xfa\x31\x82\xe0\xe1\x54\x70\x81\xd4\xda\x72\x27\x5b\xb4\x09\x76\x90\xe3\x40\x1b\xff\xd5\xcc\xe5\x65\x40\xa6\x0c\xa4\x08\xca\xb4\x1e\x1d\x41\xda\xb0\x48\xe5\x1b\xb6\xa0\x08\xc7\xa4\xa3\x51\xbb\x73\x4d\x85\xb9\xb4\x5e\x8a\x42\x39\x16\x67\x50\xbe\x51\x10\xf2\xad\x71\x90\xa3\xcb\x48\xa7\x52\x2e\xd7\xa4\xa7\x7a\x2e\xf5\xa3\x5e\xe3\xaf\x7a\x75\x7a\xe4\x8d\xa1\x5b\x7d\x3d\xf8\xe7\xbd\xfb\x5e\xb1\xfa\xad\xad\x71\x93\x78\xbf\xf1\xfa\x04\x58\x3a\xdc\xd9\xfa\xa8\x82\x83\x18\x3e\xec\x18\x3f\xee\x49\x4c\x0e\x1b\x0a\xa6\xf6\xf2\x86\xb8\xa9\xb9\xde\xbb\x9f\xa5\xc0\xdb\xc8\xf2\xc8\xec\x39\xaf\x9a\x1c\xe2\xcd\xf4\x3b\x8b\x3b\x49\xa1\x32\xb6\xd4\x86\x77\x55\x46\xb3\xe6\xe3\x1b\x61\xc7\x3c\xbf\xa0\xb3\x3f\x57\x88\xd8\xbf\x16\x32\x98\xf3\x2f\x2a\xfe\x6f\xa8\xbb\x2a\xbf\x2c\xe5\xbd\x2b\xf8\x57\x86\x35\x2f\x66\x31\x28\x07\x48\xb4\xb7\x6a\x37\xb4\x97\xd3\xf6\x3c\x74\x74\x98\x95\x2e\x9e\xc7\x74\xe4\x47\x55\xbc\x1a\x3c\x91\xfc\xc0\x62\xaf\x16\x89\x62\x24\x3a\x1e\x57\x43\xf0\x61\xc9\xaf\x8f\xd1\xba\x50\x2c\xd5\xfa\x8f\xab\x64\x3d\xb2\x3f\x5f\xd7\x46\xc5\xa2\x54\x8b\xed\xe2\x5a\x74\x4c\xe3\xad\xb8\xb8\x00\x09\xb9\x21\x33\x78\xa7\x5c\x22\x33\x3f\xd4\x26\x47\xc3\xf1\x37\xc7\xf9\xf4\xe3\xd5\x70\xa7\x8e\x80\xaf\xf7\x3c\x1b\xbb\xd9\xbe\x71\x6c\x58\xd6\xe4\xd2\x82\xff\x20\x6d\x4f\x39\x83\x0f\xc3\x1f\x0c\x69\xc7\xbf\x03\x00\x00\xff\xff\xdf\x63\xac\x8a\xd9\x08\x00\x00")

func templatesClass_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClass_pythonTmpl,
		"templates/class_python.tmpl",
	)
}

func templatesClass_pythonTmpl() (*asset, error) {
	bytes, err := templatesClass_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/class_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\x41\x8b\xdb\x3e\x14\xc4\xcf\xd1\xa7\x18\x4c\x58\x92\x25\xeb\xdc\x03\x39\xfc\xff\xa5\xd0\x5e\x96\xb2\xa5\xe7\xa2\xca\xcf\xb6\x58\xfb\xc9\x95\xe4\x2c\x5b\xa1\xef\x5e\x24\xd9\x26\x85\x1e\x7a\x93\x46\xcf\x33\xe3\x9f\x50\x08\x4f\x68\xa8\xd5\x4c\xa8\xd4\xa0\x89\xfd\xf7\xce\x54\x78\x8a\x51\x4c\x52\xbd\xca\x8e\x10\x42\xfd\xa5\x2c\x9f\xe5\x48\x31\x0a\xa1\xc7\xc9\x58\x8f\x83\xd8\x55\x4c\xfe\xdc\x7b\x3f\x55\xe2\x28\x84\x32\xec\xb2\xdc\x50\x2b\xe7\xc1\xff\x2f\x1d\x7d\x7b\xf9\x8c\x2b\xaa\x10\xea\x65\x17\x63\x9e\x0d\x61\x2f\x27\x9d\x1c\x71\xb9\xa2\x5e\xac\xfd\xfb\x94\x03\xcb\x16\xce\xdb\x59\x79\x04\xb1\x2b\xdd\x90\xa2\xea\x0f\x79\x2d\x00\xe0\xbf\xd9\xf7\x9f\x48\x36\x64\xd3\xac\xe6\x0e\xe7\x73\x16\x8d\xd5\xbf\xa4\xd7\x86\xd1\xe7\xe3\x13\xde\xf4\x30\xe0\x07\xc1\x25\x1f\xc3\x20\xa9\x7a\x58\xfa\x39\x93\xf3\xd0\x2d\xd8\x78\xd0\x38\xf9\xf7\x6c\xbc\x56\x2f\xae\x59\x52\x66\x1c\x0d\xc3\x91\xbd\x69\x45\x29\xe8\x85\x66\x47\x90\x70\x9a\xbb\x81\xd6\xb6\x9a\x9d\x27\xd9\xc0\xb4\x90\xc3\x60\x94\xf4\xa9\x97\x61\x42\x6b\x6c\x89\x5d\x3d\x0c\xc3\xf7\x94\x2a\x4e\x75\xce\x08\x01\x56\x72\x47\xd8\xbf\x9e\xb0\xbf\x65\x34\x5f\xcb\xb0\x43\x8c\x58\x86\xf6\xb7\xfa\x23\x37\x93\xd1\xec\x17\x52\x8f\x59\x2c\x9b\x10\x88\x9b\x18\x45\x14\x85\xe7\x9a\xb6\xd1\xcc\x7f\x53\x80\x3e\x6e\xb0\x45\x14\xed\xcc\x0a\xcf\xf4\xb6\x69\x87\xe3\xdd\xc0\xfa\x61\x2a\xf5\xb0\xa9\x45\xbc\x43\x76\xc1\x9f\xb7\x7f\xda\x06\x4a\xe4\xe5\xfe\x12\x43\x2c\xc7\xb1\x58\xd7\x85\x71\xbd\x94\xbb\x42\xfd\x3b\x15\x55\xff\x8d\xcb\x15\x38\xdc\xb3\x39\x1e\x1e\xd6\x94\x23\x56\x50\xbb\x6c\x60\xc9\xcf\x96\xa1\x12\xb7\xf4\x2c\x88\x9b\xfc\x0e\x7e\x07\x00\x00\xff\xff\xe4\xf6\x2f\xa1\x23\x03\x00\x00")

func templatesClient_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_goTmpl,
		"templates/client_go.tmpl",
	)
}

func templatesClient_goTmpl() (*asset, error) {
	bytes, err := templatesClient_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_initpy_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x90\x41\x4f\x84\x30\x10\x85\xef\xfd\x15\x2f\x84\x03\x24\xbb\xfc\x80\x4d\x38\xa8\xa7\x3d\x68\x8c\xc6\x73\x53\x61\xd0\x46\x28\xd8\x96\x4d\x36\x93\xf9\xef\x06\xca\xae\x1a\x0f\xf6\x36\x9d\x79\x6f\xe6\x7b\xcc\x7b\xb4\xd4\x59\x47\xc8\x9a\xde\x92\x8b\xda\x3a\x1b\xa7\xb3\x9e\xce\xf1\x7d\x74\x19\xf6\x22\xca\x0e\xd3\xe8\x23\x3c\x7d\xce\x14\x62\x50\xaa\xf3\xe3\x80\x2a\x09\xb0\x75\xef\x52\x65\x02\x6e\x1e\x8f\xa9\x50\xcc\xf0\xc6\xbd\x11\xf2\x8f\x1d\xf2\x13\x0e\x35\xaa\x67\x6a\x66\x6f\xa3\xa5\x20\xb2\x19\x31\xe7\xa7\xea\x7e\x6c\xe7\x9e\x1e\xcc\x40\x22\x17\xcf\xb5\x91\xbe\x98\xc9\xb5\x22\x4a\x35\xbd\x09\x61\xdb\x76\x50\x00\x16\x00\xe8\xf5\x6e\xad\x8b\x40\x7d\xb7\xc3\xab\x09\xa4\x67\x6f\xeb\x8c\xb9\xba\x35\x81\x5e\x9e\x8e\x22\x59\x99\x04\xcb\x5b\xe6\x2a\x33\x59\xd4\xdf\xf7\x16\x17\x59\x79\x1d\xfb\x97\xe0\x97\xdf\x5f\x90\xfa\x27\x43\x51\x5e\x29\x96\xe0\xc9\xb5\x6b\xbc\x5f\x01\x00\x00\xff\xff\x7b\x72\xd2\x5f\x85\x01\x00\x00")

func templatesClient_initpy_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_initpy_pythonTmpl,
		"templates/client_initpy_python.tmpl",
	)
}

func templatesClient_initpy_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_initpy_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_initpy_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x51\x4f\xdc\x3c\x10\x7c\xf7\xaf\x18\xf9\x43\xa7\x04\x1d\xf9\xfa\x1c\x29\xa5\x94\x56\x05\xa9\x95\x28\x02\xf5\x01\xa1\xca\x97\xec\x35\x86\x60\xfb\xec\xcd\xa1\xeb\xe9\xfe\x7b\x65\x27\xe1\x0e\x95\xc7\x3e\xc6\x3b\x3b\x3b\x33\x6b\x67\xbb\x3d\x41\x43\x4b\x6d\x08\xb2\xee\x34\x19\xfe\x69\xf4\x93\xc4\xc9\x6e\x27\xf4\x93\xb3\x9e\xd1\x32\xbb\xa1\x34\x47\x60\xdf\xb3\xee\xc2\x1c\xac\x16\x1d\x05\x21\x78\xe3\x48\x00\xe7\x09\x70\x8c\x0a\x76\xf1\x40\x35\x0b\x00\x58\xa8\x40\xb7\xd7\x97\xc7\x65\xec\xd3\xe6\x57\x3a\x6c\xeb\x12\x17\xcc\x6e\xe8\x10\xa2\xb6\x26\x70\xd4\xa0\xfa\x8e\x3f\x0e\x1d\xa8\x20\xb7\xdb\xe2\xec\xea\xf2\x13\x2d\x8b\xf1\x70\xb7\x93\x42\x38\x6f\x6b\x18\x7a\x1e\xe7\x65\x8b\x97\x86\xd7\x0c\x79\x39\x4a\x42\x25\x80\xff\x50\x7b\x52\x4c\x21\xb6\x62\x30\x23\x80\xb5\xf2\xa8\x51\x8d\xc8\x89\xab\x9c\x74\xcf\x93\x56\x43\xcf\x7b\xb9\x59\x9e\x0b\xa0\x2e\xda\xba\x68\x49\x35\xe4\x03\xaa\x09\x71\x31\x1c\x64\x5b\xc8\x73\x6b\x98\x0c\x9f\xdc\x6c\x1c\xc9\x12\x52\x39\xd7\xe9\x5a\xb1\xb6\xe6\xff\x87\x60\x8d\xc4\x2e\xf2\x78\xe2\xde\x1b\xd4\xa3\xad\x40\x7c\xd6\x73\x3b\xf0\x1c\x67\xf5\x64\x61\x8e\xb5\xea\x7a\x9a\x52\xcc\x93\xa5\x7f\xa5\xe1\x90\xa7\x50\x4d\x93\xc9\xa8\xc1\x7a\xfd\x3b\x41\xe5\x38\x3c\x1f\x35\xaa\xa6\xf9\xde\x93\xdf\x5c\x29\xaf\x9e\x42\xd6\xfb\x6e\x92\x35\xc7\x6a\x5f\x28\x71\x13\xef\x47\x8e\xa9\x3a\xae\x41\x35\xcd\x00\x83\x4b\x38\xb0\x05\xb7\x04\x4f\xab\x9e\x02\xe3\xf6\xfa\x6b\xca\x25\xf4\x1d\xa3\x42\xef\x3b\x01\xe8\x25\x3a\x32\xd9\x01\x7d\x8e\xaa\xc2\xbb\x32\xdd\xa7\x21\x44\x31\xae\x73\xe5\x4a\x04\x5a\xdd\x0d\x53\xef\x51\xe1\xc3\xdd\xbd\x00\x96\xd6\xe3\x71\xbe\x06\xb4\x39\xd4\x59\x38\xa5\x7d\xc8\xf2\x81\x6a\xe5\x52\x02\x47\x8f\x98\x41\x56\x12\x33\x1c\xad\xf3\x89\x39\x90\xdb\x9b\x81\x3c\x95\x62\x90\xd6\xfb\xae\x58\x6a\xd3\x64\xf2\x54\xe6\x78\x3f\xc9\x0a\xe4\x22\x6c\x96\x60\x87\x86\x30\x4b\xb5\x59\x9c\xf6\x60\xb5\xc9\xe4\x4c\xe6\x62\x8c\x77\xcc\xe1\xd5\xf2\xc9\x34\xce\x6a\xc3\xfb\xa0\xe3\x8b\xfc\x46\xdc\xda\x26\x8e\xf8\xf2\xf9\x46\xce\xb1\xb0\xcd\x26\x7e\xc9\xb7\xf6\x70\x37\x75\xee\x63\xd1\x46\xf3\x9b\xb5\x2c\xcf\xcb\x83\x37\x5f\x5c\x53\x70\xd6\x04\x4a\x1b\x8c\x41\x1c\xec\x1c\xd5\x8b\xba\x21\x0c\x63\x39\x05\x12\x58\x79\x0e\x3f\x34\xb7\x99\x8c\x5c\x72\x4c\x38\xfa\xaf\x50\x17\xd3\xb3\x9d\xa5\x15\x8b\xa9\xf0\xf7\xed\x7a\xe5\xe6\xf0\xcd\xc4\x6b\x3b\xa6\x35\xe0\xf6\xa1\x0c\x61\xe4\x22\xfe\xdb\xc8\x34\xe9\x5f\xf6\x27\x00\x00\xff\xff\xcf\x6e\x08\x08\xe8\x04\x00\x00")

func templatesClient_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_nimTmpl,
		"templates/client_nim.tmpl",
	)
}

func templatesClient_nimTmpl() (*asset, error) {
	bytes, err := templatesClient_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x94\x41\x8f\xd3\x30\x10\x85\xef\xf9\x15\xa3\x68\xa5\x34\x52\x1a\xee\x95\x72\x80\xd5\x22\x71\xd9\x03\x0b\xe7\x68\x48\xa6\xd4\x90\xd8\xc6\x33\x8e\x28\x96\xff\x3b\x72\x1a\xd2\x16\xad\xc4\x2e\x82\xf5\xb1\x7e\xf3\xde\x9b\xaf\x91\x43\xd8\x42\x4f\x7b\xa5\x09\xf2\x6e\x50\xa4\xa5\xb5\x47\x39\x18\x9d\xc3\x36\xc6\x4c\x8d\xd6\x38\x01\x47\xdf\x3c\xb1\x70\x16\x02\x38\xd4\x9f\x09\x6e\xbe\x56\x70\x33\xc1\xae\x81\xfa\x81\xdc\xa4\x3a\x62\x88\x31\xdb\x3b\x33\x42\x1d\xc2\xcd\x54\xbf\x55\x03\x69\x1c\xe9\xde\xdc\x7d\x97\x18\x61\xb1\x82\xf9\xf2\x1e\x47\x8a\x11\x42\x20\xdd\xc7\x98\x65\x59\x37\x20\x33\xdc\xce\x0d\x76\x19\x00\xa4\x56\xd0\xb6\x4a\x2b\x69\xdb\x0d\xd3\xb0\xaf\xe0\x13\x32\xb5\xde\x29\x68\x20\x0f\xa1\x7e\x83\x4c\x1f\xdf\xbf\x8b\x31\x2f\x4f\x23\xe9\x24\x65\xbd\x08\x07\x68\xd6\x99\x6b\x01\x13\xb3\x32\x1a\x9a\x75\xb5\xfa\xe1\xf4\xd3\xa6\x7c\x54\x59\x1f\x08\x7b\x72\x5c\x7b\xdb\xa3\xd0\x26\xe4\xb7\x46\x0b\x69\xd9\x7e\x38\x5a\xca\x77\x90\xa3\xb5\x83\xea\x50\x94\xd1\xaf\xbe\xb0\xd1\x79\x3c\x3b\xfd\x09\xdb\x55\xe2\x0c\xe8\x4e\xf7\xd6\x28\x2d\x0b\xa8\xe6\x12\xdb\x4c\xa3\xfc\xc5\x2e\xcd\xad\xc0\x98\xa4\x45\x2f\x87\xf6\x54\x77\xe1\x36\xe1\x70\x41\xa8\x28\x8a\xa4\x83\xa4\x33\x4e\xfd\x98\x2b\xc3\x69\x20\x49\x3d\x15\x45\xf1\x44\x08\xaf\x2f\x3d\xf2\xdd\x84\x43\x2c\xb3\xb5\x8d\x35\x2c\x4b\x05\xef\x54\x05\x3d\x0a\x56\x4b\x12\x57\x60\xd1\xe1\xc8\x17\xcd\xd4\x1e\xe4\x68\x69\x93\x74\x25\x28\x06\x16\x77\xbe\x4d\xc7\x91\x78\xa7\xaf\x4b\xcd\x29\xab\x7f\x73\x15\xd2\xfc\x16\xd6\x2c\x99\xab\x29\x0d\x4c\xcf\x89\x48\xff\xec\x13\x23\xce\x18\xfc\x4b\x50\xf0\xff\x12\xc2\xe3\xd6\x7f\xb5\x3c\x4a\x77\x78\x81\xf5\xe7\x98\xff\xfc\x15\x9c\x33\x9e\x43\x22\x3d\xb1\xa4\xfb\xf9\x3d\xfd\x19\x00\x00\xff\xff\x59\x7f\x48\x4b\x6f\x05\x00\x00")

func templatesClient_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_pythonTmpl,
		"templates/client_python.tmpl",
	)
}

func templatesClient_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_service_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x5f\x6b\xdb\x3e\x14\x7d\xb6\x3e\xc5\xfd\x09\x53\xec\xdf\x1c\xfb\x7d\xd0\x97\xb6\xd9\x28\x74\xa5\x94\x6c\x7b\x2c\xae\x7d\x9d\xa8\x75\x24\x47\x92\x53\x82\xa6\xef\x3e\xf4\xa7\x89\x9b\x96\x32\x06\x7d\x5b\x20\x10\xe9\x1c\x9d\x7b\xce\xbd\x97\x18\x33\x83\x16\x3b\xc6\x11\x68\xd3\x33\xe4\xfa\x4e\xa1\xdc\xb2\x06\xef\x96\x82\xc2\xcc\x5a\x32\xd4\xcd\x63\xbd\x44\x30\xa6\xbc\x09\x3f\xaf\xeb\x35\x5a\x4b\x88\x31\x69\x24\x33\x77\x05\x9f\x4f\xa1\x8c\x18\x5b\x0f\x42\x6a\xc8\x48\x42\x91\x37\xa2\x65\x7c\x59\x3d\x28\xc1\x29\x49\x28\x47\x5d\xad\xb4\x1e\x28\x21\x00\x00\xc6\x80\xac\xf9\x12\x21\x7d\x2c\x20\xdd\x7a\x95\x2b\x76\x7f\xe9\x15\x6e\x6a\xbd\x52\xde\x86\xa3\x52\x63\xd2\x47\x6b\x69\x7c\x87\xbc\xf5\x50\x4e\x88\xde\x0d\xde\x61\x28\x0f\xd1\x16\x71\x1e\x5f\xab\x7f\x43\xbd\x12\xad\x02\x6b\xa7\x70\xe7\xf0\xce\x11\xd2\x6d\xf9\x65\xe4\xcd\xb9\x58\xaf\x91\x6b\xcf\xab\x2a\x30\x26\xdd\x76\xd6\x86\xba\xd6\x92\x6e\xe4\x0d\x64\x0a\xfe\x3f\x6a\x83\xb5\xb9\xe7\xc6\x32\xe1\x2a\xf3\x37\x37\xb5\xac\xd7\xca\xda\xdc\x9f\x6e\x51\x8f\x92\x2f\x76\x03\x2a\x27\x1b\x43\xcd\x80\x75\x80\x1b\x67\xe2\x07\xca\x7b\xa0\x5f\xe7\x0b\xea\x2c\x24\x89\x31\xac\x03\x8e\xe0\xdf\xaa\xe1\x4c\xb4\x3b\xa0\x0e\x83\x6d\x2d\x61\x84\xa8\x1a\x90\x89\x53\xaf\xec\x3e\x12\xd5\x50\x00\x4a\xe9\x52\xaa\x32\x0c\xbc\x6c\xc5\x2d\x6e\xae\x85\x7b\x94\xf9\x6a\xc5\x01\x3b\xab\x15\x7e\xbf\xbd\x84\x97\xa5\xc5\x28\x1b\x74\xa3\x89\xe5\x3f\x3d\x97\xda\x5b\xd8\x33\xac\x2d\x60\x85\x75\x8b\x52\x15\xb0\x19\x51\xee\x42\x13\x72\x92\x24\x2e\xa8\x94\xf0\xdf\x29\x70\xd6\x83\x21\xc9\x7b\x11\xa5\xef\x16\x8c\x85\x23\xfb\x10\x81\x8f\xbd\xc2\x03\xfc\x12\x9b\xc1\xf3\x8a\x24\x89\xfb\xb6\xd8\xa1\xf4\x5d\x28\x9d\x72\x79\xde\x0b\x85\x59\x4e\xde\xeb\xad\x53\x3a\xd4\x0e\x1d\x74\x9b\x5c\x5e\xe3\xd3\x05\x36\xa2\x45\x99\xed\x15\xf3\x32\x5c\x65\x27\x63\x4e\x0e\xee\x26\x1a\x41\x80\xb3\x9e\x1c\x19\x0c\xdc\xe3\xe1\x5f\xcc\xaf\xe6\x8b\x39\xf5\x12\x55\x05\x8d\xc4\x5a\x23\x48\xdc\x8c\xa8\x34\x88\xfb\x07\x6c\x34\xd9\x8b\xbf\x3d\xd2\xa8\xf1\x7a\xaa\x1f\x31\xd4\x49\xe4\x8f\x5c\xd7\x9f\x4c\xaf\x42\x3a\xaf\xe2\x9a\x65\xed\xdf\x47\x7c\x33\xe1\x8b\xb7\x9b\x68\xdf\xda\x93\x48\x0e\x37\xbf\x60\x21\xae\xc4\x13\x4a\x27\x12\xa2\x73\xd6\x47\xd9\x7f\xab\xff\x87\xab\x7f\x38\x10\xf7\x9f\x3c\x39\x4e\x0f\xbf\x03\x00\x00\xff\xff\x3d\x5a\x89\x7e\xad\x06\x00\x00")

func templatesClient_service_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_service_goTmpl,
		"templates/client_service_go.tmpl",
	)
}

func templatesClient_service_goTmpl() (*asset, error) {
	bytes, err := templatesClient_service_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_service_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_service_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\xcd\x6a\xeb\x30\x10\x85\xf7\x7a\x8a\x21\x78\xe1\x98\xc4\x0f\x60\xf0\x2a\xab\x2c\xee\x25\xa4\x74\x55\x4a\x90\xe5\x69\xe2\x56\x3f\xee\x48\x11\x04\xa1\x77\x2f\x96\xe2\x3a\x90\xae\x0c\x23\x9f\xef\x7c\x1a\x85\xb0\x85\x1e\x3f\x06\x8d\xb0\x12\x72\x40\xed\x4e\x16\xc9\x0f\x02\x4f\x7a\x50\x2b\xd8\xc6\xc8\x06\x35\x1a\x72\xa0\x38\xd9\x0b\x97\x1b\x70\xbc\x93\x68\xe7\x71\x08\xf5\x2e\x05\xff\x73\x85\x31\xb2\x10\x80\xb8\x3e\x23\x14\x5f\x1b\x28\x3c\x34\x2d\xd4\xfb\xf4\xab\x85\x05\x16\x42\xe1\x63\x0c\x01\x75\x1f\x23\x63\x21\x14\xf7\xda\x89\x92\x32\x77\x9c\xbb\x8d\xc8\x60\x6a\xc9\x83\x59\xaf\x82\x16\x4c\xf7\x89\xc2\x31\x00\x80\xec\x5e\x35\x90\x5d\xd2\x4c\x73\x85\x55\x03\xd6\xd1\xa0\xcf\x8c\x8d\x64\xc4\xc2\x79\x21\x5f\x95\x02\xe6\xc0\x1a\x9a\xe7\x0e\x80\x96\x01\x10\xba\x2b\xe9\xe7\xd3\x32\x77\x36\x62\x93\x9a\x1a\x51\x77\xdc\xe2\xeb\x71\xbf\x66\x8f\x4b\x50\xd3\x16\x54\xba\xd2\x3f\x74\x17\xd3\xdb\x18\x67\x97\xc2\xab\xfb\x30\xa3\xab\xd2\x92\x9f\x44\x1e\xb7\xb1\x34\xe6\x40\x16\x3e\x90\x11\x07\x4e\x5c\xd9\x18\xb3\x7c\x3a\x33\xda\xa1\x76\x47\x74\x9e\xcb\x18\x93\xbf\x44\x07\x84\x76\x84\x16\x2c\xf9\x3a\x5b\xd7\x84\xdf\x57\xb4\xae\x7c\x64\xee\xb8\x94\xbf\xcc\xe5\xe6\xce\xbc\xfd\x49\x7f\x2f\x27\x6c\xdd\x99\xfe\xb6\x66\xf3\x53\xce\xdf\x9f\x00\x00\x00\xff\xff\x49\x91\xf1\xc0\x59\x02\x00\x00")

func templatesClient_service_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_service_nimTmpl,
		"templates/client_service_nim.tmpl",
	)
}

func templatesClient_service_nimTmpl() (*asset, error) {
	bytes, err := templatesClient_service_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_service_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_service_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x91\xc1\x6a\x03\x21\x10\x86\xef\xfb\x14\x83\xec\x21\xa5\xc9\x3e\x40\x20\x87\x12\x5a\xe8\xa1\x25\xe4\xd0\xab\x98\xdd\x31\x2b\x75\xc7\xa0\xee\x42\x11\xdf\xbd\xcc\x9a\x04\x3d\x0d\xff\x38\xdf\xef\xef\xa4\xb4\x83\x01\xb5\x21\x04\xd1\x5b\x83\x14\x65\x40\xbf\x98\x1e\xe5\xed\x2f\x8e\x8e\x04\xec\x72\x6e\x9a\xde\xaa\x10\x20\xa5\xee\x5b\x4d\x98\xf3\xbe\x01\x00\x1e\x04\x29\x0d\x99\x28\xe5\x26\xa0\xd5\x5b\x28\x8c\x97\xd2\xe7\xc3\x72\x57\x54\x38\xdc\xdb\x4d\x93\x12\x78\x45\x57\x84\xf6\x77\x0b\xed\x02\xfb\x03\x74\x5f\x18\x47\x37\x04\x60\xbb\x07\x3d\xa5\x76\xb9\x37\x8a\xf1\x66\x55\x4e\xca\xab\x29\xe4\x5c\xf9\x08\x21\x2a\xa8\x66\xaa\x66\x6c\xbb\x74\x1f\x33\xf5\x47\x37\x4d\x48\x71\xa5\x3f\x46\x18\xa5\x73\x4e\x09\x69\xa8\xe4\xcf\x08\x26\xc0\xb4\x9a\x82\x76\xbe\x3c\xe2\x07\xfd\x25\xe7\x52\xbf\xd3\x70\x73\x86\x62\x35\x24\x84\x78\xd6\xb3\x37\x70\xa8\x83\x77\x17\x15\x50\xce\xde\xc2\x6b\x01\x9c\x31\xb8\xd9\xf7\x78\x52\x71\xac\x20\x1e\xe3\xec\xa9\x5c\x39\x9d\x8f\xca\xda\x67\xe0\xf3\x9b\xbf\x72\x60\xfe\x39\xa4\x81\x63\xf0\xea\xb8\xe4\xfd\xfc\x07\x00\x00\xff\xff\x2c\x30\xa1\x2a\xc7\x01\x00\x00")

func templatesClient_service_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_service_pythonTmpl,
		"templates/client_service_python.tmpl",
	)
}

func templatesClient_service_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_service_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_service_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_setup_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\xc1\x4a\xc4\x30\x10\x86\xef\x79\x8a\x61\x2f\x55\x70\xf7\xa2\xd7\x1e\x04\xf5\x24\x22\x82\x5e\x16\x29\xa1\x3b\x75\x83\x49\x26\x66\x26\x82\x86\xbe\xbb\x34\xe9\x52\x2b\xe6\x92\xf0\xfd\x1f\x7f\x26\x24\xe7\x2d\x1c\x70\x30\x1e\x61\xc3\x28\x29\x74\xe1\x4b\x8e\xe4\x37\xb0\x1d\x47\xa5\x86\x48\x0e\x0a\x17\x22\xcb\x60\x5c\xa0\x28\x95\x28\x55\xb6\x33\x05\x00\xe0\xb5\xc3\xb6\xc9\x19\x76\x8f\xba\x7f\xd7\x6f\xf8\xa0\x1d\xc2\x38\x36\x17\x25\xfe\xc4\xc8\x86\xfc\xca\x78\xa9\x6c\x91\x0e\xc8\x7d\x34\x41\xfe\x8a\x37\xc8\xfd\x62\xa5\x68\x57\xe9\xf3\xd3\xfd\x12\xea\x24\x47\x8a\x35\xbf\x2e\xe7\xf5\x1c\x35\xef\xd0\x69\x63\x7f\x5b\xb7\x13\x58\xb4\x50\xab\xb9\xdd\xff\xf7\xa4\xd7\x2a\x19\xcf\xa2\xad\xed\x22\x7e\x24\x13\x27\xb9\xe0\x69\x35\x13\x43\x16\x9e\xfb\x0a\x43\x9f\xdc\xe5\xd5\x4c\xe6\x0e\x41\x96\x8e\x93\x11\x6c\x1b\x4f\x8c\xbb\x9e\xac\xc5\x5e\x28\x36\x8b\xc0\xa7\x2b\xda\x7d\x91\x4e\x03\x7c\x9b\xd0\xb1\x1e\xb0\xbd\xd3\x96\x51\x9d\x2b\x95\x33\xfa\xc3\xf4\x73\x3f\x01\x00\x00\xff\xff\x61\x7a\x2a\x6a\xd7\x01\x00\x00")

func templatesClient_setup_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_setup_pythonTmpl,
		"templates/client_setup_python.tmpl",
	)
}

func templatesClient_setup_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_setup_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_setup_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_support_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\xdd\x8b\xe3\xba\x15\x7f\xf7\x5f\x71\x98\x65\x48\x02\x99\x70\xfb\x52\x8a\x21\x50\xe8\x9d\x72\xb7\xd0\xbd\x0f\x77\xb7\xd0\x0e\x43\x46\xb6\x8f\x27\xca\xca\x92\x2b\xc9\x99\x66\x43\xfe\xf7\x72\xf4\x61\xcb\x8e\x67\x76\x5a\xee\xe6\xc5\xb1\x74\x74\x3e\x7e\xe7\x53\x3e\x9f\xef\xa0\xc2\x9a\x4b\x84\x9b\x52\x70\x94\x76\x67\xba\xb6\x55\xda\xee\xda\x93\xdd\x2b\x79\x03\x77\x97\x4b\x96\xdd\xdc\xdc\x64\x61\x03\x1a\xb4\x7b\x55\x19\xa8\x95\x06\x4f\x04\xfe\xa8\x71\x64\x19\x6f\x1c\xd9\xc1\x28\x99\xd5\x5a\x35\x50\x31\x8b\x96\x37\x08\x61\x27\xbe\xfb\xdd\xae\xe3\x55\xdc\xf9\xf2\xe5\xe3\xcf\x7e\x15\x65\xd7\xc4\xd5\x7b\xd9\x35\x03\xa7\xce\x72\x11\x77\x5a\xa6\x0d\xea\x2c\xcb\x2a\xac\x81\x58\x1a\xcb\x9a\x76\x47\xb4\xbb\x28\x65\x19\xff\xac\xf2\x0c\x00\x80\x74\x84\xf0\xfb\x8b\x92\x47\xd4\x16\xc6\x6a\xd6\x4a\x37\xcc\x82\x55\x03\xcb\xb0\xd6\x1f\xfc\x28\xdb\xce\xe6\xf0\xd9\x59\x25\xa7\x47\x7b\xb2\x5f\x3b\x3b\xa2\x9b\xe5\x17\x15\xd2\x68\x3b\x3d\xf0\xda\x18\xab\x6b\x67\xc0\xe2\xf6\x9f\x77\xb7\xcd\xdd\x6d\xf5\xf9\xf6\x97\xfc\xf6\xef\xf9\xed\x6f\x9b\xdb\xfa\x5f\x8b\xd5\x95\xdd\x56\x0d\x56\xf7\xab\xdf\x33\x7b\xaa\x13\xd9\xfd\x9a\x3d\x13\xb3\x5f\x85\x67\x6a\xf7\x1c\xbf\x89\xd9\xde\x95\x1b\xf7\x48\x94\xdf\x68\x6c\x05\x2b\x71\x69\xbf\x71\x59\xab\xed\x27\x25\x31\x1a\xbe\x67\x66\xd7\x6a\xd5\xa2\xb6\x1c\xcd\xb2\x14\x66\x0d\xe1\xfd\xb4\x86\x72\xcf\x45\x95\xec\x07\x1c\x28\x6a\x87\x2d\x52\x6e\x4a\x98\xf7\x66\xf0\x1a\x9e\xd1\x32\x6b\xf5\x72\x8e\xef\x1a\x9c\x36\xc0\x8d\xfb\x33\x9c\x4b\xcc\xfa\x2b\x13\x06\xb3\xd4\xd0\xcf\xba\xc3\x60\x80\xe0\xc6\xee\x6a\x56\x5a\xa5\x4f\xcb\x23\x13\x6b\x68\xb0\x29\x50\xef\xec\xa9\x8d\xe1\xca\x6b\x90\xca\x02\x37\x5c\x1a\xcb\x64\x89\x9e\x90\x8e\xae\x06\x89\x9a\x71\x83\xf0\x0f\x26\x3a\xbc\xd7\x5a\xe9\xe5\x22\xe5\x9d\xc3\x91\x76\xa0\xe9\x8c\x85\x02\x81\xb9\xe3\x8b\x55\xaa\xd6\xc3\x91\x89\x41\x97\xb1\x26\x0e\xb4\x23\x61\x75\x64\xe2\x31\x28\x5f\xf1\x72\xa2\xbc\x2a\x0e\x0d\x8b\xf1\xf6\x21\xbc\x12\x3a\xcc\x11\x83\xea\xac\xe0\x92\xcb\x67\xb0\x7b\x04\x63\x75\x57\xda\x4e\x23\xa8\x1a\xec\x9e\x1b\xaf\x64\x38\xcc\xad\x89\xf1\xc8\x0d\x9c\x17\xe4\x04\xc9\x1a\x5c\xe4\x70\x5e\x54\xcc\x32\x52\x6c\x91\xc3\x03\x3d\x1f\xd7\xb0\xd0\xf8\xef\x8e\x6b\xac\x16\x39\x14\x4a\x89\xcb\xc5\x31\x52\xc5\xc1\x89\xde\xc2\xf9\xd2\xbb\x3f\xf2\x5a\xbb\x7f\x6e\x9f\xcb\xa0\xee\x86\x5b\xd4\xdc\x62\x63\x96\x09\xbc\x1e\xbe\x2d\x3d\x37\xcf\x68\x97\x91\xc3\x2a\x0d\x15\x4f\xc4\x8d\xf3\xd7\x75\x40\x90\xe4\xca\x49\x8a\x52\x1f\x06\x43\x1e\xc7\xb4\xf4\xb3\xfa\x74\xbd\x18\x44\x25\xd1\x50\xd9\xb5\x43\x77\x35\x4f\x9c\x80\xf0\x10\xb5\x7e\x84\xed\x95\xf7\xba\x04\x8d\xd5\x2c\x27\x14\x06\xff\x37\x19\xa3\x88\xf2\x22\x1e\x2a\xfb\x78\xcd\x1e\xff\x53\x62\x6b\xe1\xde\x3d\xb8\x92\xf3\x62\x5a\x66\x4c\x36\x01\x22\x88\x1d\x3b\x65\x3e\x21\x61\x36\x4d\x52\x1c\x72\x38\x13\x8f\x4b\x0e\x9d\x64\x85\x40\xaa\x84\x1e\x67\xcb\x99\x45\x78\xe1\x76\x0f\x4c\x9e\x80\x3a\xa1\xe0\x58\x81\xf3\xdd\xc6\xc7\xa9\x93\xbf\xed\x95\x18\xac\x44\xc1\xeb\x1e\x5b\xa7\xe9\x10\xac\x13\xaf\xbd\x4f\x3f\xb2\xaf\xe7\xf0\x9a\xf4\x34\xb7\x03\x4a\x21\x71\x27\x6e\x59\x43\x8c\x42\x33\x69\x15\xe1\x34\x93\x10\xa3\x8d\x52\xf5\xe9\xc8\xc4\x13\xd8\xbd\xcf\x4c\xca\xdd\x53\x8b\xf0\x14\x99\x3c\x6d\x46\x3c\x86\xa8\xef\xa5\x0c\x26\x5f\x85\xf8\x38\xb4\xbd\x72\x73\x91\x1d\x34\x3b\x32\x31\x57\x73\x49\xca\x6e\xcf\x64\x25\x50\xef\x54\x71\xc0\xd2\xf6\xbc\xb2\xf7\xc5\x5c\x1f\x6b\x1f\x48\xa7\x17\xa4\x3e\x00\x7b\xd4\xb8\xa6\x17\x89\x47\xd4\x50\xab\x4e\x56\xc0\x48\x0b\x5e\xf9\xec\xdf\x04\x0f\x32\x09\x48\xfe\xcb\xe6\x9d\x9a\x78\x20\x87\x2f\xb3\xb1\x76\x3e\x32\x71\x09\x0d\x9a\x40\x83\xb3\x7b\x5c\x7a\x7f\x1f\x99\xd8\x3a\xa3\xdc\xfa\x76\xf0\x61\x3f\x16\xa8\x1d\x8d\x60\xbe\x2d\x72\x59\xa1\xb4\xdb\x9f\x26\x1e\x36\xa8\x39\x13\xfc\x9b\x13\xff\xb7\xdf\x7e\xfd\xe4\x56\x73\x4d\x9c\x72\xaa\xd0\x23\xea\x0f\xbe\x79\x2a\x69\xb8\xb1\x28\xcb\xd3\x1a\x3a\x32\xd6\xec\x5c\x0d\xb5\x7b\x94\xf0\xac\x88\x15\x09\x0e\xca\x13\x68\x69\x34\xd1\xd6\xa6\xea\x9a\xd6\x35\xec\x4d\x38\xbc\x5c\xf5\x3a\xfa\x47\x62\x85\xdb\x77\x56\x94\x7e\x6e\xe9\x87\x9c\x2d\xf5\xd2\x57\x82\xd6\xb7\x1c\x8d\xad\x46\x83\xd2\x32\xf2\xb1\xef\x34\x08\xf7\x47\x94\x16\x98\xac\x5c\x9b\x31\x5d\x71\xe7\xa3\xc4\xbb\xfc\x69\x2a\xe6\x89\x04\x5b\xad\x84\x81\x97\x3d\x92\x45\xc3\x40\x13\x0e\x02\xd3\x18\xd5\xa3\xba\xa0\x08\x3c\x2e\x9f\x0d\x28\x4d\xfd\x60\x84\xab\xcb\xc5\x54\x67\x6f\xa8\xb3\x53\x15\x87\x24\xde\xd3\xa1\x4d\x63\xd9\x69\x83\xce\x80\x5e\xaa\xac\x06\x13\x81\xc5\x4e\xdb\x9f\xe9\x02\xbd\xc6\x67\x72\x99\xc6\x0a\x42\x5e\x18\x8a\xeb\x56\x19\xc3\x0b\x81\xb3\xf2\x28\xa2\x86\xbe\x79\x9d\x9d\xaa\x38\xcc\x76\x1e\x8a\x91\xe5\x57\x3c\xad\x29\x25\x56\xa1\xb3\xce\xb7\xd5\x54\xd4\xc3\x57\x3c\x51\xd3\x08\x38\xd0\xd9\xb9\xdc\x26\xd2\x54\x21\xea\xb5\x53\x7f\x79\xcf\x4e\x35\x1d\xdf\x02\x26\x6c\x55\x71\x18\xd7\xeb\x51\x0d\x71\xb9\x3d\x71\xcd\x6b\xf5\x66\xa0\x1d\x33\xdc\x33\xe3\x06\x49\xa7\xcc\xcd\x6e\x47\x80\xec\x76\x37\xf3\x1c\x1f\x22\x0a\xc9\xe8\xa5\x8a\xc3\xe3\xdb\x2c\x5d\xaf\xb8\x62\x49\x0c\xa2\x3b\x3a\x8c\xfe\x88\xd4\x6f\x3b\x26\x02\xcc\x84\xa0\x22\xe5\xbb\xf8\xca\xe1\x4b\xeb\x5f\xf1\xb4\x31\x96\x69\x6b\xa8\x35\x2e\x17\xbb\x69\x3f\x7b\xdb\xc1\x1d\x7e\xdf\xc5\xd7\x53\x47\xe2\xb1\x34\xe1\x03\xdb\x52\x18\x2a\x1d\xa5\x60\xc6\xc0\xcf\xc1\xe7\xbf\x78\xdf\x2c\x7d\xda\x4c\x0a\x86\x72\x77\x95\x99\x8c\x36\xc0\x8d\xba\xfb\xd3\x1f\x7f\xfa\x03\x94\xaa\x69\x05\x67\xd2\xc6\xb4\x1e\x71\xf8\xb3\x93\xe6\xaf\xc5\x7d\x3e\xd7\x82\x59\x8b\xa1\xfc\x5e\x65\x75\xd8\x1d\xe7\xb7\xb7\xe3\x95\x5b\xac\x8b\xa8\xd7\xc5\x69\x34\x56\x69\xf4\xe2\x08\xc1\xb1\xbc\xb0\xfd\xa6\xbc\xf4\xf6\xe8\x38\xf4\x38\xd2\xb5\xfc\x3d\x18\x12\x5d\x8a\x1f\x0b\x70\xfd\x38\xb4\x8c\x0f\xff\x1f\x82\x0c\x59\x33\x01\xe2\x5e\x76\xcd\x7b\x80\x20\xba\x14\x08\xbb\x47\xae\x93\xfb\xcd\x0f\xc1\x82\xd2\xda\x8b\xf8\xbf\xc1\xe8\xff\x97\x4c\x52\x82\x07\x72\x37\xf9\x40\x81\x25\xa3\x86\xf2\x82\x50\x29\xb9\xb0\xf0\x55\xaa\x17\x78\xa1\x41\xd0\x8d\x80\xaa\x0e\x5f\x6d\x68\x30\x9c\x6f\x61\x6e\x12\xfa\xa4\xec\xc7\xa6\x15\xd8\xa0\xb4\x58\xb9\x91\x28\xcb\xb2\xbe\x2f\x6d\xe1\x9c\x85\x9a\xe1\x62\x31\x9f\xa6\xf1\xda\x6d\x13\xc4\x79\xea\x10\xbf\x4c\x4e\xcb\xd3\x80\x5d\x67\x97\xfe\x73\x81\xaf\xd0\xb5\xd2\x49\x2d\x77\x21\xe0\x33\x61\x8f\x91\xc6\x15\xcd\xa1\xd1\x3a\xfb\xd2\x89\x36\xb2\x72\x76\x73\xd9\x37\xd5\xfc\xad\x5e\x99\x1e\x9a\x2f\xfb\x91\xcd\x43\x4a\xfa\xe8\xdd\x39\x9a\x95\xdf\xa7\x43\xaf\x87\xe9\x0a\x17\x0c\xdf\xd5\xe3\xfb\xba\xc0\x30\x3a\x7f\x3e\xb5\x7e\xa0\x1d\x78\x7c\x08\x77\x32\xe0\x86\x02\x84\x81\x13\xbb\x4e\x54\x80\x17\x2e\x44\x9c\x92\x07\x16\x3d\x07\x37\x78\x87\xd1\xef\xad\x16\x3c\x19\xf7\xdc\x07\x85\x38\xcc\x56\xb0\x0c\x59\x82\xd5\x2a\xb4\xbd\x38\x8c\xce\x8c\x42\xbd\xb3\x49\xe0\x88\x79\x24\xd8\x5e\xc5\x4e\xfc\x34\x13\xd6\xf3\x69\x2e\x86\xf5\xe5\x6a\x13\xb3\xd9\x57\xa9\x6b\xc3\xd2\xfb\x89\x2a\x0e\x89\x53\x66\x4c\xac\x30\x35\x32\x64\xe7\xef\x6c\xa3\x71\x57\xd4\xa8\xca\xfb\x0d\x8d\xa5\xa5\x9f\xdc\xc6\xad\x7b\x28\x52\xc4\xd7\x53\x65\xe7\xf3\x1d\xa0\xac\xdc\x37\xe6\xff\x06\x00\x00\xff\xff\x76\x34\xfe\x39\x8b\x16\x00\x00")

func templatesClient_support_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_support_pythonTmpl,
		"templates/client_support_python.tmpl",
	)
}

func templatesClient_support_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_support_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_support_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_utils_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x5d\x6f\xdb\x36\x14\x7d\x16\x7f\xc5\x9d\x80\x01\x64\xa2\xd2\x0f\x79\xca\x80\x3c\x74\xeb\x8a\x62\xd8\xb2\xcc\x4e\xb1\x87\xa2\xa8\x69\xe9\xca\xe6\x62\x91\x12\x75\x95\xcc\x33\xf4\xdf\x07\x52\xb2\x23\xb9\xb6\x91\x01\x19\xd0\x97\xc4\xfc\x38\xbc\xe7\x9c\xfb\x01\x6d\xb7\x6f\x20\xc3\x5c\x1b\x84\x38\x5d\x6b\x34\xf4\xa5\x21\xbd\xae\xbf\x2c\x6d\x0c\x6f\xda\x96\x95\x2a\x7d\x50\x4b\x84\xed\x56\xde\x75\x3f\x6f\x55\x81\x6d\xcb\x98\x2e\x4a\xeb\x08\x38\x8b\xe2\xc5\x86\xb0\x8e\x59\x14\xa3\x49\x6d\xa6\xcd\x72\xf2\x57\x6d\x8d\xdf\xd0\xd6\xff\x35\x48\x93\x15\x51\xe9\x7f\xe7\x05\xf9\x7f\xa4\x0b\x8c\x99\x60\x2c\x6f\x4c\x0a\x01\x87\x3f\xda\x6c\xc3\x33\x45\x0a\xb4\x21\x74\xb9\x4a\x71\xdb\x0a\xe0\xda\xca\x29\xaa\x0c\x5d\x02\xe8\x9c\x75\x02\xb6\x2c\x5a\x84\x05\xfc\x70\x03\x3e\x96\xfc\x4d\xb9\x7a\xa5\xd6\x01\x2e\x58\xa4\xf3\x70\xfa\xdd\x0d\x18\xbd\xf6\xd7\x23\x87\xd4\x38\xe3\x97\x01\xc8\xa2\x96\xed\xf6\x02\x7d\x79\x8b\x4f\x5d\x14\xbe\x10\x89\xbf\xc7\x5a\xc6\x26\x13\xc8\x2c\x7c\xb8\xbf\xbf\x03\x87\x55\x83\x35\xc1\x93\xa6\xd5\x7e\xb1\xb0\xd9\xa6\x93\xc0\x53\xef\x51\x67\x8e\xc8\xec\x14\xab\x3f\x35\xad\x82\xa4\x02\x69\x65\xb3\x04\x1a\xb7\x9e\x91\x83\x9a\x9c\x36\xcb\x04\x0e\x95\x26\xb0\x0a\xf1\xeb\x04\xaa\x06\xdd\xe6\x4e\x39\x55\xd4\x50\xa8\xf2\x53\x07\xf9\x3c\xb6\xe5\xc2\x5b\x2a\xa7\x58\x97\xd6\xd4\x38\xf2\xc6\x66\x9b\xbd\x3d\x07\xde\xbe\xd4\x1c\x00\x80\x7e\x3b\x95\x41\xcf\x81\x8e\x04\xba\x30\xc7\x48\x8b\x67\xef\x3c\xc9\x91\x77\xb6\xa1\x17\xd9\x77\x6b\xcf\x99\xf7\x4a\x56\xbd\x40\x65\x30\xe5\xa4\xc8\x13\xe4\x4f\xd1\xf6\x82\xe1\xb9\x9e\x5f\x2b\xe1\x93\x09\xa4\x0e\x15\x21\xd0\x0a\x77\xee\xfa\xfa\xae\xf6\x65\x10\xb0\xa1\xc6\xc3\xe1\xd1\x64\xfe\xb7\xda\xa8\xe4\xc7\xe9\xaf\x72\xaa\x9e\xfe\xf0\xe4\xe1\x06\x16\x8d\x5e\x67\x61\x31\x0b\xf4\x79\x88\x3f\x72\x2c\x40\x75\x0e\xa9\x7c\xdb\xd0\xea\x43\x90\xef\x83\xc5\x71\x9f\x8c\xdd\xd3\xdd\x91\x9c\x21\xf1\xd8\x5f\xb5\x4e\xff\xa3\x48\x5b\x13\x27\x23\xb0\x08\xa8\x96\x45\xb9\x75\xf0\x90\xc0\xa3\xd7\xea\x94\x59\xe2\x2e\x67\x41\x44\x74\xf8\xe8\x43\x02\x79\x41\x72\x56\x3a\x6d\x28\xe7\xf1\xf7\x8f\x71\xf2\x28\x84\x57\xb7\x9f\x0b\xa9\xec\x46\xa2\x7c\x67\xbd\x94\xe7\x7c\x1f\x13\x0a\xbb\xec\x04\x7b\x13\xa8\x4e\x27\xb2\xdb\xeb\xf4\x56\x81\x6f\xef\x65\x78\x92\x0b\x16\x85\xa3\xaf\x15\x55\xf5\xc0\xa5\x4a\xbe\xcd\xb2\xa3\x3a\xa0\x17\x32\x28\xee\x4a\xfe\x1c\xc6\x00\xef\x3b\xf3\x9d\xaf\x15\x87\xa5\xc3\x1a\x0d\xc1\xf4\xfd\x4f\x57\x57\xd7\xd7\x7e\x24\x21\xa3\x4d\x89\x10\x2e\xf8\x21\x2d\xef\x75\x81\x1e\xd2\x4f\xd8\x5f\x66\xbf\xdf\x82\x7d\x44\xe7\x74\x86\x50\x3c\x6f\xf6\xad\x40\x70\xe1\xb1\x02\x06\xf7\xb9\x00\xfe\xe9\xb3\x1f\xb3\xc3\xa2\xed\xa9\x75\x07\x7c\x1f\x8b\x5f\x90\x90\xef\xad\x2b\x14\xf1\x79\x3c\x87\xcb\x8e\x46\xa0\x78\x75\x0d\x97\x30\x8f\xe7\x62\x38\xa1\xfb\x40\xf7\xf8\x37\x7d\x45\xcc\x6f\x9e\x20\xe6\x8f\xfe\x5f\x62\x1f\x4d\x71\xcc\xb3\xc6\x9c\x71\x6d\x84\xe1\x8b\x9e\x84\xe8\xd8\x79\x72\x54\xef\x5b\x3a\x84\xbf\x53\xae\x46\xcf\xe7\x72\xc8\xe6\x72\x1e\xcf\x93\xbe\xd0\xf8\x42\x9c\x6b\xec\xbe\xa7\x59\x74\x41\x70\x13\xf2\xce\xa9\x16\x6c\xd0\xf7\x07\x6a\xc6\x46\x37\xe6\x8c\xd5\x23\xcc\x37\xa4\xe6\x80\x66\xdf\xc5\xbb\xce\x1c\xd4\xc0\x38\xf9\xbb\x7b\xfe\x09\xff\xe5\x84\x26\x0b\x1f\x49\xff\x06\x00\x00\xff\xff\x85\x5d\xe0\x5b\x46\x09\x00\x00")

func templatesClient_utils_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_utils_goTmpl,
		"templates/client_utils_go.tmpl",
	)
}

func templatesClient_utils_goTmpl() (*asset, error) {
	bytes, err := templatesClient_utils_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_utils_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_utils_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4b\x8f\xdb\x36\x10\xbe\xfb\x57\x0c\x1c\x18\x96\xba\x96\xc2\xb5\x83\x3c\x8c\xb8\x97\xa2\x28\x7a\xe9\xc9\x39\x15\x85\x43\x8b\xa3\x15\x1b\x89\x14\xc8\x51\x12\x25\xc8\x7f\x2f\x48\x4a\xb2\xe8\x75\xd2\x3d\x04\x58\x48\x5c\xce\xe3\x9b\xd7\x37\xf2\xd7\xaf\x19\x08\x2c\xa5\x42\x58\x16\xb5\x44\x45\xa7\x8e\x64\x6d\x4f\x6d\x4f\x95\x56\x4b\xc8\xbe\x7d\x5b\xc8\xa6\xd5\x86\x40\x70\x42\x92\x0d\x8e\xff\xfb\xf3\x62\x21\xb0\x84\x07\x54\x68\x38\xe1\xc9\x94\xc5\x6e\xb7\x7b\x93\x88\x0d\xd4\xba\xe0\xf5\x89\xbe\x1c\x8e\xa6\xc3\x74\xbf\x00\x00\x58\x2e\x97\xfe\x3d\xea\xc3\xa0\xef\x7d\x41\xa9\x4d\xc3\xc9\x2b\x48\xd5\x76\x04\xc1\x48\xc0\xc1\x63\x03\xf5\x2d\xfa\x9b\xd1\x35\x1c\xa0\xb3\x18\xfe\x0d\x2e\xbe\x68\x85\x20\x4b\x20\xd3\xe1\xc6\xeb\x6a\xaa\xd0\x7c\x92\x16\xa1\xe1\xe6\x03\x70\x0b\x1d\x15\x8b\x20\xea\xe8\x82\x32\x46\x62\xc9\x48\xf5\x10\x00\x43\x40\x39\xe0\x67\xd8\xc3\xfb\x2d\x63\xaf\x33\xf6\x22\x63\xdb\xe3\x96\xed\x99\xfb\xbb\x63\xaf\xf6\x8c\xbd\x8f\x72\x23\xd3\x07\x8f\x3e\x8f\x72\x0a\xf6\x72\x39\x4f\xca\x45\x9d\x4f\x87\xd2\xe8\xc6\x1d\x2c\xf1\xa6\x4d\x44\x3a\x99\x60\x6d\xf1\x29\x0e\x3a\x2a\x6e\xfa\xc0\xcf\x05\xb6\x04\xc7\xbe\xc5\xdf\x8d\xd1\xe6\xe2\xab\xe5\xd6\x86\x72\xc8\x12\x94\x26\x90\x56\x2a\x4b\x5c\x15\xe8\xba\x18\x41\xa4\x17\x33\xc3\x5d\x49\x27\x7f\xc9\xfa\x2f\x1d\x26\xc2\xc3\x82\x36\xa1\x82\xfa\xfc\x2f\x16\x94\xc3\x1f\x9a\x60\x65\xf2\x35\xac\x7c\x17\x13\x91\xa6\x4f\x05\x75\x87\x19\xf0\xcd\xbc\x93\x5f\x44\xee\xde\xd4\xb5\x35\x26\xe9\xdf\xfb\xdd\x3f\x83\x7f\x83\xd4\x19\x05\xc9\x7a\xc5\x5e\x88\x6c\xc5\xb6\xe1\x71\x74\x8f\xfd\xf4\x58\xd9\x35\xac\xa2\xf2\x26\x22\xef\x91\x9b\x0d\x88\xbc\xd1\x8a\x2a\x77\x10\xbc\x77\xaf\x4a\x77\xe1\x5e\xaa\x8e\xd0\x9d\x2c\x16\x5a\x89\x4d\xe4\x00\x4e\x13\x29\x5c\x64\x6e\x30\xe7\xac\x48\x5d\x01\x3c\x77\x4e\x05\xaf\x8b\xae\x76\x8a\xba\x2c\x2d\x52\xe2\xb2\x9a\x69\xc6\xd4\x89\x98\xe1\x4a\xbc\xff\x1e\x39\xf6\x13\x11\x3c\x4b\x6c\x6f\x09\x1b\x18\x83\xd9\xcc\x98\x31\x14\x89\x45\x25\xa3\x0a\x87\x1e\x96\xf0\xee\xf8\x1b\x84\xe0\x72\xaf\xf2\x67\x19\x44\x42\xa3\xf5\xfd\xab\xf8\x47\x04\xae\xfa\xc9\x3d\x48\x55\xea\x0d\x7c\xc2\x2b\x86\x7a\xe8\x2b\x62\x4e\xf0\x51\x9e\xb7\x98\xf3\xac\xe2\x4a\xd4\x08\xae\x35\x70\xc6\x52\x1b\x84\xfb\x37\xaf\x18\x34\xda\x12\xd8\xde\x27\x58\xa1\x41\x90\x2e\xae\x38\x1a\xc7\x65\xa9\xd5\xdc\x2e\x9f\x13\xd5\x65\xe4\x9b\x0e\x6f\xbd\x30\xe6\xdb\x33\x78\x67\xbd\xd1\x16\xce\x58\xf0\xce\x0e\xc8\xae\x04\x6a\x3d\x56\x00\x6a\xe4\x2d\x08\xde\x47\xb6\x04\x07\x1f\x4a\xde\x7c\xf0\xd3\xea\x91\x0c\xb6\x35\x2f\x30\x71\x88\x07\xe7\x37\xbd\x8c\xf0\x8f\x88\x7f\xd3\xd9\x6c\xf8\x87\xc1\x0f\x31\x0f\xf5\x12\xbc\xaf\xe5\x43\x45\x96\x7f\x94\xea\x61\x13\xb2\x9d\x5f\xf9\x2e\xf1\x9a\xae\x27\xc3\x5d\x8f\x45\x9c\xd7\xca\x07\xe0\xfb\xe3\x63\xa0\x34\xa7\xe6\x24\xad\xb0\x14\x07\x3b\xb4\x36\xf3\xfa\x83\xff\x1f\xe4\x16\xa9\x47\xb8\xb1\xee\x65\x60\x03\x85\x6e\x50\xed\x67\x71\xe8\xac\x75\x3d\x7c\x2e\x3c\x01\xa6\x6f\x97\x00\xb7\x69\x1f\xd3\x77\xae\x2b\x15\x84\xdd\x60\xe7\xb7\x07\x60\x90\xfd\x0a\x77\xfe\x13\x12\x0b\xee\x5f\xb3\x49\xb6\xbb\x92\x65\xbb\x97\x41\x98\xb1\xfb\xd1\x70\xcc\x68\x52\xfa\xdf\x6d\x12\x72\x71\x3b\x0c\x0e\xc0\xcf\x36\x09\x6a\x29\x3c\x7f\x0e\x0e\xc0\x8b\xc3\x6a\xbb\x52\x58\x79\xb9\xd3\x7b\xc9\xa6\xe5\x3d\x00\xbf\x05\xf6\xa8\x3b\xeb\x55\x31\x2d\x58\xb7\xf8\x93\x65\xb6\xdc\x40\xd8\x9e\x01\x20\xfd\x7e\x6b\x1f\x1b\xdf\x3d\x32\x76\x3f\x5e\x50\x09\xff\x1b\xe5\xbf\x00\x00\x00\xff\xff\xeb\x57\xd3\xe7\xc9\x08\x00\x00")

func templatesClient_utils_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_utils_pythonTmpl,
		"templates/client_utils_python.tmpl",
	)
}

func templatesClient_utils_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_utils_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_utils_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_v2_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x56\xdd\x8e\xe3\x34\x14\xbe\xcf\x53\x1c\x06\xa4\x26\x52\x27\x94\x95\xb8\xd8\x8a\x20\x60\x34\x12\x2b\xc1\x32\x74\x67\xf6\x66\x85\x32\x6e\x72\xd2\x7a\x48\xec\xd4\x76\x66\xb6\x8a\xf2\xee\xe8\x38\x4e\xea\xb4\x1d\xa8\xd8\x5c\xb4\xb1\x7d\x7e\xbe\xf3\xf7\x39\x6d\x7b\x0d\x39\x16\x5c\x20\x5c\x65\x25\x47\x61\xd2\x7a\x6f\xb6\x52\x5c\xc1\x75\xd7\x05\x57\x57\x57\x01\x83\xfe\x00\x0a\xa9\xa0\x6d\x21\x7e\xcf\x2a\x84\xae\x0b\x58\x63\xe4\xf5\x06\x05\x2a\x66\x30\x87\xf5\x1e\x36\xf2\x5a\xb1\xaa\x84\xde\xc4\xa0\xe7\x44\xa4\xb2\xe6\x02\x5e\xd5\x52\x19\x50\xb8\x6b\x50\x1b\x1d\x14\x4a\x56\x4e\x34\xd5\x4d\x6d\x0f\x9d\x8c\xd9\xd7\x98\x6e\x99\xc8\x4b\x54\xe9\x33\x2b\x1b\x9c\x83\xe1\x15\x6a\xc3\xaa\x3a\x25\xc5\x34\x67\x06\x69\x2b\x08\x28\x14\xc5\xc4\x06\xe1\x9b\x5e\xdd\xe2\x5c\x26\x10\xbf\xb3\x4b\x4d\x98\xad\xb3\xb6\xf5\x24\xba\x6e\xf0\x76\xb4\x6d\x0d\xa2\xc8\xbb\x2e\x08\x3e\xdc\xae\x3e\xde\xae\xd2\x87\xd5\x6f\x90\xc0\x8c\x92\xf0\x0b\xd3\xf8\xb0\x7a\x07\x5d\x37\x0b\x82\x20\x2b\x99\xd6\x7e\x72\x6e\x6c\x3c\xb7\x9f\x33\xac\x0d\x97\x22\x1c\xdf\xa2\x65\x00\x00\x50\x33\xad\x5f\xd7\xfb\xf5\xfe\xfe\xee\x56\x29\xa9\xc2\xd7\x4d\x5e\x64\xe8\x41\xe8\x26\xcb\x50\xeb\xa2\x29\x57\xa8\x6b\x29\x34\x7e\xa9\xcd\x50\xae\x9f\x30\x33\x4e\x96\x4a\x4a\xff\x27\x62\x94\xd5\x12\x2b\x14\x46\x03\x83\x35\xd3\x3c\x7b\xa5\x91\xe8\x10\x73\x90\xe2\xd0\x13\xbe\xe5\x1c\x0b\x48\x53\x2e\xb8\x49\xd3\x50\x63\x59\xcc\xa1\x51\x65\x72\x28\xc9\x1c\x1a\x8d\x2a\x79\x2f\x05\xce\x2d\xf6\x17\xa9\x72\xb7\xa4\xd6\x90\x8d\x49\x2b\x9d\x7c\xbf\x58\x2c\x1c\x68\x7a\xc8\x52\xdc\xa8\xd2\x16\xb4\x6b\xbb\x59\x5c\x48\x55\x31\x13\x36\xaa\x9c\xf7\x35\x76\x39\xec\xab\x1c\x4d\x35\x9d\x61\x48\x3c\x17\xf0\x2d\x7c\xb7\x58\x2c\x8e\x5c\x68\x54\x90\x58\x88\xd3\x83\x01\x29\x24\x23\xe8\xc0\x4a\xfc\xa4\x0d\x33\x3c\xab\xd0\x6c\x65\x7e\x48\x41\xb6\xc5\xec\xef\x94\xce\x1a\x9d\x66\x32\xc7\x50\xe1\xce\x0f\x88\xf6\x20\xa1\x24\xc6\x9e\xd4\x78\xce\x0b\x27\xf2\x03\xbc\x59\x2c\x40\x2a\xb7\xfc\x11\xde\xbc\x7d\x7b\x30\x43\x0f\x2a\x55\xe9\x0d\x65\xc6\x6f\x20\x50\xae\x83\x20\xb4\x8a\x2d\xfd\x76\xd1\x12\xda\xb5\xcc\xf7\x87\x04\xd2\x76\x62\x6d\xcf\x81\x4e\x12\x42\x64\xf0\xb3\x89\x26\x4e\x14\xe3\x1a\x2f\x6c\xd9\x1e\x50\xf4\xaf\xf9\xa9\x95\x24\xb5\x74\xd7\xa0\xda\x87\xf6\xd7\xcb\x0e\x2f\x40\x48\x03\x76\x7b\x1a\xac\x42\xd3\x28\x31\x6e\xed\x6a\xa6\x58\x05\x09\xb4\xdd\xb8\xd7\xb6\x03\xb3\xec\x6a\x02\x3b\xa7\x97\xfb\x7d\xdd\xd3\xcb\x9f\x64\xf3\x8e\xb4\xd0\xa0\xd2\x96\x38\x07\x4d\x73\xec\x8d\x17\xb6\xb7\x9c\x21\x6a\x2c\xe0\xe2\x1c\x2c\x8b\xe5\x99\x51\x7f\xda\xd3\x4f\x47\x6a\x7f\x9d\x4a\x5b\xe4\x27\x72\xd4\xa2\x27\x3c\x1a\x92\xe9\xc8\x36\x81\x51\xfd\x62\xb4\x87\x96\x0e\x20\xfc\x48\x82\x96\x86\xe6\x40\xc1\xba\xd7\x9f\x8d\x51\x7c\xdd\x98\x7e\x1d\x4d\x51\xf7\xd4\xe1\xe5\x0d\x45\x6e\x13\x12\x4c\xd3\xed\xc0\x06\x63\xf9\x36\x68\xdc\x70\xdb\x68\xed\xf8\x7a\xb6\x07\x32\xa0\x67\x83\x06\x7a\x0e\xd2\x31\x30\xad\x9b\xca\x92\x17\x70\x0d\x66\xcb\x8c\x3d\xef\xbd\x68\x60\x02\x98\x52\x6c\x1f\x83\xd9\x62\x6f\x9a\xe4\x18\xe4\x3c\x33\xbd\x78\xc6\x04\x64\x52\x18\xc6\x85\x1f\x8b\x77\x9d\x5c\x52\x74\xaf\xe6\x00\x8f\x93\x12\x3c\x2e\xa1\x5f\x5b\xe5\x89\xa0\xbb\x62\xfc\x4d\x3f\x52\x8b\x37\xb5\x99\xd2\x90\xf4\xb4\x71\xb6\xcf\x47\x8d\x2d\xb2\x9c\xe0\x24\xd0\xce\x28\x28\x14\xe6\x9a\xaa\x3f\x5b\xba\x6b\x4b\xe6\xfb\xdf\x79\x85\x0e\xca\xac\xf3\xea\xb2\xeb\xc9\xc3\x32\x70\x3c\xd4\x23\xb6\x74\xc8\x1a\xb3\x4d\xc2\x91\xcf\xe6\x53\x06\x8b\xe6\x83\xdf\xc4\xfd\x13\x0f\x13\xe8\xc4\x8f\x60\x64\xe3\xc4\x67\xd0\x28\x98\xd2\xe2\x2b\x3c\x77\x90\xca\x28\x1e\xc7\x73\xce\x9d\x45\x3b\x8d\x37\xf2\x27\xbf\x57\xf9\x2a\x39\x9f\x83\xe5\xff\xa6\xa5\xf3\xf4\xb8\x04\x1f\x09\xb5\x1b\x31\xcf\x93\x96\x62\x09\xad\x85\xe2\x71\x25\x2d\x13\xfb\x1b\x79\x31\x7e\x0d\x2f\x08\x1b\x69\x40\x4b\xa2\x39\x2e\x36\xde\x91\x51\x7b\x30\x12\xec\x18\x71\x03\x5c\x18\x09\x0c\x4a\xae\x0d\xc8\x62\x98\x8c\x51\xde\xad\x21\x81\x4f\x07\xca\xa0\x1b\x58\xae\x9f\x88\x7a\x28\x8d\x84\x2d\x3c\x9a\x64\x6a\x4d\x5e\x40\x7c\xd3\x68\x23\xab\x15\x6a\xd9\xa8\x0c\x4f\x5b\x78\xf4\x10\xb3\xba\x46\x91\x87\xc3\xd7\x91\x13\x0d\xc9\x78\x22\xd7\x4f\x51\x74\x62\x1f\x4b\xfd\x5f\xd6\x48\xf1\x54\xaf\x1f\x99\x63\x4e\x19\x42\x1f\x49\xa5\x96\x7a\x60\x15\xb2\x73\x9e\x4e\xee\xfe\xf8\x70\x0f\x0c\x04\xbe\x4c\x3e\x4a\x28\xc3\x5b\x04\x8d\xea\xd9\xbb\xb9\x1f\xe5\xfa\xe9\x11\xaa\x46\x1b\x58\x23\xb1\x8b\xaf\xd2\xfb\x3f\xeb\xe4\xe4\x1e\x38\x1a\xb7\x11\xe9\x65\xf3\x76\xc2\xfd\xc7\xcf\xb9\x49\x9b\xc3\x50\x8a\x98\xe9\x94\x08\x30\x8c\x4e\x59\x7f\x84\x84\xc3\x57\xa1\x8e\x6f\xa4\x10\x98\xd1\xbb\xbb\x03\xce\x09\xdd\xbb\x79\x06\xa6\xe9\x03\xe2\xa2\xa9\x3a\x7c\xe8\xa2\x52\x97\x32\x41\xdb\xba\x4b\xe5\x9f\x00\x00\x00\xff\xff\x09\x4d\x26\xca\xbd\x0c\x00\x00")

func templatesClient_v2_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_v2_pythonTmpl,
		"templates/client_v2_python.tmpl",
	)
}

func templatesClient_v2_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_v2_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_v2_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDateTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x49\x2c\x49\x55\xaa\xad\xe5\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xa8\xae\xd6\x0b\x80\x30\xfd\x12\x73\x53\x6b\x6b\xb9\xb8\xaa\xab\xf5\x9c\xf3\xf3\x4a\x52\xf3\x4a\x20\xbc\xd4\xbc\x94\xda\x5a\x2e\x40\x00\x00\x00\xff\xff\x38\x57\x68\x75\x42\x00\x00\x00")

func templatesDateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDateTmpl,
		"templates/date.tmpl",
	)
}

func templatesDateTmpl() (*asset, error) {
	bytes, err := templatesDateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/date.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDocs_markdownTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x54\xc1\x6e\xdb\x30\x0c\xbd\xeb\x2b\x88\x3a\x27\xa3\xf1\xee\x45\x1a\x60\x5d\x0f\xeb\x61\x5b\x96\xa5\xbb\x2e\x5a\xc2\x2c\x02\x62\x4b\x93\x94\x16\x86\xed\x7f\x1f\x28\x4b\x91\xe4\x74\x1f\xd0\x83\x01\x99\x7c\x7c\x24\x1f\x45\x15\xd0\x75\x50\x7d\x54\xa2\xda\x08\x7b\x42\x18\x06\xc6\x16\x1c\x1a\x5e\xe3\xfd\x8d\x7c\x41\xfd\x22\xf0\xf5\x66\xb9\xf8\xc0\x97\xac\x28\xe0\x9b\xb7\x30\x56\x14\x05\xfc\x44\x6d\x84\x6c\x40\x34\x07\xa9\x6b\x6e\x85\x6c\x58\xe9\x8d\x25\xdc\x5d\xa8\x03\x8e\xc8\x29\xee\x79\xfd\x04\x66\x77\xc4\x1a\x59\xf9\xc0\x0d\xae\xb8\x3d\xa6\x78\xb2\x11\x26\x2b\x46\x71\x7b\x34\xb1\x12\x8a\x31\x8c\x75\x1d\x68\xde\xfc\x41\x98\x69\x34\xf2\xac\x77\xf8\x95\xd7\x78\x1b\x7f\xe1\xee\x1e\xaa\xb5\xff\x31\x30\x1f\x86\x24\xe6\xd7\x2d\xcc\x6a\xb4\x47\xb9\x27\xd8\x25\xa6\xfa\xe2\x6c\x23\x3a\x56\xd0\x75\x01\x5d\x3d\x0a\xa3\x4e\xbc\xa5\x5c\xc3\x70\x29\xca\x89\x29\x75\x44\xa1\xd9\x69\xa1\x48\x97\xb7\x22\xf3\x9a\x5d\xb7\xdb\xed\x96\x25\x69\xbc\x9d\x68\xaf\xb0\x04\x2d\x28\x67\x92\x25\x8d\x4d\x93\x7b\xe1\x49\x35\xcd\x6b\xb4\xa8\x0d\xeb\x37\xad\xc2\x9e\xd8\xfa\x04\xda\x3f\xe2\x81\x9f\x4f\xb6\x67\xfd\x7c\x3e\xcf\xbe\x44\x37\x45\x34\x5e\x68\x77\xce\xe5\x7b\x5e\x3f\xc5\x44\x4e\xc4\xbe\x2c\xa9\x34\x87\xad\x28\x31\x0c\x43\x59\xa6\x56\xdf\x56\x59\x52\xb3\xe2\x10\xb0\x6b\xfc\x7b\x16\x1a\xf7\xa4\x02\x2c\x7e\xeb\x65\xa9\xbd\xc5\x01\xb1\x21\x4f\x0f\x91\x3c\x6f\x3b\xf7\xb8\xce\xc8\xca\x7c\x68\x7e\x1b\xde\xee\xca\xcb\xf9\xfd\x8c\xba\x7d\x3f\x5d\x8d\xe3\x5e\xa3\x51\xb2\x31\x68\x18\xeb\x3f\x6f\x36\x2b\xf8\x24\xf7\xf9\xb8\x7f\xd0\x1a\xf2\xc9\xb4\xf3\xad\x52\x14\x34\x6e\x94\x4a\x15\xb9\x90\xa7\x5a\x04\xfc\xa8\x44\xb8\xb8\x6a\xd2\x00\x24\x9e\x07\xb9\x17\x68\xaa\xb1\x90\xab\x36\x2e\x6a\x24\xa7\xb8\x91\xb6\x55\x98\xbc\x09\x34\x02\x93\x14\x4f\x6e\x3f\x4f\x3a\xba\xa7\xc0\x3d\x75\x84\x83\xab\xdd\x0e\x70\x98\xae\x74\xea\x61\xe1\xff\x6a\xc1\xae\x77\xc9\x6d\xd8\x7f\xa5\x55\x5a\xaa\x70\xdb\xb4\x1c\xa5\x75\xc4\x2b\x2d\x15\x6a\x2b\xe2\x73\xf5\x2a\xec\x71\x44\xa1\xb6\x2d\x21\x77\xfc\x74\x82\x59\x80\xb6\x91\xcd\x93\xa5\xd7\x33\x78\xe2\x48\x02\xd3\xf4\x5e\x65\x3e\x7f\xa1\xa7\xcb\x32\x1d\x0d\x9d\xff\x05\x00\x00\xff\xff\x6b\xcf\x30\x80\x46\x06\x00\x00")

func templatesDocs_markdownTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDocs_markdownTmpl,
		"templates/docs_markdown.tmpl",
	)
}

func templatesDocs_markdownTmpl() (*asset, error) {
	bytes, err := templatesDocs_markdownTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docs_markdown.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEnum_capnpTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8d\x41\xaa\x02\x31\x10\x05\xf7\x39\x45\x33\x64\xf9\x27\x07\xf8\x83\xa0\x20\x82\x1b\xaf\x20\xc1\xb4\x12\x34\x9d\x30\x66\x66\xf3\xe8\xbb\x4b\x88\x82\xe0\xae\x1f\x54\x55\x03\x81\xaf\x51\x98\x06\x96\x25\x9d\x2f\xbe\x48\x19\x68\x54\x35\x80\x3b\xa6\x92\xe7\xfa\x7c\x8f\xbd\xea\x64\x80\xd9\xcb\x8d\xc9\xde\xff\xc8\xae\xf4\xbf\x21\xb7\x13\xc9\xd5\xd7\x98\xa5\x93\x76\x55\x9d\x00\x96\xa0\x6a\x5a\x95\x00\x77\xf2\x89\x55\x09\x06\x18\xe9\x27\x71\x88\xfc\x08\xcd\x26\x6a\xfe\x87\xde\xf6\xb1\xa4\xaf\x60\xfb\xd0\xaf\x57\x00\x00\x00\xff\xff\x10\xab\xd6\x7f\xbb\x00\x00\x00")

func templatesEnum_capnpTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnum_capnpTmpl,
		"templates/enum_capnp.tmpl",
	)
}

func templatesEnum_capnpTmpl() (*asset, error) {
	bytes, err := templatesEnum_capnpTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum_capnp.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEnum_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\xcc\xbd\xaa\xc2\x40\x14\xc4\xf1\xfe\x3c\xc5\x10\xb6\xb8\x17\x34\x0f\x20\xa4\xb5\x14\x0b\xb1\x95\x25\x7b\x5c\xc2\x26\x9b\xc5\x7c\x40\x38\xcc\xbb\x8b\x8a\x95\xdd\x6f\xa6\xf8\x9b\x05\xbd\x77\x59\x51\x69\x5e\x86\x5b\x1c\x2b\x52\x8a\x6f\x93\x8f\x0a\xb3\xfa\x9c\x22\x29\xf3\x56\xde\xeb\xe4\x07\x25\x5f\xba\x6c\x45\x49\x91\x76\xcc\xd3\x8c\x3f\x31\xdb\xe3\xe1\x73\x54\xb8\xb4\x83\x5b\x71\x68\x50\x1f\x3b\xed\xc3\x44\x0a\x00\x98\xb9\xf5\x27\x80\xe6\xf3\x5f\x7d\xbf\x28\x69\xa6\x39\x90\xf2\x2f\x5f\x3d\x03\x00\x00\xff\xff\x7e\x16\x9a\x45\xa0\x00\x00\x00")

func templatesEnum_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnum_goTmpl,
		"templates/enum_go.tmpl",
	)
}

func templatesEnum_goTmpl() (*asset, error) {
	bytes, err := templatesEnum_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEnum_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xcd\x2b\xcd\x8d\xcf\xcb\xcc\x55\xaa\xad\xe5\x2a\xa9\x2c\x48\xe5\x52\x50\xa8\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\xd5\x52\xb0\x55\x00\xc9\x73\x29\x28\x80\x45\xdd\x32\x53\x73\x52\x8a\x83\x4b\x8a\x6a\x6b\xb9\xaa\xab\x53\xf3\x52\x6a\x6b\xb9\x00\x01\x00\x00\xff\xff\x71\xbd\xd9\xea\x4a\x00\x00\x00")

func templatesEnum_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnum_nimTmpl,
		"templates/enum_nim.tmpl",
	)
}

func templatesEnum_nimTmpl() (*asset, error) {
	bytes, err := templatesEnum_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEnum_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\x8c\x4f\x0b\x82\x40\x10\xc5\xcf\xcd\xa7\x78\x88\x87\x02\xf5\x03\x08\x42\x97\x3a\x76\xec\x1a\x4b\x8e\xb5\xe4\x8e\xa6\xae\x10\xc3\x7c\xf7\x58\xb2\xd3\xfb\xc3\x7b\x3f\xd5\x12\x2d\x77\x5e\x18\x19\x4b\x0c\xb7\xf1\xb3\x3c\x07\xc9\x50\x9a\x51\x37\x0d\x01\xa9\x85\x0f\xe3\x30\x2d\x38\x49\x0c\x05\xa2\xf8\x77\x64\x22\x3a\x6e\xee\xde\xbb\x79\x86\x6a\x75\x71\x81\xcd\xf6\x69\x76\xa8\x69\x97\xe0\x93\x93\x07\x23\x7f\x15\xc8\x57\xd4\x0d\xaa\xb3\xe7\xbe\x9d\xcd\x08\x00\x54\xf3\x75\x7b\xa1\xf9\xa5\xab\xeb\x23\x9b\xa9\xb2\xb4\x66\xf4\xd7\x6f\x00\x00\x00\xff\xff\xa8\x9d\x91\xbe\xa9\x00\x00\x00")

func templatesEnum_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnum_pythonTmpl,
		"templates/enum_python.tmpl",
	)
}

func templatesEnum_pythonTmpl() (*asset, error) {
	bytes, err := templatesEnum_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGeneric_mainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x1c\xc9\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x3f\x85\xb8\x9a\x39\x95\x04\xfd\x4a\x68\x0d\x52\xec\x2a\xe4\xee\xa5\xdd\x3d\x78\xee\x8d\x5d\x8d\x29\x0f\x1a\x2f\xad\x65\x8a\x5a\xd9\x9c\xeb\x94\xcd\x1c\x81\x25\xf5\x90\xc1\xf4\x06\xd0\x6f\xab\x1f\x7f\x7f\x07\x02\xee\xb4\x16\x81\x27\x00\x00\xff\xff\xdc\x57\x73\x81\x49\x00\x00\x00")

func templatesGeneric_mainTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGeneric_mainTmpl,
		"templates/generic_main.tmpl",
	)
}

func templatesGeneric_mainTmpl() (*asset, error) {
	bytes, err := templatesGeneric_mainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/generic_main.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIndexHtmlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x4e\x03\x21\x10\x86\xef\x7d\x8a\xc9\xde\x65\xd2\x1e\x0d\xc5\x98\x78\xd1\x93\x89\x7d\x01\x0a\xb3\x05\x03\x0b\x01\xd6\xb8\x21\xbc\xbb\xd9\xa2\xd9\x3d\x78\xfb\x08\xf3\xf1\x0f\x7f\xad\x9a\x46\x3b\x11\x0c\x76\xd2\xf4\xcd\x4c\xf1\x6e\x68\xed\xc0\x57\x10\x07\x00\x00\x6e\x48\xea\x8e\xf7\x63\xb1\xc5\x91\xa8\x95\x5d\x56\x68\x0d\x3e\x28\x7d\x51\xe2\xd8\x2f\xba\x83\x9b\xc4\xaf\x41\x2f\x3b\xdf\x1c\x05\xfc\x63\x9b\xe3\x6e\x26\x6e\x7c\x31\x36\x43\xbe\x0f\x81\xcd\x20\xe7\x12\xbc\x2c\x56\x49\xe7\x16\xb8\xd1\x44\x49\x16\xd2\x30\xa6\xe0\x81\x25\xe9\x1d\x8c\xd6\x11\x5c\x17\xe0\x12\x4c\xa2\xf1\x3c\x98\x52\x62\x7e\x44\xbc\xd9\x62\xe6\x2b\x53\xc1\xe3\xdb\xec\x63\x56\xd2\x11\xde\xc2\xc3\x6a\x0d\xe2\x17\x38\x4a\x01\x31\x85\x4f\x52\x85\x6d\x1b\xe1\x6e\x25\x8e\x26\xed\x3f\x74\x12\x5b\x96\x8c\x56\x07\x95\x71\xab\xf3\x69\x7d\xf5\x2c\xa3\x65\x3d\xe7\xf9\xfd\x15\x5e\x82\xca\xb0\x26\x71\x34\xa7\xbf\xca\x7a\x4f\x1c\x7b\xf5\xb5\xd2\xa4\x5b\x3b\xfc\x04\x00\x00\xff\xff\x56\x0e\xa1\x8a\xa2\x01\x00\x00")

func templatesIndexHtmlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIndexHtmlTmpl,
		"templates/index.html.tmpl",
	)
}

func templatesIndexHtmlTmpl() (*asset, error) {
	bytes, err := templatesIndexHtmlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/index.html.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInit_pyTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesInit_pyTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInit_pyTmpl,
		"templates/init_py.tmpl",
	)
}

func templatesInit_pyTmpl() (*asset, error) {
	bytes, err := templatesInit_pyTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/init_py.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInput_validators_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\xcf\xc2\x92\x0a\x52\x3c\x0b\x3d\x7a\xf4\xea\x75\x89\xcd\xc4\x0e\x6e\x92\x65\x32\xa9\xc8\xb2\xff\x5d\xd2\x2c\x56\x9d\x53\x18\xbe\x79\xdf\xcb\xb2\x78\x0a\x9c\x08\x3b\x4e\x73\xd5\xf1\xe2\x26\xf6\x4e\xb3\x94\x71\xfe\xd2\x73\x4e\xbb\x75\x35\x41\x72\xc4\xa7\x86\x2c\xb1\x1c\x6e\x04\x38\xce\x59\x14\xaf\x7d\xc3\x39\x3d\x8b\x64\x31\xc6\x53\x40\xac\x93\xf2\x3c\xd1\x98\xc3\xbe\xbd\xef\x9f\x0c\x00\x58\x6b\x71\x3a\xd3\xe9\x03\x1c\x70\x71\x53\x25\x70\xd9\x60\x42\xee\x77\xd6\x5a\x73\xa5\x23\x95\xe2\xde\x09\x47\xd8\x97\x5a\x14\x6f\xf4\x93\xdb\xd8\xc1\x5b\x0c\xe8\xf1\xfd\xa0\x99\xc7\xdf\xea\xd6\xf9\x01\x81\x69\xf2\x5b\x83\x36\x1c\xfa\xea\xe0\x9d\x3a\x0c\xd7\x50\xdc\x1d\xf1\x78\x43\xda\x88\xe3\x42\xff\xbf\xb7\xdf\x4a\x6d\x46\x21\xad\x92\xfe\x48\xcd\xb2\x50\xf2\xeb\x6a\xbe\x03\x00\x00\xff\xff\x71\x8f\x4e\xd5\x5d\x01\x00\x00")

func templatesInput_validators_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInput_validators_pythonTmpl,
		"templates/input_validators_python.tmpl",
	)
}

func templatesInput_validators_pythonTmpl() (*asset, error) {
	bytes, err := templatesInput_validators_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/input_validators_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLibjwt_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\xdd\x73\x1b\x37\x92\x7f\xe7\x5f\xd1\xa5\x7d\x38\x49\x45\x33\x8e\x6f\x93\xba\xb2\x36\x5b\x66\x14\xda\x91\x4b\x91\x5c\x22\xbd\x3e\x3f\x71\xc1\x99\x26\x09\x7b\x08\xcc\x02\x18\xd1\x3c\x97\xff\xf7\xab\xee\x06\xe6\x83\x22\xf5\x15\xc7\xd9\xab\xba\x3c\xec\x92\x14\xd0\xe8\xcf\x5f\x77\x03\xed\xcf\x9f\x9f\x40\x8e\x73\x6d\x10\x0e\x0a\x3d\xfb\xb0\x0e\x53\xa3\x57\x07\xf0\xe4\xcb\x97\xde\x5f\xfe\x02\x70\x6a\xcb\x8d\xd3\x8b\x65\x80\xc3\xd3\x23\x78\xf6\xf4\xfb\x1f\x9e\x3c\x7b\xfa\xfd\x8f\xf0\x33\x1a\x38\xb5\x45\xa1\x8d\x87\xbf\xcd\xd0\xbc\xc8\x36\xe5\xd2\xe1\x20\xb3\xab\xbf\xf3\x46\x80\xc9\x52\x7b\x98\xeb\x02\x41\x7b\x28\x95\x0b\x60\xe7\x10\x96\x08\xaf\xdf\x4d\xe0\x14\xce\xf5\xcc\x29\xb7\xa1\xc5\xed\x0d\x85\xfc\x4c\x7b\xe6\x0e\x11\xbc\x9d\x87\xb5\x72\x78\x02\x1b\x5b\x41\xa6\x0c\x38\xcc\xb5\x0f\x4e\xcf\xaa\x80\xa0\x03\x28\x93\x7f\x67\x5d\xa4\xb1\xb2\xb9\x9e\x6f\xe8\xe7\xca\xe4\xe8\xf8\xbc\x80\x6e\xe5\xd3\xe1\xaf\x2e\xde\xc2\x39\x7a\x8f\x0e\x5e\xa1\x41\xa7\x0a\x78\x53\xcd\x0a\x9d\x45\x02\xe7\x3a\x43\xe3\x11\x94\x87\x92\x7e\xf7\x4b\xcc\x61\xb6\xe1\xbd\x2f\x89\xa1\x71\x64\x08\x5e\xda\xca\xe4\x2a\x68\x6b\x4e\x00\x75\x58\x62\xe2\xe1\x1a\x9d\xd7\xd6\xc0\xb3\xc1\xf7\xe9\xd4\x48\xb5\x0f\xd6\xc1\xa1\x0a\x24\x8b\x03\x5b\xd2\xe6\x23\x50\x66\x03\x85\x0a\xe8\xd2\xce\xc1\x2d\x4a\x69\x64\xcf\x41\x1b\x26\xbe\xb4\x25\x42\x58\xaa\x40\x62\xaf\x75\x51\xc0\x0c\xa1\xf2\x38\xaf\x8a\x7e\xa4\x32\xab\x02\xbc\x3b\x9b\xfc\x7a\xf9\x76\x02\xc3\x8b\xf7\xf0\x6e\x78\x75\x35\xbc\x98\xbc\x3f\x81\xb5\x0e\x4b\x5b\x05\xc0\x6b\x14\x6a\x7a\x55\x16\x1a\x73\x58\x2b\xe7\x94\x09\x1b\xb0\xf3\x48\xe4\xb7\xd1\xd5\xe9\xaf\xc3\x8b\xc9\xf0\xe7\xb3\xf3\xb3\xc9\x7b\x92\xe5\xe5\xd9\xe4\x62\x34\x1e\xc3\xcb\xcb\x2b\x18\xc2\x9b\xe1\xd5\xe4\xec\xf4\xed\xf9\xf0\x0a\xde\xbc\xbd\x7a\x73\x39\x1e\x0d\x00\xc6\x88\x49\xf1\x49\xc5\xbb\xd4\x5f\x2b\x7e\x6e\x1d\xac\xac\x43\xc8\x31\x28\x5d\xf8\xb6\x32\xde\xdb\x0a\xfc\xd2\x56\x45\x0e\x4b\x75\x8d\xe0\x30\x43\x7d\x8d\x39\x28\xc8\x6c\xb9\x79\xb0\x8d\x0b\x6b\x16\xac\x81\x7a\x5b\xed\x97\x27\xa0\xe7\x60\x6c\xe8\x83\x47\x8c\xfb\xfe\xb6\x0c\xa1\x7c\xfe\xdd\x77\xeb\xf5\x7a\xb0\x30\xd5\xc0\xba\xc5\x77\x85\xd0\xf2\xdf\xfd\x9d\x19\x3d\xe6\xa5\x2f\xd8\xed\x3f\xac\xc3\x60\x29\xdf\x67\x4e\xe3\x7c\x87\xe3\xf7\x3e\x0f\x72\x54\xf9\xa9\xcd\x71\x54\xe8\xd5\x73\xb0\x66\xf0\xa5\xb7\x5e\xa2\x89\x51\x99\x1f\xae\x54\x66\xfd\xa7\xa3\xe7\x3d\x80\xcc\x1a\x1f\x7a\xc4\x49\xa1\x67\x46\xad\xf0\x18\x7e\x4a\x61\x3b\xc8\x37\x85\x9e\x1d\xf4\xb0\xf0\x78\xe7\x5a\x6f\x0f\x98\x59\xf8\xa0\x8c\xf7\xd6\xc0\x71\xaf\x17\x36\x25\xf6\x00\x3e\x78\x6b\xa6\xf4\xf9\x18\x3e\x0f\xbc\xfe\x1f\x7c\x0e\xf4\xbf\x76\x7e\x98\x69\x13\x8e\x06\x5f\xe0\x27\x40\x53\xad\x98\xf4\xeb\xf1\xe5\xc5\xf4\xf2\xe7\xd7\xa3\xd3\x49\x5f\xbe\x90\x5f\xbd\x8f\x9f\xc7\x93\xab\xb3\x8b\x57\xf1\xcb\xd9\xc5\x64\xf4\x6a\x74\x15\xbf\x5d\x8d\x86\xe7\xf1\xe3\xe4\xea\xed\xa8\xdf\x50\x7b\x39\x3c\x1f\x8f\xe2\x9f\x2e\xde\x9e\x9f\xd7\x2c\x11\xff\x76\xf6\x01\x33\x91\xea\x9f\xc4\xe3\x3f\x8f\x9f\x37\x0c\xf3\xcf\x0e\xe7\x99\xad\x4c\x38\x7e\x0e\x19\xf1\xdd\xeb\xf5\x7a\xa5\xb3\x99\x2c\xcb\xab\x55\xe9\x8f\x0f\xe9\xf3\x73\x28\x83\x8b\x9b\x4f\x60\x5e\xa8\x85\x8f\x5b\x8e\xe8\xff\x83\xd3\x66\x01\x9f\x07\x59\x8e\x59\x21\xec\xe9\x55\x69\x5d\xc8\x9e\xc3\x41\x43\xeb\xa0\x0f\xf9\xc6\x14\x7a\xf6\x3c\xa9\x79\xf0\x45\x34\x8b\x26\x6f\x69\x97\x7f\x22\xf3\xab\x62\x61\x9d\x0e\xcb\x15\x10\xcb\x7e\xd0\xe8\x7d\x1d\xa6\xaa\x58\x90\x9c\xf7\xd0\xfb\xbb\xc9\x74\x78\xfe\x6a\x7a\x71\x79\x31\x82\x9f\xe0\x69\xbf\xfe\xe5\xd7\xf1\xb3\x1f\x7e\x6c\x7f\xfd\xcf\xff\xfa\x6b\xfb\xeb\x0f\xdf\x3f\x6b\xbe\x5e\xf1\xe2\x0e\xc5\xab\xee\x86\xab\xee\x86\x51\x97\xfa\xa8\xbb\x78\xc4\x8b\x3b\xe4\x26\xa3\xab\xdf\x7a\x6d\x19\xb7\xac\xa8\x8a\x05\x99\x30\xc9\xce\xbf\x7d\xc4\xcd\xb1\x58\x27\xab\xb2\xa5\x72\xe9\xc7\x69\x81\x86\xcc\xaa\x8d\xac\x5b\x10\x3c\xf9\xe3\xb6\x21\x7b\x3d\xd1\xf4\x65\xa9\xfe\x55\x49\xa2\x91\xc3\xba\x7a\x66\x2e\x3e\xac\x43\xaf\x15\xb1\x39\xce\x17\xce\x56\x25\x2f\x30\xb8\xe6\xcd\x97\xbc\x19\x4e\x1d\x32\xce\xf3\xca\x97\x95\xc9\xe8\x8b\x27\x88\xcd\x21\x58\xc8\xe8\xcf\x48\x79\x08\x72\xf4\xc1\xd9\x4d\xeb\xe4\x16\x7e\x45\x2c\x2a\x36\x7d\xb0\x06\x61\xcd\x38\x56\x79\x81\xc7\x78\xec\xe1\x11\xcc\xe3\x01\x1d\xd2\x49\x69\x44\x67\xee\xec\x0a\x7c\xe6\x54\xc8\x96\x7c\x2a\xed\xcd\x31\xb3\x39\x1e\x1e\x6d\x31\x74\x8d\x8e\xf2\x21\x7d\x14\x0a\xb2\x5b\x89\x2c\xf8\x49\xfb\x40\x8e\x1e\xec\x47\x6c\xa5\x9d\x0b\x1b\xb0\x0f\x0c\x43\x95\xa7\xbf\x5f\x8d\x87\x64\x02\x0f\x87\x38\x58\x0c\x04\x32\xd9\x7b\x8e\xfa\xcc\xfd\x47\xe4\xe4\x84\x9f\x4a\xcc\x82\x68\x65\x26\xa8\xa9\xa0\x74\xfa\x9a\xd8\xe1\x35\x06\xde\x8c\x7e\x23\x8c\x5f\xa9\x30\x80\x33\xc1\x6b\xa2\xde\x5e\xe5\xf0\x5f\x95\x76\xe8\x69\xb3\xf2\xbe\x5c\x3a\xe5\x51\x52\x19\x2d\xcf\x71\xae\xaa\x22\xd0\x81\xc1\xf2\x62\xf4\x9c\xfb\xac\x64\xb0\xcc\xae\x56\x24\x70\x41\x55\x8d\x28\x2b\xe4\xda\x0c\xe0\x57\xbb\xc6\x6b\x74\x42\x29\x95\x13\xf6\x1a\x9d\xd3\x39\x59\x41\xfb\x28\xee\x65\x89\x66\x3c\x3e\xff\x0f\x9f\xce\x9a\x12\x1f\xeb\x1c\x9c\xad\x82\x36\xe8\x07\xf0\x32\x96\x1c\xf8\x49\xad\xca\x02\xfb\x71\xe7\x78\x7c\x3e\x3d\x9d\xfc\xf7\xd4\x23\x99\xa4\xbd\x77\x9a\xcd\x0e\x8f\x06\xe2\x6c\x9f\x93\xa6\xc5\xf9\x86\x45\x61\x33\xb6\x18\x18\x5c\xf7\x01\x57\x65\xd8\xf4\x3b\xee\x9b\x2c\xc3\xe5\x80\xbe\xe9\x7b\xb4\xb1\xb6\xb0\x75\xa0\x68\xf7\x00\x86\x73\x2a\x2b\x48\x54\xce\x97\x73\x6d\xb8\xa0\x61\x52\x75\xde\x93\x6d\x7d\x76\x45\x72\x25\xaa\xbb\xa2\x23\x15\xa8\x0c\x54\x25\x2f\x5b\xe1\xca\xba\x8d\x9c\x3c\xa3\x12\xab\xe1\xea\x45\xa9\x9c\x5a\xd1\x66\x78\x63\xb5\xa1\x33\x83\x15\x1e\x12\x53\xa5\xfc\x3e\x80\x77\xb1\x40\x51\x51\xe8\x1c\x62\x60\xd1\x7f\xbe\xca\x32\xf4\x3e\xaa\xc9\x61\xa8\x9c\x81\xa7\x64\xd8\xf8\x97\x3e\x5c\xab\x42\xe7\x80\xce\x19\x0b\x96\xaa\xae\xb5\xf6\x28\xac\x44\xa4\x97\x48\x3a\x3e\xfc\xb0\x0e\x02\x0e\x0c\x10\x14\xf7\x47\x02\x1f\x35\xae\xb7\x31\x5d\x76\xed\x05\x74\xe6\xe8\x1f\x29\x9a\x9a\xc8\x61\x50\x37\x79\x2d\x4e\x34\x45\x4b\x72\xf6\xc0\xb6\xb6\x7e\xe1\x50\xf5\x51\x3f\x31\xd5\xd4\xc1\xaa\xd1\xb3\xba\xbd\x5e\x18\x15\x2a\x87\x70\xa8\xe7\x0c\x18\xda\x83\xaf\x4a\xae\xce\xa2\x23\x9d\x51\x89\xd2\x5a\x99\x1c\xe3\xf0\xf5\xbb\x71\x9f\xc0\xf5\xa7\x03\x63\x0d\x1e\x1c\x51\xad\x16\x63\x94\x92\x2a\x07\xad\x01\x63\x99\x0a\x6b\x94\x01\x8e\x0b\x4c\x3a\x8a\x15\x4b\x35\xa5\x89\xb1\x4a\xb2\x0e\xe0\x8c\x83\xce\xd8\x00\xbe\x5a\x2c\xd0\xc7\x50\xaf\x3c\xc6\xe0\xd4\x9e\x6c\xa5\x92\x50\x5c\x94\x2e\x15\x89\xda\x30\x99\x2a\x4e\x0a\x0b\x59\x24\x51\x1f\x22\x37\xa2\x63\xdd\xc0\x03\x69\x89\xc0\xc5\x64\x6e\x53\xd2\x91\xa4\x2b\x63\x93\x40\x49\x27\x7d\xb6\x8b\x73\x31\x30\xb5\x07\xf1\x1f\xcc\xff\x70\x47\x15\xaa\x0c\xa2\x5d\xba\xe2\xac\x8d\x99\xfb\x60\xaa\x82\x1b\x12\x6d\x88\x64\x67\x3f\xc9\xd3\xda\x9d\xf4\x42\xe1\x9c\x4c\x14\xd5\xc5\x04\x6b\x85\x5a\x47\x6b\x6a\xd6\x72\x64\x3d\xa5\xb5\xc2\x95\x75\x6c\x78\x29\x6a\xb7\x2c\xce\x60\x0d\x25\x3a\x32\xf5\x4d\x9e\x28\xef\xc2\x64\x89\x50\xa0\x59\x84\x65\x2a\xb2\xd5\xcc\x5e\x33\x83\x8f\x0c\xd6\xb8\x69\xa5\xdc\x47\x32\xb4\xba\x69\xce\x86\xfb\x55\xe5\xc5\x5f\x48\x6a\xc8\x96\x98\x7d\x24\x89\xa2\xa4\xb5\xe4\xa4\x29\x1d\x92\x3c\xca\x51\x28\xd4\xfd\x0d\x39\xc6\x20\x46\xcc\xae\xa3\x0c\xa8\x9a\x90\xb1\xe6\x49\xe3\x6e\xc2\x43\x6a\xac\xb6\xe8\x52\xf3\xc6\x0c\xf9\x88\xbb\x2c\x72\xe3\x27\xc9\x4a\x7d\x58\xc6\xec\x03\x3e\x28\x93\x2b\x97\xb7\xcd\x10\x95\x2a\x47\x11\x6b\x41\x17\x45\x4d\xa5\x6b\x9b\x16\xce\x49\xd6\xdf\x05\x75\x27\x42\xab\xae\x65\x4f\x48\xe8\xee\x37\x32\xac\x00\x62\x83\x8b\x5c\x59\xed\x04\x47\x39\xea\x76\x7c\xe4\x06\xb9\x13\x4d\x0c\x8d\x66\x13\x01\xc5\xa1\xb7\x95\xcb\xd0\x93\x99\x52\xb6\x6d\xdc\x41\xb2\x55\xa6\x8a\x82\x43\x25\x79\x7a\x24\xe5\x70\x8e\x0e\x4d\xc6\xca\x2f\x0a\xb2\x23\xf5\x6f\xe8\xc8\x2a\xe2\x68\xca\x88\xe6\x75\xf0\x29\x5d\x25\xb3\x51\x52\x7b\x20\x10\x38\xbc\xd6\xb6\xf2\xc5\x26\x66\x59\x31\x7a\x53\xa9\xd5\xe6\x89\xff\x59\xd7\xa9\xc4\xb6\x6d\x45\x1c\xb4\x2c\x25\x09\x69\x5f\x2a\xa2\xc5\xb7\xeb\xfa\x97\xaa\x2c\x74\x16\xab\xc3\x4e\x3a\xda\xae\x19\x4e\x6d\x49\x49\x45\x15\x45\xac\x99\x63\xc2\x4a\x9d\x88\x2f\x31\xd3\x73\x9d\xc1\x8c\xf4\xc6\x6a\xe8\xa6\xb0\x87\xa8\xad\x8b\x06\xc3\x76\x5d\xd2\x06\x06\x06\x23\x1b\xf1\x5a\xf4\x2a\x28\xe1\xb1\x89\x67\x55\x96\xce\x96\x4e\xab\x80\xc5\xe6\x86\xeb\x57\xe5\x0d\x6d\xb6\x3e\xef\x53\x6c\x5e\x95\xfb\x9b\xb6\x17\x5f\xf6\x75\x04\xac\x38\x16\xf3\x15\x7f\xfa\x4d\x19\x5d\x56\x45\xd3\x16\x4c\x96\xe8\xb1\xae\xdd\x59\xdb\x76\xcd\x95\x17\x29\x28\xcf\xfb\xe0\x70\x45\x88\x49\xba\x77\x18\x9c\xc6\x6b\x4c\xf6\x90\x9a\x9c\xc8\x33\xad\x8e\x26\xb7\x6a\xc5\x2b\x51\x2c\xc5\xc6\xb5\x2a\x2a\x24\xe4\xa8\xf3\x2d\x93\x6b\xac\x25\x6b\x63\x39\x21\x2b\x64\x8f\x20\x95\xc8\x24\x15\xfd\x81\xf6\xfe\xe0\x88\xf1\x51\x07\xc8\x2d\x4a\x9a\x67\xbf\x92\x7a\x99\x2d\x96\xa2\xe9\x31\x99\xb5\x93\x57\xe4\xec\xb1\x30\x95\x59\x13\x94\x36\x29\x63\x91\x45\x12\x20\xca\x3a\x2e\xf3\x59\x6e\x25\x12\xb4\x21\xbf\xeb\x71\x49\xe6\x5a\x27\x24\x6b\xad\xad\x7e\x9d\x08\xd7\x52\x00\x51\xb5\x5c\x99\x7c\xbb\xf5\xe1\x4a\x86\x85\xb5\xa6\xd8\xa4\xc3\xa3\xb5\xd8\x5b\x5f\x8f\x2f\x2f\x3a\x4a\xf5\x03\x78\x1b\xeb\x20\x76\x18\x8c\x4e\x33\xa5\xd6\x54\xca\xe9\x05\x06\x01\x35\xda\xeb\xb0\x74\xe8\xd1\x84\x3a\x01\xf0\xad\x57\x66\xa9\x9d\xf8\x94\x0a\xb3\x0a\x53\xcf\xa5\x9c\x53\x1b\xcf\x95\x5c\x2a\xd4\x9b\x33\xb4\x09\xcd\x11\x5e\x13\x09\x20\x23\x2c\xe2\xa5\x64\xe4\x70\x2b\x84\xea\xfd\xdb\x81\x74\x22\xa2\xd6\xe9\xe2\x1e\x57\x22\x6d\x72\xb7\x03\xd7\x4e\x0f\x36\x89\xdd\xdb\x7c\x98\x52\xd4\x5e\x07\xc6\x4f\xe5\xed\x0e\xfc\xf4\xff\x92\xf7\xb2\x3e\x76\xf8\xee\xd3\xaf\xe3\xb8\x49\xd9\x7f\xba\xe7\xb6\xbc\xb6\x13\x4b\xfb\x3c\x95\x3c\xfd\x3e\xde\xca\x37\xbb\xf7\xf1\x55\x22\xf8\x08\x7f\x8d\xa6\x55\x5e\x54\x82\x86\x72\x7e\x7d\xc7\x22\x7c\xec\x76\xe2\xce\xfa\x87\xa0\x32\x53\xda\x72\xec\x7f\x63\x54\x96\xee\x4d\x6e\x2b\xa4\xe7\x6c\x15\x20\xdb\x1c\x03\xf7\x88\x6d\xd5\xd4\xb4\x96\xca\x2f\xbf\x0a\xc4\x53\x8a\xae\xa9\xd6\x07\x47\x12\xdc\x61\xa4\x32\x31\xbd\xf7\x50\x25\x8a\x6e\xaf\x2f\x7a\x0e\x90\xaf\x8c\x9d\x42\xf4\x76\x8f\x1c\xe6\x79\xac\xd1\xda\x79\x5f\x7a\x46\xed\x77\xd7\x80\x5c\xc1\xfa\xb8\x4d\xd6\x8b\xda\xa8\x65\x97\xc5\xdc\xe4\xb5\x54\x1a\x5d\xdc\x70\xa3\x22\x97\x79\x1c\xe6\xa5\xe6\xb7\xa7\x80\xce\xc8\x6d\xa6\xb7\x90\x5b\xd6\x74\xbc\xb9\x93\xc6\x9f\x54\x18\xbb\x69\xb2\x89\x50\x66\x3a\xd4\xf6\x69\x13\x8b\xf6\x64\xbd\x42\xcf\x31\xe8\xe4\x64\x2d\xb6\xe4\xd6\x21\x35\xf7\xd4\xc2\x6e\x6c\x25\x17\x0e\x6e\x13\xcb\xab\x3a\x70\xf8\x64\x55\x38\x54\xf9\x46\x82\xc4\x7f\xbb\x70\x50\x79\xb7\x7b\xbe\x56\xc5\x9e\xed\x12\xf1\xd2\xa9\x7a\x75\x8d\x79\xa3\xf1\x01\x9c\x2a\x93\xae\x4f\xb9\x0c\x36\x72\x23\x58\xdf\x21\xcc\xaa\x00\x99\x32\xa4\xf0\x19\xb2\xaf\xef\x0e\x90\x07\xf5\xe2\xad\xfc\xc1\xa9\x83\x0b\x58\x69\x6a\xa3\x4f\xcc\x14\x35\xbe\xe2\xa5\x1c\xde\x54\xdd\xae\xb5\x5f\x46\xd1\xa5\xf5\x6a\xa7\x71\x1f\x3b\xeb\x04\xfb\x2a\xcf\xdb\x05\xcb\x2e\x22\x9c\x4b\x98\x52\xcc\x27\x09\x32\x62\x2e\x31\x92\x4e\x8e\xf6\x51\xf6\x31\x6b\x6d\x47\x6d\xbd\xe0\xae\x78\x3d\x21\x45\x75\xa2\xb7\x7d\x63\xb8\x23\x74\x6b\xca\xf7\x0d\xda\x8e\x8a\xfe\x98\xa8\x4d\x37\x60\xff\x1f\xac\x0f\x0b\x56\x32\xf5\x03\x22\xf5\x0f\x8d\xba\xe4\x26\xf7\x0a\xbb\x76\x22\xd8\x1b\x75\x7f\x52\xc4\xdd\xa7\x66\x4b\x51\x47\x75\xdb\x43\x62\xee\xee\xf2\x8d\xe2\x6e\xab\xcd\xbe\x47\xc5\x76\x6e\x55\xee\x6b\x3f\x8d\x6f\x66\xad\x6b\x96\xfd\x24\xe0\xf2\x1a\xdd\xda\xe9\x80\xbe\xd7\x79\x63\x8b\xe0\x7e\x36\x8f\x44\xbb\x77\xf1\xfb\x4a\x43\x2d\x54\x94\xf7\xd5\x2a\x3d\xac\x25\x19\xa8\x34\xe2\x6a\xb4\x29\xac\x66\xc8\x8f\x09\x79\x1e\xaf\xc9\x53\xa1\xb5\x42\xb7\xc0\x1a\xa1\x6d\x2b\x12\x0a\x61\xef\xd1\x71\x47\xc6\xdf\x11\x76\xbb\xd5\x6c\xe7\xc9\x91\x7f\x5f\xe8\xec\xf0\xb2\x7d\xd5\x98\x3c\xf6\x3f\x02\xce\xef\x53\x89\xfd\x82\x05\xf2\x9b\x4f\xcb\x4f\xf6\xa2\xb9\x2c\xf6\x35\x22\xe5\x37\x76\x75\x41\x94\x30\xba\x0d\xa4\xa4\x02\x4c\xc8\x6e\x6c\xdc\xbd\x52\x21\x5b\x26\xb0\x2a\x95\x27\xb0\x60\x36\xf7\x79\x5a\xe3\x2d\x75\x4d\x97\x33\x67\x79\x97\xff\x6f\x87\xc4\x72\x7c\xdd\x31\xa4\xc2\x67\x1f\xdb\x6d\x96\xbf\x9a\x1f\xe5\x58\x44\xb3\xdf\xa7\xa0\xbf\xc3\x87\x1a\x62\xb7\xbb\xcf\x8b\x9c\x5a\x69\x7e\x5c\xfa\xb7\x77\xa7\x6f\xed\x0d\x5f\xdd\xb0\x5f\xd3\xae\xfb\xcc\x3a\x9d\xaa\x10\xc7\xf3\xa6\x53\x38\x3c\x6c\xec\x7b\x74\x74\x72\xd7\x1d\xb3\x60\xa5\x0c\x9e\x54\xa1\xac\x42\x33\x6b\xd2\xeb\x4e\x9e\x70\xdd\x84\x46\xcd\x0a\x04\x8f\x58\x9b\xab\xa0\x42\x2d\xe0\xa7\xc0\x6f\x82\x55\x51\x6c\x6a\x00\x4e\x43\x89\x71\x9a\x6f\x87\xb9\xb6\x2e\x9a\x23\x0b\x2d\x9a\x5b\xf7\x3e\x6c\xf4\x97\x67\xe7\xa3\xfa\xc9\xb4\xd7\x99\x52\xa8\xe7\x58\x38\x07\x71\x46\x04\x75\x0b\xbd\x54\x49\x36\x8c\xf5\xd2\x98\x82\xad\x02\xfc\xac\x3c\xfe\xf8\x57\x91\x87\xf3\xec\xa4\x2e\x9a\x24\xdb\xca\x2c\x24\xaa\x1c\x1d\xa7\xbe\x99\xcd\x37\x7d\x99\xca\xb1\x31\x17\x53\x08\x50\x91\x53\x05\xdc\x7a\x63\xb7\x2e\xbd\x2f\x13\x2b\x87\x7a\x4e\x5e\xb6\xe4\xe2\xa7\x7e\x27\x59\xa3\x43\x49\xb0\x4c\xac\xf2\xe9\x1d\xfe\x31\x61\x31\x2f\xe1\x1f\xec\xbe\x6d\x0d\xd2\x0e\x51\x54\xae\x82\x82\x60\x3b\x5b\x4a\x87\x21\x6c\x60\xc4\x76\xa7\x54\x1f\x78\x66\x54\xfb\x4a\x15\xad\x67\x7a\x52\xa4\x65\xe3\x0d\x9a\x91\x23\x56\x54\xdd\x51\xf2\x90\xc0\x9c\x5f\x50\x67\xd5\x62\x91\xd2\xff\x57\x09\xb7\x6a\x55\x4e\xe7\x37\x9e\x66\x4e\x60\x5e\xca\x57\x92\xf7\x24\xca\xb2\xfd\xfa\xb8\x3f\xf0\x84\xea\xbd\x2e\xea\xf6\x7b\x98\x6a\xee\x8c\x1a\xbb\x8d\xf5\x4a\x17\x8a\x55\xdf\x3a\xe9\xf0\x08\xf0\x53\x86\x65\xea\x51\x9a\x72\xac\xb9\x65\x6b\x75\x5e\x4c\xe9\xce\x3b\xa4\x47\xb8\xc9\xb7\xb3\xf9\x70\x6b\x34\x21\x49\x7c\x9f\x57\xbb\xfa\x10\x8f\xe1\xae\x57\xbb\x55\x39\xf5\xc1\xdd\xf4\x8f\x6d\x8f\xb8\xfb\xce\x2c\xd1\xba\xe3\x4d\xba\x05\x83\x37\xdf\xa6\x25\xda\x64\x68\x80\x3c\x73\x0b\xc3\x18\xba\x5a\xe3\x74\xb2\x3c\x0e\x99\x95\x9c\xac\x5b\x04\x13\x0d\x18\x16\x05\x4f\xbc\xfb\x88\x60\x52\x83\xb7\x11\x2c\x96\xe7\x35\x00\xf9\x2d\x04\x4a\x7b\x94\x4c\x28\x80\x16\xd8\xe6\xc1\x8b\xed\x87\x5b\xcc\x9b\x89\xb9\x87\x4d\x65\x3d\x1e\x91\x7e\x3f\x50\x88\x1a\xee\x84\x8a\x7b\x80\x43\x4d\xe9\xf7\x38\x42\xba\xc9\xbe\x07\x44\xd4\xe7\xfd\xf9\x20\xf1\x4d\x63\x37\xca\xbd\x23\x7a\x77\xc4\xeb\x6e\x1b\x71\xb4\xb2\x09\x1f\xfc\x02\xaf\x0a\x99\x6e\x18\xd6\xee\xdf\xad\x8e\xc6\x28\x86\x94\xe9\xa0\x3a\x48\xf6\x0e\x3b\xb4\x1f\x9a\x68\xff\x3b\x6a\x32\xd6\xd6\x7d\xd4\xe9\xdf\x04\xcc\xbb\xf5\x56\xba\x2e\xe3\x49\x25\x99\x4e\xe1\x7f\x63\x52\x6c\x68\x47\xd1\x4c\xf5\x43\x50\x1f\xd1\x43\x46\x6d\x4a\xb0\xe0\x33\x57\xcd\xea\x71\x94\xd4\xeb\xc7\x11\xa4\x66\x88\x45\x06\xf7\x64\xbc\x76\x89\x32\x54\x10\x47\x61\xda\x53\x99\x64\x3b\xa2\x91\x2d\x95\x59\xa4\xc2\xaf\x16\x4f\xd8\xb2\x45\x2e\x3c\xea\xfa\xdd\x48\x2e\xd7\xfa\x3c\x5a\x44\xfc\xcc\xea\x19\xc2\xed\xba\x4f\xf4\xd8\xd2\x18\xf7\x13\xf5\x88\x76\x73\xff\xb8\xab\x27\x19\x47\x44\xf2\x5b\x24\xd2\x44\x6a\xd3\x92\xcc\xbb\x43\xec\x71\x72\x51\x7a\x3d\x26\x45\x0a\x4a\xc1\xc2\xbe\xcb\x23\xbd\x69\x18\x6c\x86\xf0\x54\x70\x56\x26\x8b\x5a\xf6\xe6\xbf\xf3\xb8\xab\x0c\x74\x09\x1a\xb5\xf0\x8c\x28\x13\x9a\xf5\x61\xbd\xd4\xd9\x12\x56\x6a\xc3\x97\x7b\xc9\x33\xe2\xf5\x48\xc3\x3e\x59\x45\x2a\x8c\xf1\xb3\x1f\x7e\x8c\x53\xce\x04\x14\xcd\x2c\x33\x05\x5d\x1c\x92\x7e\x7c\x4d\x48\x2e\x3e\x8c\xfc\x36\x0a\x4f\x28\xef\x6e\x0c\x0b\x4e\xa2\x1f\x45\x68\xe6\xab\xb9\x74\x41\x5b\x73\xdf\xd9\xb5\x7b\x94\x2f\xd1\xf8\x6a\xd8\xee\x91\x99\xbf\x89\xec\xaa\x58\xb4\xc6\xfd\xb7\x67\xd2\x76\xcc\xa3\xed\x05\xfd\x78\xc4\xed\x90\xff\x2a\x3e\x5b\xb7\x94\x89\x77\x78\x70\xfb\xa9\xb6\xd9\x16\x36\x25\xde\xbe\xef\x81\x90\xed\x5b\xaf\x98\xfb\x8e\x69\x1f\xd1\x7d\x7e\xdc\xa1\xdb\xa3\x96\x5e\xf7\x81\xf0\x22\xe9\xec\x0e\x04\xfe\xfc\xf9\x09\xff\xfb\x95\x27\x5f\xbe\xf4\xfe\x37\x00\x00\xff\xff\xf6\x12\x1a\x23\x21\x38\x00\x00")

func templatesLibjwt_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLibjwt_nimTmpl,
		"templates/libjwt_nim.tmpl",
	)
}

func templatesLibjwt_nimTmpl() (*asset, error) {
	bytes, err := templatesLibjwt_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/libjwt_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOauth2_client_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x93\x41\x6b\x1b\x3f\x10\xc5\xcf\xab\x4f\x31\xff\x81\x3f\xec\x16\x65\x1b\x72\x34\xb8\x90\xba\xa5\xa4\x87\x24\xd8\xe9\xc9\x18\xa3\x48\xb3\xae\xc8\x5a\x5a\x4b\xda\x42\x58\xf4\xdd\x8b\x24\xdb\xd8\xe9\x4d\x1e\xbd\x79\xf3\x7b\x23\xef\x34\xdd\x80\xa2\x4e\x1b\x02\xb4\x62\x0c\xbf\xef\xb6\xb2\xd7\x64\xc2\x76\x67\x11\x6e\x62\x64\x83\x90\x6f\x62\x47\x30\x4d\xed\x73\x39\x3e\x8a\x3d\xc5\xc8\x98\xde\x0f\xd6\x05\xa8\x59\x85\xdd\x3e\x20\xab\x50\xdb\xcf\xda\x8e\x41\xf7\xe9\x87\x0f\x4e\x9b\x9d\x47\xd6\x30\x26\xad\xf1\x49\x29\xa4\x24\xef\x5f\xec\x1b\x99\x5f\xcb\x07\x98\x03\x4e\x53\x7b\x7f\x55\x8c\x31\x77\x74\xa3\x91\x50\x4b\xf8\x34\x4d\xed\x22\x13\x95\xb1\x0d\xfc\xa0\xf0\x94\x49\x2f\xfa\xea\x02\xfd\xf0\x8d\x43\x39\xad\x48\x3a\x0a\x50\x18\x38\x78\x69\x07\xf2\x1c\xc4\xa8\x34\x19\x49\x1e\xd6\x9b\x72\xd7\x40\x7d\x12\x91\x73\xd6\x35\x30\xb1\xea\x30\xc0\x6c\x0e\x7b\x31\xac\xcb\xdd\x46\x9b\x40\xae\x13\x92\xa6\x38\xb1\xaa\xc2\x9d\x13\x26\x6c\xc3\xfb\x40\x38\x03\x00\xc0\xe3\xd2\xa4\x23\x45\x26\x68\xd1\x7b\xe4\x49\x78\xac\x6b\x55\x74\x70\xe6\xbc\xb8\xf4\x99\x15\x67\x57\xe8\x9c\x55\x91\xb1\x4a\x77\xd0\x93\xa9\x0b\x7f\x03\x5f\xe0\x36\xf1\x55\x87\x61\x8d\xb9\x86\x1b\x98\x1f\x53\xfa\xf6\xa7\xd5\x27\x29\x07\xe4\xd8\x5c\x79\x9c\xb3\x5f\xdb\x88\x51\xfd\x6b\x72\xd6\x5e\xfa\x38\xf2\x43\xde\x52\x5a\x8e\x6c\x95\x5d\xd2\xe1\xd1\x7e\xb5\xea\xbd\xc6\xe7\xa7\xd5\x0b\x72\xb8\x7e\x5f\x0e\x46\xf7\x1c\x0e\x43\x93\x21\x52\xe7\x7f\xf3\x54\xcb\xc3\x1d\x85\xd1\x19\x40\xcc\x9e\x69\x44\xa5\xa8\x23\x07\x69\x4e\x9b\x6c\xdb\x45\x6f\x3d\xd5\x4d\xc9\x90\xcb\xab\x20\xc2\xe8\x17\x56\x51\xb2\xba\xbb\xbd\xfd\x68\xd5\xed\x43\xfb\x3d\x3d\x64\x57\x63\x27\x74\x4f\x0a\x82\x85\x1d\x85\x23\x1b\x84\x04\xc7\xb3\x9b\x35\x9e\x40\x26\xaf\x39\xfc\xff\x07\xf9\xc7\x11\xc7\xdc\xaf\xe7\xd0\xe5\xcf\xdd\x2e\x49\xa8\xfb\xbe\xaf\xcf\xa0\x0d\x3b\x21\x94\x2d\xd6\xaf\x4d\x09\x15\x59\xfa\xc0\xc8\x28\x88\x91\xfd\x0d\x00\x00\xff\xff\x28\x2c\xc0\x51\x6c\x03\x00\x00")

func templatesOauth2_client_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesOauth2_client_goTmpl,
		"templates/oauth2_client_go.tmpl",
	)
}

func templatesOauth2_client_goTmpl() (*asset, error) {
	bytes, err := templatesOauth2_client_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/oauth2_client_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOauth2_client_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\x41\x8b\xdb\x30\x14\x84\xef\xfa\x15\x83\x4e\x49\xf1\x9a\xd2\xa3\xc0\x85\x6d\x7b\xd9\x53\x97\x26\x3d\x85\x12\x14\xf9\xc5\x55\x6b\x4b\xf2\x93\x5c\x30\xc6\xff\xbd\xd8\x56\x52\x42\xf7\x66\xbf\x6f\x66\xf4\x06\x69\x9a\x9e\x50\xd3\xd5\x3a\x82\xf4\x7a\x48\x3f\x3f\x9c\x4d\x6b\xc9\xa5\xb3\xb3\x9d\xc4\xd3\x3c\x0b\xdb\x05\xcf\x09\x31\xf1\x90\x6c\x1b\x0b\x24\x7d\x69\x29\x8a\x1b\xc8\xfa\xc6\xb3\xee\x5a\x21\x5a\x4a\xb8\xe8\x48\xdf\xd9\xa2\x82\x9c\xa6\xf2\xd3\xf2\xf7\xed\x65\x9e\xa5\x08\xec\x0d\x1a\x4a\xcf\xc6\x50\x8c\x47\xff\x9b\xdc\xbb\x9d\x51\xf8\xbc\x66\x14\x39\xeb\xe5\x8b\x5a\x8e\xb3\xae\xb9\x4d\x0e\x64\x98\xd2\xbf\x69\x34\x3e\x50\x54\xf0\x81\xdc\x33\xb3\x1e\x4f\x1b\xf9\x51\x40\x0f\xf5\x5b\x60\xaf\xb6\x0f\x54\x02\xf8\xa3\x19\x7d\x50\x38\x2e\x4d\x4e\xf7\xd0\x4d\x89\x0a\x93\x00\x00\xd9\xb0\x76\xe9\x9c\xc6\x40\x52\x41\xe6\x9e\x86\xa9\x26\x97\xac\x6e\xa3\x2c\x36\x5d\x26\xb6\x96\xea\xde\xe0\x11\xc5\x75\xff\x3b\xde\xea\x08\x60\x2e\x93\x5f\x97\x10\x02\xb0\xd7\xdc\xab\x6c\xc9\xe1\x23\xde\xab\x35\xa3\x0f\x27\xb9\xce\xe5\xb2\x5a\x56\xfc\xf2\xd6\xed\x64\x21\xf7\xd9\xb8\xb4\xfe\xdf\xa6\x87\x7a\x35\xad\xf4\xc1\xc2\x94\x06\x76\x30\x25\x53\x3f\x50\x4c\xbb\x7c\x65\x05\xe4\xeb\xd7\xc3\x51\x16\xe8\x07\xe2\xf1\x55\xb3\xee\x62\xd5\x87\x7d\x79\xf1\xf5\x28\x96\xe7\x42\xae\xc6\x3c\x8b\xbf\x01\x00\x00\xff\xff\x16\x78\x13\x81\x3a\x02\x00\x00")

func templatesOauth2_client_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesOauth2_client_nimTmpl,
		"templates/oauth2_client_nim.tmpl",
	)
}

func templatesOauth2_client_nimTmpl() (*asset, error) {
	bytes, err := templatesOauth2_client_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/oauth2_client_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOauth2_client_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x4f\x6b\xfb\x30\x0c\xbd\xe7\x53\x88\x5c\xdc\x42\x1a\x7e\xfc\x8e\x81\x0c\x76\xdc\x65\x87\xb1\x9d\x4a\x31\xc6\x51\x5b\x6f\xa9\x9d\x59\xca\xa1\x18\x7f\xf7\xe1\x24\xb8\x7f\x56\xa6\x4b\x24\xe5\xbd\xa7\xa7\x44\x21\x6c\xa0\xc3\xbd\xb1\x08\xa5\x53\x23\x1f\xff\x4b\xdd\x1b\xb4\x2c\x87\x33\x1f\x9d\x2d\x61\x13\x63\x61\x4e\x83\xf3\x0c\x1e\xbf\x47\x24\xa6\xa2\xd0\xbd\x22\x82\x10\xea\x57\x75\xc2\x18\x57\xeb\xa6\x00\x80\xa4\x04\x52\x1a\x6b\x58\xca\x15\x61\xbf\xaf\x40\x69\x8d\x44\x92\xdd\x17\x5a\x39\x7a\xd3\x8a\x10\xea\xe7\xa9\xf9\x9e\x7a\x1f\x6f\x2f\x31\x8a\x85\x9f\x22\xd1\xea\x7b\x16\xb4\xbf\x84\x8a\x3c\xf1\x80\x2c\xaf\xdf\x2e\x93\x97\x3d\x4c\x97\x53\x42\xed\x91\x2b\x20\xed\x06\xa4\x76\xbb\xab\x40\x8d\x9d\x41\xab\xa7\xea\xca\xc4\xa0\xbc\x3a\x11\xb4\x10\x72\x2b\x85\x38\x78\x65\x59\xf2\x79\x40\xd1\x80\x58\x64\xb5\xc7\x0e\x2d\x1b\xd5\x93\xa8\x6e\xf1\xd9\x83\x68\xae\xfc\x3c\xc4\xcc\xe6\x2e\xb8\xb9\xce\xd0\x98\x33\xb3\x87\x3e\x2d\x39\x2d\xb1\x86\x27\xf8\xd7\xdc\x08\xce\xde\xb7\x62\x02\x88\x1d\xb4\x50\x56\x65\xfd\xe9\x4c\xe6\xdc\x4b\xe5\x8f\xf0\x87\x9a\x1a\xbb\x5b\xad\x0b\x29\xe3\x73\xe2\x91\x47\x6f\xf3\xbd\xd4\x83\x23\x5e\x3d\xfc\xb1\xd5\x32\xa0\x9d\x1f\xeb\x22\x1d\x24\xda\x6e\x3a\xbb\x9f\x00\x00\x00\xff\xff\x98\xce\xc2\x38\x9d\x02\x00\x00")

func templatesOauth2_client_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesOauth2_client_pythonTmpl,
		"templates/oauth2_client_python.tmpl",
	)
}

func templatesOauth2_client_pythonTmpl() (*asset, error) {
	bytes, err := templatesOauth2_client_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/oauth2_client_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOauth2_jwt_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x94\xcf\x8e\xe3\x36\x0c\xc6\xef\x7a\x8a\xaf\x69\x81\xda\x0b\xaf\x31\xc9\xd1\x40\x0e\x5b\x2c\xd0\x62\x7a\x48\xd1\x06\xc8\x21\x08\x06\x8a\x4d\x27\xf2\xda\x92\x47\xa2\x93\xc9\x2e\xf6\xdd\x0b\x49\xce\xbf\x99\x1c\x45\x91\x3f\x91\x1f\x49\xfd\xf8\xf1\x19\x15\xd5\x4a\x13\x26\x46\x0e\xbc\x9f\xbd\x34\x47\x7e\xd1\xaa\x9b\xe0\xf3\xcf\x9f\x42\x75\xbd\xb1\x8c\x4e\x5a\xb7\x97\x6d\x06\xc7\x76\x60\xd5\x3a\x71\xbe\x69\xd5\xb6\x39\x72\x86\x86\x1c\x93\x15\x82\x4f\x3d\x09\x60\x11\x58\xcf\xab\xe5\x27\xcc\x61\xb6\x0d\x95\x2c\x00\xa0\x1f\xb6\x7f\xd3\xe9\x53\xe1\x41\x4a\xef\x84\x00\x9e\x57\xcb\x3f\xad\xd4\xec\xde\xb9\x2a\xe7\x2e\x6e\xfe\xbc\x6b\xcd\x56\xb6\xaa\xba\x33\xca\xc1\x9f\xe9\x75\x1d\x6d\x9b\x60\x1c\x1c\x59\x2d\x3b\xba\xf3\xa4\xb7\xbe\x80\xd2\x91\xed\x4a\xd3\xd3\xc7\x40\xf9\xbd\xbf\x66\x56\x1a\xed\xbc\x37\x9b\x6f\xa4\xff\xb1\x54\xab\x37\xcc\x31\xf9\x83\xa4\x25\x8b\x89\x10\xbd\x35\x25\x2a\x2a\x4d\x45\xbe\xd0\xc4\x34\x47\x2e\xae\x95\x67\x31\xf2\x0c\x4c\x0b\xf0\xd0\xb7\xb4\xde\x85\x62\x8b\x6b\xdd\x5e\x55\xc9\x83\x0b\xe9\x6d\x30\x17\xc0\xaf\x23\xd7\x3b\x45\x0c\xa4\xae\x40\x6f\x6c\x65\xc9\x0e\x8a\x7f\x77\x88\x20\x01\x1c\xa4\x45\x53\xa0\x67\x0b\xdf\x3c\x9f\xb4\x00\x5a\x62\x58\x62\xcc\x83\x31\xf2\x12\x59\x55\x16\xcd\x98\x5a\x06\x9f\x72\x1e\x7b\x92\xa1\x54\x9a\x93\x1b\x4b\xde\x92\x4e\x53\x01\xa8\x3a\x80\x7e\x99\xe3\xa9\x08\x3a\x59\xe2\xc1\x6a\x24\x1f\x4a\x49\xd2\xbb\x62\x12\x4b\x1c\x08\xc2\xc7\xb8\xa1\xf5\xd9\x5c\xa2\xd8\xac\x2f\x81\x9b\xe4\xb7\xa4\x71\x46\xbf\x54\x43\xd7\xbb\xa4\xc9\xa3\x53\xf6\x94\xa6\x37\xc8\xa7\x74\x54\xbd\xdc\x53\xf9\xed\x3f\xdf\x44\x97\xb8\x69\x01\xd3\x93\xfe\x62\xad\x3c\x9d\xdb\x99\xc1\xcd\x1e\x98\xd3\x62\x6b\x4c\x1b\x25\x0e\x0c\x5f\x9b\x64\xb4\x24\x1d\xc3\x68\x02\xb5\xd4\x91\x66\x98\x1a\x53\x28\x87\x8e\xba\x2d\x59\x7f\x74\xb3\xd0\x98\xe5\xe2\xeb\x02\x05\x6a\xa5\x2b\x48\x6c\x89\x99\x2c\x8e\xf2\x04\x36\xa8\x0c\x78\xaf\x5c\x94\xcc\xcd\xbc\x80\x98\xbf\x57\x8d\xed\xe0\x37\xa4\x36\x16\x87\x29\x94\x86\x9b\xc6\xfb\x60\x99\x05\xcb\x2c\x5a\x02\xe7\x30\xf5\x8c\xc3\xc5\xf4\x1e\x34\x9e\x6a\xd9\x3a\x12\xb7\xfa\x3c\xaf\x96\x4b\xdf\xe6\x07\x93\x69\xe9\xb5\xc0\xbf\xf4\x3a\x90\xe3\x2c\x6e\x83\x7b\x28\x17\xae\x7a\xe1\x40\x56\xd5\xa7\xc8\xf6\x33\x15\x87\x28\x5c\xf9\xe1\x1c\xf5\xf4\x93\x19\x81\xe3\x0c\xfa\x57\xff\xaa\x2c\xe6\xfe\xd5\x7c\x4f\xb2\x22\xeb\xf2\x1d\xf1\xc2\x7e\xa5\x5a\x0e\x2d\x27\x93\x2f\x03\xef\x8d\x55\xdf\x25\x2b\xa3\x27\xe3\xc4\xf8\xd6\xc4\xd8\xc7\x42\xc6\x8a\xcf\xae\xda\x5c\x9e\xca\x1d\x4b\xcb\x6e\xa5\x78\x9f\xdc\x6c\x6f\xfa\x20\x7a\xcc\x71\x9c\xc9\xf3\xa4\xa5\xfe\x27\xf2\x8b\x70\xd9\xee\x64\x44\xaf\x5b\xd2\x77\xcc\x3c\xbf\xc9\x71\x33\x6e\x4b\xa4\x7c\x5c\x98\xcb\x9b\xe3\xf9\x76\x8c\x63\x06\x79\x90\xee\xdc\x92\x54\xf8\xff\x99\x74\x15\xfe\xe2\xff\x03\x00\x00\xff\xff\xcd\xc7\x15\x5e\xac\x05\x00\x00")

func templatesOauth2_jwt_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesOauth2_jwt_nimTmpl,
		"templates/oauth2_jwt_nim.tmpl",
	)
}

func templatesOauth2_jwt_nimTmpl() (*asset, error) {
	bytes, err := templatesOauth2_jwt_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/oauth2_jwt_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOauth2_middlewareTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x56\xd1\x6f\xdb\xb6\x13\x7e\x16\xff\x8a\xab\x80\x5f\x7f\x52\xe0\xca\xdd\xda\x87\x21\x80\xf6\xd0\x22\x6d\xd1\x2d\x9d\xd7\xb8\xcb\x43\x10\xb4\x8c\x74\xb2\x99\x48\xa4\x4a\xd2\x76\x0d\xc1\xff\xfb\x70\x24\xa5\x28\xb1\x9d\x6d\x01\x02\x4b\xc7\xe3\x77\xc7\xef\xbe\x3b\xaa\xeb\x5e\x40\x89\x95\x90\x08\xb1\xe2\x2b\xbb\xfc\xf9\x6b\x23\xca\xb2\xc6\x0d\xd7\x18\xc3\x8b\xdd\x8e\xb5\xbc\xb8\xe3\x0b\x84\xae\xcb\x66\xfe\xf1\x13\x6f\x70\xb7\x63\x4c\x34\xad\xd2\x16\x12\x16\xc5\x85\xde\xb6\x56\x4d\xb1\x28\x0d\x8f\x59\x14\x57\x8d\xa5\x9f\x5a\x2d\xe8\x47\xa2\x9d\x2e\xad\x6d\xe9\xd9\x58\x2d\xe4\xc2\xc4\x8c\x45\xf1\x42\xd8\xe5\xea\x26\x2b\x54\x33\x2d\x17\x5a\xdc\xf2\x7a\xcd\xa7\xb7\x1b\xfb\x62\xa1\x62\x96\x32\x36\x9d\xc2\x1f\x2e\xa9\xae\xcb\x7c\xd0\xf3\x21\x39\x10\x06\x7c\xc6\x70\x9f\x31\x54\x4a\xc3\xe0\xcc\xec\xb6\xc5\x27\x10\x8c\xd5\xab\xc2\x42\xc7\xa2\x12\x4d\xa1\xc5\x0d\x96\x6f\xb6\xe0\x13\x64\x51\x25\xb0\x2e\xc1\xff\xf5\x36\x53\xa8\x16\x8d\xb7\x5d\x5d\x07\xeb\x8e\xb1\x35\xd7\xf0\xf1\x72\x3e\x5b\xdd\xd4\xa2\xf8\x0d\xb7\x70\xe2\x98\xc8\x06\x03\x63\x85\x92\xc6\x71\xe5\x93\xbe\x40\xbd\x46\x7d\xbf\x21\x87\x6f\xdf\x60\x3a\x85\x4a\xd4\x35\x08\x0b\x1b\x61\x97\xfd\xf9\x8c\xf3\x85\xd6\x39\xc3\x1d\x6e\x89\x9b\x6a\x25\x0b\x10\x52\xd8\x24\xa5\x13\x50\x06\xa8\xdd\xbf\xd2\x8c\x45\xa2\x82\x1a\x65\x72\x30\x58\x0a\x79\x0e\x2f\x69\x57\xa4\xd1\xae\xb4\x64\xd1\x8e\x45\xe3\xfc\x27\x0e\x2b\x87\xdb\x8d\xcd\x66\x5c\x1b\x3c\x7b\x3b\xac\xbd\xd3\xaa\x99\x9d\x9d\x27\x57\xd7\x37\x5b\x8b\x47\x22\xa4\x2e\x03\x02\x79\x96\x83\x14\xb5\x0b\x56\xab\x45\xf6\x8e\x5b\x5e\x57\x49\x5c\x71\x51\x63\x09\x56\x41\x4b\xf8\x74\x38\x3a\xd9\xe9\xff\xd6\xb1\x0b\x9e\x52\x4e\x44\xed\x74\x0a\x9f\x70\x73\xb4\x88\x85\x46\x6e\x11\x24\x6e\xfe\xb1\xd0\x9e\xb2\xa7\xc0\x92\x50\xdf\xbe\xb4\x29\x9c\x1c\x07\xed\x18\xa9\x40\x35\x70\x9a\x1f\x0f\x4d\xc7\xf6\xa0\xa7\x41\x49\xee\x65\x42\xa7\xa3\xd7\xae\x03\x51\x41\xf6\x01\x79\x89\x7a\xb7\x0b\x90\xd9\x58\x8f\x39\xc4\x4b\xb7\x6c\xe2\x7e\xd9\x4b\x33\x87\xb8\xeb\xc2\xd6\x10\x38\xee\x41\xb1\x36\xe8\x90\xff\x5c\xa1\xde\xce\xb8\xe6\x8d\x81\xa3\xf8\xdf\x07\x27\xb4\xc7\xe2\x8c\x80\xf6\x82\xc9\xb2\xc7\xf6\x7a\x82\xe7\xaa\x09\xb5\x7b\xbb\xc4\xe2\xee\xc2\xd3\x5a\xd0\xb3\x81\xcd\x12\xed\x12\x35\xac\x0c\x6a\x58\x72\x03\x12\xb1\xc4\x32\x50\xe3\xab\x94\xa8\xe6\x09\xee\xd3\x31\xec\x7e\xd1\x6e\x94\x72\x82\xeb\x7b\xa0\xc9\xbc\xcb\x9e\xee\xc1\xea\x15\x3a\xa1\x45\x34\x38\xbe\x4e\x80\xd7\xb5\xda\x60\x49\x35\xd5\x5c\x2e\x10\x86\xcd\x6e\x5b\xf0\x72\x96\x7b\x9f\x91\x03\xc5\xf4\xab\x79\x3e\x80\xb9\x85\x87\x21\x23\xea\x38\xfa\xdf\xb1\x7e\xa1\xe2\xb5\xc1\xc0\xda\x07\x2e\xcb\x1a\x75\x4f\xe7\x87\xf9\x7c\x06\xcb\xc1\xd6\x6a\x34\x28\x2d\xb7\x42\x49\x50\x15\xd8\xa5\x30\xa3\x21\xf8\xef\x18\x0c\x21\x12\x89\x3f\x2c\xd0\x70\xce\x82\x25\x7d\xf0\x46\xc9\x87\x2c\xc6\xe6\x77\x2b\x59\x24\x14\x27\xd9\x78\xfb\x67\x34\xad\x92\x06\x2f\xb5\xb0\xa8\x27\xa0\xe1\x24\xd8\xbf\xaf\xd0\x58\x37\xa3\xdc\x90\xe2\x45\x81\xc6\xcc\xd5\x1d\xca\x7e\xac\x86\x21\x0b\x8f\x67\x58\x34\x9d\x06\x77\xb0\xce\xdf\x09\xc8\x0d\x62\xe2\xf9\xb1\x8e\x0f\x08\xd9\x53\x3f\x0e\x99\x83\xce\xbe\x7c\xfe\xdd\xcb\x39\x49\xb3\xf7\x68\x93\x5e\xe9\x29\x95\x64\x68\x9d\x03\xf0\x7d\x1f\x1e\x86\x0d\x9d\xb8\x87\xe8\xb3\x7d\xe0\x9d\x43\x1c\x40\x36\x99\x63\xcc\xef\x4d\x5e\xbf\xfc\x89\xb6\x0c\x63\x99\xa4\x39\x66\xe7\x91\xd4\x3d\xf2\x13\x73\xfe\xd7\x20\xf7\x30\x83\xfa\xb1\xae\x9a\xcc\x51\xf9\xf1\x72\xfe\x1e\xad\x6b\xa3\x64\x94\x5f\x1a\x84\xfc\x68\x7c\xef\x27\xfb\x2a\x1d\x29\xfb\x5e\xd4\xbe\x72\x2e\x42\xdf\xd4\x0e\xef\x99\x6a\xb2\xfd\xc6\x4d\x0f\x13\xf1\x6a\x8f\x88\x28\x22\xad\x66\xee\x90\xd4\x11\xc9\x66\x02\xee\x9e\x48\xa9\x6b\xd8\x10\xf2\xe3\xe5\x3c\xe8\x85\xcb\x12\x16\x68\x41\xd8\xff\x9b\xff\x34\x5e\xf6\xd8\x71\x78\x17\x56\x43\x3f\x63\x92\xbe\x06\x13\x2f\x57\x77\x8a\xdb\x8d\x25\x9f\xd3\x3c\xb8\x99\x6c\xae\x45\x73\xd1\xf2\x02\x93\xb1\x65\xa6\xb1\x12\x3f\x06\xd0\x09\xc4\x6f\x90\x6b\xd4\x31\xdd\x9b\xce\xea\x2b\x75\x3a\xba\x81\x13\x0f\x3e\x01\xd7\x75\xfe\x7c\x27\xb4\xea\x4b\x06\x89\x90\x16\x75\xc5\x0b\xec\x76\xe3\x9c\x88\x78\xe7\x9d\x9d\xa3\x5d\xaa\x92\x2a\x4a\xdb\x2e\xc4\x42\x0a\xb9\xf0\xc6\xb3\x8b\x57\xbf\xbc\xf6\x75\x08\xcd\x2e\x45\x3d\x81\xaa\xb1\xd9\x19\x21\x55\x49\xfc\x45\xe2\x8f\x16\x0b\x4b\x83\xda\x6f\x85\xc6\xed\x3d\x05\x77\x67\xfb\x18\xbe\x7c\x57\x31\xaf\x17\xf1\x75\xaf\xfe\x00\xf9\xf0\x03\x43\x8a\xda\x95\xee\x80\xd0\xc6\x29\xa0\xd6\x7e\x40\x17\x35\x17\x8d\x99\x80\xba\x23\x5a\x7c\xb4\xb7\xce\x96\x11\x35\xd9\x39\x6f\xfd\xab\x87\x7c\x96\xa8\x3b\x78\xfe\x3c\x38\xfe\xc5\x6b\x51\xa6\x7b\xe0\xe3\xf3\x09\xb9\x26\x27\xbf\x21\xf6\x9f\x1f\xd1\xc1\x9e\x0b\x97\xc0\xfa\xfe\x02\xf0\xb9\x5d\xc5\xce\x35\xbe\xce\x92\xab\xeb\x51\x35\x7c\xdc\x00\x93\x03\x6f\x5b\x94\x65\xd2\x77\xe4\x3a\x0b\xd2\x48\xd3\xf1\x6d\xd0\x2f\x13\x4d\x3b\x46\x9f\xe9\x74\xcb\xd2\xf7\xf8\xdf\x01\x00\x00\xff\xff\xb3\xb2\x25\x9b\xb3\x0b\x00\x00")

func templatesOauth2_middlewareTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesOauth2_middlewareTmpl,
		"templates/oauth2_middleware.tmpl",
	)
}

func templatesOauth2_middlewareTmpl() (*asset, error) {
	bytes, err := templatesOauth2_middlewareTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/oauth2_middleware.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOauth2_middleware_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x4d\x8b\xdb\x3a\x14\xdd\xfb\x57\x5c\xb4\x89\x3d\x78\xcc\xbc\x8f\xd5\x83\x3c\x4a\xa1\xa5\xab\xa1\x85\xee\x86\x22\x34\xd6\x55\xa2\x44\x91\x32\x92\x3c\x99\x60\xf2\xdf\x8b\x64\xd9\xb1\x63\x77\x28\xd4\x1b\x27\x57\x47\xe7\xdc\x6f\xb7\xed\x3d\x70\x14\x52\x23\x10\xc3\x1a\xbf\xfd\x9b\x1e\x24\xe7\x0a\x4f\xcc\x22\x3d\x9e\xfd\xd6\x68\x02\xf7\x97\x4b\x26\xac\x39\x80\x68\x74\xed\x8d\x51\x0e\xe4\xe1\x68\xac\x87\x93\x65\x47\x97\xce\x14\x73\xfb\xde\xbe\x29\xc1\xe2\x4b\x83\xce\x97\xb0\x73\x46\x4b\x71\xce\x3a\xd8\xce\x38\xec\x51\xbb\x93\xcf\xb2\x24\xeb\xd0\xbe\xa2\xa5\xc7\xe6\x99\xee\xf1\x0c\x6b\x20\xf1\xc9\x32\x6f\xf6\xa8\xe9\xd1\xa2\x90\x6f\xc1\xfc\x11\x99\x45\x0b\x24\xcb\x38\x0a\xd8\xa0\xa7\xbb\x93\xa7\xae\x36\x47\x74\x79\x04\x97\xc0\x1a\x2e\x51\xd7\x58\xfc\x97\x01\x00\x48\x01\xf1\xa0\x72\x9e\x59\xef\x4e\xd2\x6f\xf3\x31\x6d\x82\x85\x27\x9a\x61\xdd\xbd\x9f\x14\xea\x1b\xe0\x8f\x01\x69\xd1\x37\x56\x87\x18\x2a\x8e\xb5\xe1\xd8\x8b\x2f\x06\x74\xf5\x69\x3d\x38\xf7\x44\xa2\xd7\xa4\xe3\x44\xe5\xf0\xea\x87\x65\xd2\x21\x7c\x7a\xab\xf1\xe8\xa5\xd1\xf9\x4a\xea\x57\xa6\x24\xef\x1c\x5b\x15\x59\x56\x2b\xe6\x5c\x2f\xd6\xb6\xd5\x23\x3b\xe0\xe5\xd2\x31\x84\xcc\x50\x2a\xb5\xf4\x94\xe6\x0e\x95\x28\xa1\x4b\xd0\xfa\xd1\x68\x1c\xf9\x02\xe1\xff\x28\xfc\xb6\x95\x02\xaa\x2f\xc8\x38\xda\xcb\x65\x30\x07\x8a\x8a\xa3\xab\xad\x7c\x46\x4e\x9f\x63\x7d\xb6\x11\xe5\xc8\x14\x25\x24\x2a\x1e\x8e\xdb\x36\xf1\x24\xcf\xc8\x48\x24\xc4\x1a\xaa\x52\x7d\x6b\xd0\x9e\xbf\x32\xcb\x0e\xee\xcf\xe5\x46\x64\x0b\x9a\x80\x9a\xc3\xad\x08\x53\xca\x9c\x90\xa7\xf6\x81\x75\x4a\xd3\x00\x92\x62\xc8\x15\x48\x17\xb3\x75\x4d\xd6\x95\xa5\x87\xac\x61\xb5\x1a\x8e\xa7\x05\x5d\x02\x93\x92\x54\x3b\x23\x75\x3e\xb4\x44\x36\x2a\x5f\xcd\x94\x1a\xca\x27\x46\x45\xfa\x10\xa7\x2e\x17\xc5\x60\x09\x17\x42\x13\x5a\xe6\x91\xd3\x38\xa5\xa1\x69\xee\x98\xdd\xb8\x12\xee\xee\xf6\xa7\xf0\xab\x98\x7a\xd3\xb7\x3a\x21\x13\xb3\x14\x4b\xf9\x1f\x15\x60\xca\x32\x66\x4a\x23\x5f\x25\x64\xb5\x41\x9f\x5f\xab\x54\x02\x21\xc5\xe4\x2e\xaa\x5f\x8a\xbd\x0c\xb5\x44\xff\x7b\xa2\x21\xc2\xa8\x48\x58\x5d\xa3\x73\x34\x02\x48\xa7\x7a\x1b\x61\xba\x1c\x82\x9f\x33\xf7\x93\xdd\xed\xad\xbc\x28\xe1\xdf\x87\xbf\xa6\x14\x9b\x6a\x2c\xd2\xef\x8b\x99\x4c\xd8\x1f\x8b\xeb\xa0\x80\xff\xe1\x61\xae\x3c\xb4\xe1\xf2\x5a\x9b\xf4\x4f\x31\xbb\xdd\x27\xb3\xde\x62\xbd\xef\xaf\x76\xaf\x22\xc4\xfa\x99\xcd\x3a\xf2\xbd\x90\xff\xc9\x16\x10\x62\xd6\x54\xb7\x0b\x71\xde\x87\xd7\xa6\x9e\x7a\x36\xda\x4b\xa3\xd6\xec\xa3\xb8\x19\xcd\x34\x7d\x60\x6c\xcc\xea\x02\x24\xc6\x78\x93\xd4\xe4\xd3\x77\xdb\xe0\xb5\x38\xc2\x58\x48\x57\x41\xea\x25\xb5\x29\x49\xc0\xbb\x88\x5c\x38\xec\x5d\x0e\xe2\x89\xe4\xdd\x14\x4f\x5d\x49\xc6\x58\x99\x2c\x7c\x8c\xc3\x92\x0a\x9f\xdb\x9f\x01\x00\x00\xff\xff\x64\x40\x84\x36\x99\x07\x00\x00")

func templatesOauth2_middleware_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesOauth2_middleware_pythonTmpl,
		"templates/oauth2_middleware_python.tmpl",
	)
}

func templatesOauth2_middleware_pythonTmpl() (*asset, error) {
	bytes, err := templatesOauth2_middleware_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/oauth2_middleware_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesObject_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8e\x41\x0b\x82\x40\x10\x85\xef\xfb\x2b\x1e\xb2\xa7\x48\x7f\x80\xe0\x2d\x82\x20\xea\xd2\x3d\xac\x1d\x63\x4b\x47\x51\x11\x64\x98\xff\x1e\xbb\x92\x41\x74\x7b\xbb\xef\x7d\xcc\x27\xe2\xa8\xf2\x4c\x48\xda\xdb\x93\xee\xe3\x95\x7d\x93\xa8\x1a\x91\x14\x7d\xc9\x0f\x82\x7d\x6d\x61\x27\xe4\x05\xb2\x43\xd3\xb5\xfd\x38\x40\xd5\xf8\x18\x21\x62\x27\x55\x11\x62\xa7\x6a\xc6\xb9\xa3\x48\xfa\x0a\xd9\x99\xe9\xe8\x99\x76\x54\x85\x3d\x20\xf2\xfb\x17\x96\x54\x0f\xf4\xed\x4f\x65\x13\x5e\x1b\x14\x58\x74\x0c\x10\x9a\x3f\x2e\x7b\x4f\xb5\x1b\x16\x34\xc2\x76\x5a\xf1\x3c\x7a\x65\x97\xb9\xa3\xb5\x4f\x41\xec\xd6\xab\x9f\xb8\x78\xbf\x03\x00\x00\xff\xff\xac\x33\x8e\x19\x05\x01\x00\x00")

func templatesObject_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesObject_nimTmpl,
		"templates/object_nim.tmpl",
	)
}

func templatesObject_nimTmpl() (*asset, error) {
	bytes, err := templatesObject_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/object_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPython_server_resourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\x4d\x6b\xdc\x30\x10\xbd\xfb\x57\x0c\xc1\xe0\x5d\x70\x4c\x0e\x3d\x05\x16\x9a\x94\x16\x02\x6d\x09\xa5\xf4\x12\x8a\x51\xe3\x51\x56\x8d\x25\x39\x23\xd9\x61\x51\xe7\xbf\x17\x7d\x38\x59\x36\xf1\xc5\x1a\xcd\xcc\x7b\x33\x4f\x2f\x84\x73\x18\x50\x2a\x83\x70\x46\xe8\xec\x4c\xf7\xd8\x4f\x07\xbf\xb7\xa6\xf7\xa8\xa7\x51\x78\x3c\x83\x73\xe6\x2a\x56\xd6\x62\x52\xdf\x85\x46\xb8\xdc\x41\x97\x0e\x31\x23\xc9\x6a\x90\xa3\x70\x8f\xa0\xf4\x64\xc9\xc3\xf5\x38\xe3\x44\xca\xf8\x16\xfe\x3a\x6b\x94\x3c\xb4\x40\xf8\x34\xa3\xf3\x55\x08\x40\xc2\x3c\x20\xd4\x8f\x2d\xd4\x4b\x82\xfa\xa6\x86\x61\xc4\x67\x41\xe8\xae\x88\x98\xab\x82\x13\x42\xbd\x74\x37\xe9\x7c\x2b\xfc\x9e\x19\x84\xcb\x97\x91\x9c\x39\x04\x40\x33\x40\x9a\xee\x2d\xea\x0f\x7c\xba\xb6\x83\x42\x07\xeb\x90\xb1\x95\x19\x8e\xd0\x8f\x31\xaa\x10\xf2\x52\xff\xe0\xa7\xfd\x6a\x9f\x91\x80\xb9\x17\x93\x82\xdd\xeb\x46\x9b\xe6\x4d\x55\x2e\x6a\x5a\xe8\x7b\x23\x34\xf6\xfd\xf6\xfd\x25\xd1\xef\xed\x90\x86\xa9\x3e\x86\xf0\xa2\xe5\x09\x4e\x47\x76\xf6\x18\x69\xea\xa5\xfb\x6c\x86\xc9\x2a\xe3\x99\x9b\x16\x74\x06\xd8\xdd\xe5\xdc\x2f\xa4\x3f\xcc\xcd\xef\xc8\xb6\x92\xe9\xc8\xa6\x23\x5d\xbd\x9c\xa8\x9a\x9e\x2a\xf2\x2e\xba\xa8\xd7\x1d\x07\x9b\xbb\x1c\x5d\xd1\x83\x63\x4e\xa0\x51\x96\xd8\x34\xa0\xcc\xa2\xe7\x0d\x4a\x7d\xba\xb9\x15\x24\xb4\x63\xde\x5e\x56\x00\x00\x4d\xd3\xa4\xff\xeb\x40\x32\x0e\x24\xcb\x40\x5f\x66\x73\xff\xc9\x6a\x8d\xc6\xbb\x84\x9c\x6b\xeb\x45\xbe\x9c\x57\xce\x18\xdd\x78\x50\x0e\xf6\xc2\x0c\x23\x12\x48\x4b\x70\xb4\x37\x9c\xe8\x73\xc2\x0f\x4a\xae\x06\x38\x40\xc9\x2a\x33\xcd\xde\xc1\x0e\x42\x58\x53\xcc\x5d\x34\x46\x1f\x5d\xba\x29\x0e\xed\x1e\xd0\xe7\x8b\xed\x36\xf7\x49\x30\xd6\x97\xf6\x6e\x11\xa3\x1a\x84\xc7\x4d\xd9\x39\x7e\x84\x7e\x26\xb3\x7a\x7d\x83\x44\x96\xdc\xae\x34\xe4\x68\xdb\xc2\x87\x8b\x8b\x75\xba\xe2\xb8\x77\x7a\x93\x77\x56\x15\x8e\x1e\xe1\x7f\x00\x00\x00\xff\xff\xdd\xde\x3a\xff\xa9\x03\x00\x00")

func templatesPython_server_resourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPython_server_resourceTmpl,
		"templates/python_server_resource.tmpl",
	)
}

func templatesPython_server_resourceTmpl() (*asset, error) {
	bytes, err := templatesPython_server_resourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python_server_resource.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRequirements_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\x8f\x41\x6b\x03\x21\x10\x85\xef\xf3\x2b\x96\xdc\x15\x35\x29\xf4\xe2\x75\xa1\x81\xb6\x87\x04\xf6\x58\xa4\x3b\x49\xdc\xed\x8e\x5b\x67\x85\xb6\x92\xff\x5e\xd4\xf6\xf8\x3e\x1f\x9f\x6f\x72\x16\xdd\x88\x17\x4f\xd8\xed\x22\x7e\x26\x1f\x71\x41\xda\xf8\x6d\xfd\xde\x6e\x81\x76\x9d\xb8\xdf\xa1\xff\x70\x3c\x5b\xab\xa4\x56\x52\xb7\x24\x9e\x68\x4d\x1b\x17\x68\xa4\xfa\x63\xc3\xb9\xaf\x2d\x03\x47\x4f\x93\x33\xd6\x1a\xf9\x08\xcf\x2e\xce\x69\x3d\xb9\x0b\xd6\xf6\x1e\x86\x73\x1f\xe2\xc2\xe5\x55\xff\x07\x71\x3c\xbd\xbe\x34\x9b\x56\x30\x60\x9c\x7f\x30\x5d\xab\x4d\xcb\x03\xf8\x8d\x47\x47\x57\x8c\x21\xb5\x3f\x0f\x30\x71\x20\x7e\xbf\xe1\xe2\x8a\xe8\x41\x6a\x60\xff\x65\xad\x2e\x23\x15\xb4\xf9\x62\x0a\x8c\x85\xed\xa5\x81\x9c\x91\xc6\x7a\xcf\x6f\x00\x00\x00\xff\xff\xda\x00\x12\xec\xf5\x00\x00\x00")

func templatesRequirements_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRequirements_pythonTmpl,
		"templates/requirements_python.tmpl",
	)
}

func templatesRequirements_pythonTmpl() (*asset, error) {
	bytes, err := templatesRequirements_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/requirements_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_main_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x93\x41\x8b\xdb\x30\x10\x85\xcf\xd6\xaf\x18\xc4\x1e\xa4\xe2\x95\x97\x42\x2f\x0b\x3d\x04\xc2\xd2\x40\xbb\x35\x59\x68\x8f\x8b\x6a\x8f\x1d\x11\x59\x72\xc7\x72\x12\x10\xfa\xef\x45\x76\x92\xf6\xd2\x9b\xf5\xfc\x66\xe6\xd3\x63\x14\xe3\x23\xb4\xd8\x19\x87\xc0\x27\xa4\x13\xd2\xfb\xa0\x8d\x7b\xef\x3d\x87\xc7\x94\xd8\xa8\x9b\xa3\xee\x11\x62\x54\xf5\xfa\xf9\xaa\x07\x4c\x89\x31\x33\x8c\x9e\x02\x08\x56\x70\xeb\x7b\xce\x0a\xee\x30\x54\x87\x10\x46\xce\x18\x00\x00\x8f\x51\xed\xbd\x0f\xbb\xc5\x58\xeb\x70\x48\xa9\xea\x3d\xe9\xc1\x72\xc6\x0a\xde\x9b\x70\x98\x7f\xa9\xc6\x0f\x59\x35\xd6\xea\x6a\x98\x2f\x7c\xad\xed\xfd\x78\xec\x95\x71\xd5\x49\x5b\xd3\xea\xe0\x49\x9d\x3e\x72\x26\x19\xeb\x66\xd7\x40\x66\x14\x12\xe2\x62\xae\x2a\x30\x6e\x9c\x03\xdc\xbd\x8b\xfc\xb7\xf2\x0d\xc3\x8f\xf5\x60\xbc\x7b\x99\x5d\x23\xf8\x30\xdb\x60\x46\x8b\xdf\x3b\x5e\xc2\x0a\xa5\xbe\xdd\x35\xc9\x58\x41\xf0\xfc\x19\x86\xf9\xa2\x5e\xf1\xbc\xf7\x73\x40\x12\x92\xdd\xe6\x1d\xfc\x80\x30\xea\x1e\x59\x41\xea\x8b\x76\xad\xc5\xb5\x6f\xc5\x4b\xc8\x84\xe2\x0c\x39\x0a\xb5\xc7\x69\xf4\x6e\xc2\x9f\x64\x02\x52\x09\x04\x1f\xae\xfa\xef\x19\xa7\x90\xaf\x50\x14\x8b\xf2\x96\xd3\x7f\x31\x16\xc5\xb9\x04\x2a\x81\x1b\xd7\xe2\x45\x1d\xc2\x60\xb9\x64\x45\xba\x0e\x8f\x11\x4c\x07\x6a\x53\xef\xb6\xbe\x99\xb6\x86\x20\xa5\x1b\x95\x1e\x4d\xeb\x9b\x69\x39\x92\xca\x89\xd7\x84\x9d\xb9\x08\x5e\xc5\xf8\x4f\x49\x4a\x15\x97\x57\x6c\x12\xeb\xf4\x40\x66\xfc\xbf\xbb\x5c\x6f\x93\xf1\x16\xce\x6b\xd5\xd6\x90\xe0\xaa\xba\xce\xad\xb8\x94\x52\xde\x28\xd1\xb5\x19\x8d\x15\x31\x02\x69\xd7\x23\x3c\x1c\x4b\x78\x38\xe5\x58\x73\x2c\x7e\xa6\x06\xa7\x2d\x76\xd9\x55\xc4\xa8\xd6\xc5\xda\xb9\x80\xd4\xe9\x06\x97\xcc\x27\x41\x25\xdc\xff\x6d\xea\x5d\x4c\x72\xe9\x78\xef\x6e\x7d\xaf\x6a\x32\x2e\x58\x27\xf8\x14\x34\x05\xe3\x7a\x58\x57\x39\xe7\xb6\x70\x7e\x35\x53\x40\xb7\x71\xed\x02\x2f\xf8\xf3\xa7\xa7\xa7\x27\x5e\x02\x49\x96\x18\xcb\x6f\x20\xf7\xcb\xfb\xfe\x27\x00\x00\xff\xff\xcc\x4a\x63\xcd\x10\x03\x00\x00")

func templatesServer_main_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_main_goTmpl,
		"templates/server_main_go.tmpl",
	)
}

func templatesServer_main_goTmpl() (*asset, error) {
	bytes, err := templatesServer_main_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_main_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_main_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\x41\x6b\xe3\x30\x10\x85\xef\xfa\x15\x83\xf0\xc1\x06\xc7\x7b\x0f\xe4\xb4\x24\xcb\x2e\x6c\x29\x6d\xe9\x35\xa8\xd6\xb4\x56\x6a\x49\x66\x46\x31\x0d\x62\xfe\x7b\xb1\x9c\xd0\x42\x6f\xd2\xe8\x7d\x4f\xef\x4d\xce\x1b\xb0\xf8\xea\x02\x82\x66\xa4\x19\xe9\xe8\x8d\x0b\xc7\xe0\xbc\x86\x8d\x88\x72\x7e\x8a\x94\xe0\x84\x9c\x90\x5a\x30\x7c\x09\xbd\x75\x3c\x99\xd4\x0f\x2d\x9c\x38\x86\x16\xbc\x21\x1e\xcc\xd8\x02\x5f\x38\xa1\x57\x39\x03\x99\xf0\x86\x50\xbd\xb7\x50\xcd\xb0\xdd\x41\xf7\xb7\xf8\x30\x7c\x59\xe6\x5c\xcd\x22\x39\x63\xb0\x22\x4a\x51\x3c\x27\xe4\xad\x5a\x12\xfd\xa0\x1f\x90\xe3\x99\x7a\x2c\xfc\x77\x85\x5f\x24\x7e\xd1\x54\x73\xf7\x1f\xd3\x10\x2d\x8b\x28\x28\xee\xbe\x7b\x46\x7a\x11\x01\xbd\xde\xfe\x95\x12\xfb\x60\xa7\xe8\x42\x12\xd1\x5b\x05\x00\x30\x62\x02\xc2\x04\xbb\x2b\xb4\xda\xdc\x19\x8f\x22\xf5\x3a\x7a\x2c\xab\xf9\x6d\xc6\xf1\xde\x90\xf1\x2c\xd2\x14\x94\x90\xa7\x9a\x30\x75\x7d\xb4\xd8\x42\x55\xad\xe7\x90\x30\xa4\x46\x95\x6e\x4b\x62\x05\xf0\x67\xff\x04\xfa\xd7\xf5\xc7\x2b\x66\xec\xc1\x8d\x58\x6b\x17\x2c\x7e\x74\x43\xf2\xa3\x6e\x9a\x52\xef\xc6\xd1\x39\x1c\x22\xe1\x8c\x54\x2f\x0f\xb7\xf9\x67\x00\x00\x00\xff\xff\x04\x99\xf2\xd7\xb6\x01\x00\x00")

func templatesServer_main_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_main_nimTmpl,
		"templates/server_main_nim.tmpl",
	)
}

func templatesServer_main_nimTmpl() (*asset, error) {
	bytes, err := templatesServer_main_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_main_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_main_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x5f\x6b\xdb\x30\x14\xc5\xdf\xf5\x29\x2e\xa6\x20\x19\x52\xf7\x3d\xcc\x63\xdd\x92\x8c\x41\x29\xa3\x0b\xec\xa1\x14\xa1\xc6\x57\xb1\x5a\x4b\x32\x57\x72\xbb\xa2\xf9\xbb\x0f\xd9\x35\xeb\xb6\xc0\x5e\x0c\xbe\x7f\xce\xf9\x71\xae\x52\x3a\x87\x06\xb5\x71\x08\x45\x40\x7a\x42\x92\x56\x19\x27\xfb\x97\xd8\x7a\x57\xc0\xf9\x38\x32\x4d\xde\x82\xee\x54\x78\x04\x63\x7b\x4f\x11\x76\xf9\x67\x05\x01\x5d\x23\x73\x57\x36\x86\xf0\x10\x3d\xbd\x2c\x45\xd3\x21\x7b\x1d\x7e\x8e\xda\x93\x0d\xf2\x21\x78\xc7\x52\x02\x52\xee\x88\x70\xf6\xb8\x82\xb3\x27\x58\xd7\x50\xdd\x60\xf0\x03\x1d\x30\x6c\x50\xff\x36\x4c\xa9\xba\x56\x16\xe1\x27\xec\xfd\x95\x7f\x46\x1a\xc7\xc5\xfe\x44\x4b\xaa\xde\xb0\x94\xd0\x35\x30\x8e\x8c\xa9\xbe\x87\x7a\xc6\x14\x52\x3a\x65\x51\xca\x72\x2a\x57\x07\xef\xb4\x39\xde\x16\xdf\xf7\x3b\xf9\xe9\xdb\xcd\x4e\x6e\xaf\x2f\x3f\x5e\x6d\x37\xc5\x5d\xde\x50\x5d\x40\xf6\x96\xb8\x32\xce\x44\x51\x32\x96\xd2\xff\xc1\xb3\x3e\xe1\xd1\x84\x88\x24\xef\xbb\x01\x7b\x32\x2e\x8a\x7f\x78\x61\x06\x2e\x67\xe2\x0c\x9c\x12\x18\x0d\xd5\xe5\xd7\x2f\x1b\x7f\x08\x1b\x93\x47\xd8\x87\x49\xcf\x0f\x11\x05\xbf\x48\xe9\x4d\x77\x1c\x2f\xde\xf5\x2a\xb6\xeb\xfc\x79\xcf\x4b\xd6\xa0\x9e\x93\x7f\x08\x22\xd7\xca\x35\x03\x00\x20\x8c\x03\xb9\x53\x87\x12\xfc\x2f\x41\xbe\x82\x69\x31\xa3\x2c\x31\xfe\x01\xc0\x57\x60\x31\xb6\xbe\x09\xf5\x2d\xff\xbc\xdd\xf3\xbb\xd9\xb6\xf5\x16\xc5\x29\x3f\xd3\xa1\xe0\xc6\x35\xf8\xa3\x6a\xa3\xed\x78\xc9\x98\xd1\xb0\x9c\x03\xea\x1a\x0a\x39\xbf\x36\x59\xcc\xeb\x93\xdd\xe0\x44\x83\xf7\xc3\xb1\xde\xd3\x80\xaf\x11\x4d\xe9\xfe\x0a\x00\x00\xff\xff\xae\x29\x40\x74\xac\x02\x00\x00")

func templatesServer_main_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_main_pythonTmpl,
		"templates/server_main_python.tmpl",
	)
}

func templatesServer_main_pythonTmpl() (*asset, error) {
	bytes, err := templatesServer_main_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_main_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_resources_apiTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x54\x4d\x6f\xdb\x38\x10\x3d\x9b\xbf\x62\x56\x30\x16\xd2\x26\xa1\x73\xd8\x53\x82\x1c\xb2\xdb\x04\x0d\xd0\x06\x6e\x0b\xa4\x87\xa2\x88\x69\x6b\x14\xb3\x96\x48\x79\x44\xd9\x30\x08\xfe\xf7\x62\x48\x19\x8a\xd3\xf8\xe2\xf9\x7e\x6f\x1e\x49\x79\x7f\x01\x25\x56\xda\x20\x64\x84\x9d\xed\x69\x85\xcf\xaa\xd5\xcf\x0e\x9b\xb6\x56\x0e\x33\xb8\x08\x41\xb4\x6a\xb5\x51\x2f\x08\xde\xcb\x79\x32\x1f\x55\x83\x21\x08\xa1\x9b\xd6\x92\x83\x5c\x00\x00\x78\x0f\xa4\xcc\x0b\xc2\x74\x73\x0e\xd3\x1d\x5c\xdd\x80\xbc\x9d\x3f\x7c\xd2\xcb\x87\x58\x36\x57\x6e\xdd\xc5\x81\x30\xfc\x32\xef\xa7\xbb\x10\xb2\x63\x3b\x9a\x32\xe6\x0b\xe1\xfd\x54\xb5\x9a\x61\xe2\x98\x01\x6f\x36\x63\x0e\xc9\xb9\x9d\x3f\x80\xee\x20\xfe\x35\x6d\x8d\x0d\x1a\xa7\x9c\xb6\x06\x6c\xc5\x55\x77\xa6\x6c\xad\x36\x2e\x04\x20\x6b\x1d\xcf\x8e\xbe\x70\x87\x16\x4f\xc7\x74\x8e\xfa\x95\x03\x2f\x82\x10\xe2\xbd\x2d\x3e\xa3\x5b\xdb\xb2\x83\x23\x85\xe9\x6e\x08\xa5\x19\xcc\xc3\xad\x11\xd6\xca\x94\x35\x12\x54\x96\x52\xd1\x13\xd2\x32\x84\x64\x8f\x7c\x04\xcb\x7e\xc4\xa8\x18\xa4\x62\x94\xe9\x4e\xde\xf7\x66\xf5\xbf\x6d\x78\x95\x6e\xc4\xaa\x42\xf0\x1e\x4d\x19\x82\xa8\x7a\xb3\xca\x55\xab\x61\xd4\x27\xae\x50\xfc\x49\x2a\xdf\xc3\xda\xb9\x56\x7e\xc5\xae\xb5\xa6\xc3\xef\xa4\x1d\xd2\x39\x10\xfc\x33\xc4\xb7\x3d\x76\xae\x00\x2f\x26\xaf\x09\x6d\x99\xd0\x76\x20\xf4\xa5\x47\x3a\xcc\x15\xa9\x06\x1d\xd2\x78\x78\x89\xd9\x66\x1b\x02\x17\x12\x6e\xe5\xbd\xa5\xe6\x49\xd5\x3d\xe6\xd9\x90\xc9\x8a\x34\x98\x0f\x35\x84\x64\xeb\x0a\x18\xf8\x3f\x5b\x1e\xe2\xac\xc9\x4e\x11\xb7\xc7\x80\xf7\xc7\x1c\x5f\xad\x01\xa6\xc4\x95\x2d\x91\x6b\x98\xad\x98\xe8\x0a\x90\x88\x51\x7f\x75\xd6\xc8\x47\xdc\x7f\x88\x15\x94\x93\xe4\xd6\x42\x26\x3f\xff\x7b\x18\x5b\x5c\xc7\x86\xbf\x6e\xc0\xe8\x9a\x97\x9d\xec\x65\xd4\xe2\x23\x2a\x6e\xfb\xf7\xf2\xb2\x10\x93\x09\xa1\xeb\xc9\x88\xc9\x88\xbc\x53\xb5\x2e\x95\x1b\xb1\x39\x3e\xc2\x0f\xe3\xe5\xd3\x50\x96\xbf\x05\x3a\x5e\xf2\x77\xe0\xde\xa4\xf2\x1f\x3f\x97\x07\x87\xf9\xc2\x67\x48\x64\x29\xbb\xca\x16\x67\x48\x24\xef\xd8\xcb\x8b\xb3\x45\x16\x16\xc5\xd8\x36\x70\x65\x33\x9c\x68\xfc\x5a\xe4\xae\x8d\xa2\x8e\x22\x0f\x81\xa8\x72\xb2\x39\x77\x54\xf1\xce\x24\x15\xf7\x85\x4c\x26\x0b\x98\xca\x8a\xeb\xd3\x83\x9c\xcd\xa0\x37\xab\x74\x4d\x61\x89\xb5\xdd\x43\xcd\x9f\x10\x67\x41\x95\x25\xac\xe3\xa2\xb1\x6c\x2f\x87\xad\x0b\xf9\x0d\x5d\x9e\x6d\xf0\x90\x9d\x67\x3b\xbe\x26\x59\x21\xd2\x43\x38\xbe\xf9\x13\xe7\x77\x00\x00\x00\xff\xff\xa7\x39\xf1\xd8\x99\x04\x00\x00")

func templatesServer_resources_apiTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_resources_apiTmpl,
		"templates/server_resources_api.tmpl",
	)
}

func templatesServer_resources_apiTmpl() (*asset, error) {
	bytes, err := templatesServer_resources_apiTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_resources_api.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_resources_api_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\x41\x8f\xda\x30\x10\x85\xef\xfc\x8a\x51\xca\x01\x2a\x88\xd0\xb6\xa7\x48\x48\x55\x91\x56\x2d\x55\xb7\x2b\x16\x89\x03\x42\xc8\x38\x43\x09\x24\x76\x18\xdb\x59\x21\xcb\xff\xbd\xb2\xe3\x2c\xd1\x76\x6f\xc9\xf8\xcd\x9b\x6f\x9e\x6d\xed\x14\x72\x3c\x16\x02\x21\x51\x48\x0d\xd2\x9e\x50\x49\x43\x1c\xd5\x9e\xd5\xc5\x5e\x14\x55\x02\x53\xe7\x06\x45\x55\x4b\xd2\x70\x46\xa5\x91\x26\x50\x31\x52\x27\x56\x4e\x40\xdd\x94\xc6\x6a\x60\x6d\x71\x84\xf4\x09\x31\x5f\x6e\xd6\xce\x45\xb5\x64\x46\x9f\x1e\xf6\xe7\x57\x6d\x2d\x8a\xdc\xb9\x81\xb5\x40\x4c\xfc\x45\x18\x5e\x26\x30\x6c\x20\x9b\x43\xfa\x33\x88\x15\xdc\xa7\x58\x3b\x6c\x9c\xeb\x7a\xde\x9b\x97\xa8\x41\x9e\x5f\x35\xcc\xe1\x4f\x18\xb0\xdc\xac\x47\xb5\x39\xfc\xc2\x5b\x46\xc8\xf2\xc7\xa2\xc4\x51\x12\x67\xc7\xad\x2e\x78\x4b\x6b\x73\x48\xc6\xe3\x9e\xeb\xff\x28\xbf\x51\x9f\x64\xae\x9c\x1b\xd4\x24\x79\xe0\x88\xb5\x27\x56\xa1\x73\x9f\x47\xa1\xf4\x12\x4c\x9f\x49\xf2\x67\x46\xac\x52\xce\x8d\x21\x03\x6d\xea\x12\xb7\x5c\xe6\x98\xc1\x0f\xad\xeb\x85\xcc\x71\x02\x5c\x0a\x8d\x42\x67\xad\xd9\xa2\xfd\x5b\xa1\x6e\x58\xe9\xdc\x0e\xe6\x03\x00\x7f\x0b\x1d\x0a\xf7\x2c\xdc\xc3\x0c\x9b\xf4\xd1\x08\xbe\x90\x55\x85\x42\x7b\x26\x80\x4f\xc1\x85\xf7\xb2\x69\xbb\x7d\x3e\x2b\x54\xf5\x77\x99\xdf\x20\x28\x1b\x46\x40\xb1\xe2\x67\xbf\x1d\x87\x53\xdf\x83\xa5\xc2\xf0\xe3\xf3\xec\xa4\x30\x87\x24\xe9\x04\x22\x87\xa8\x2e\x8e\x10\xd6\xe6\x86\xd0\x17\x8b\x23\x08\xd9\xde\x42\xca\x4f\xc8\x2f\xcb\xcd\x7a\x2d\x2f\x28\x46\x84\xd7\x09\x7c\xdb\xc6\x98\xb8\xa1\x42\xdf\x5e\xb8\xac\x51\x39\xb7\x1b\x67\x40\xa8\x0d\x09\x18\xdd\x63\xfa\x3a\xfb\xd2\x4b\xa9\x03\x79\xbb\xa7\x38\x3e\x5d\xe1\x35\x00\x4e\x7b\xcc\xd7\x88\xac\xe5\x36\x6c\x78\x6d\x17\xdc\x79\x8a\xf4\xe0\x5d\xde\xaf\x42\xa8\x4c\xe9\x5f\x4e\x0f\xe0\x61\x36\xfb\x08\xc0\x3f\x90\xd8\x77\xff\xfa\x17\x00\x00\xff\xff\x5d\x37\x0f\xd5\x31\x03\x00\x00")

func templatesServer_resources_api_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_resources_api_nimTmpl,
		"templates/server_resources_api_nim.tmpl",
	)
}

func templatesServer_resources_api_nimTmpl() (*asset, error) {
	bytes, err := templatesServer_resources_api_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_resources_api_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_resources_interfaceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\xcd\x6e\x9b\x40\x10\x3e\xb3\x4f\xf1\x09\x71\x80\xc8\xc6\xf7\x4a\x3d\xf5\x47\xcd\xa1\x51\x14\x45\xed\x31\x5a\xc3\x60\x56\x81\x5d\xba\x0c\x38\xd6\x6a\xdf\xbd\x5a\xc0\x8e\xdd\x38\x6d\x7d\x9a\x81\xf1\xf7\x8b\x73\x6b\x94\x54\x29\x4d\x88\x2d\xf5\x66\xb0\x05\x3d\xa9\xea\x89\xa9\xed\x1a\xc9\x14\x63\xed\xbd\xe8\x64\xf1\x2c\x77\x04\xe7\xf2\xfb\x79\xbc\x93\x2d\x79\x2f\xc4\x66\xf3\x58\xab\x1e\x95\x6a\x08\xaa\x87\x1c\xd8\xac\x77\xa4\xc9\x4a\xa6\x12\xdb\x03\x76\x66\x6d\x65\xdb\x88\xcd\xe6\xb3\x81\x36\x0c\x2a\x15\x83\x4f\x7f\xda\x1e\x50\x4b\x5d\xa2\x57\xba\x20\x28\xc6\x5e\x35\x0d\xb6\x04\x33\x92\xdd\x5b\xc5\x4c\x1a\xe5\x60\x95\xde\x81\x6b\x82\xa6\x17\xc6\xc2\xa0\x8c\x16\x42\xb5\x9d\xb1\x8c\x54\x00\x80\x73\xb0\x52\xef\x08\xc9\xf3\x0a\xc9\x88\x0f\x1f\x91\xdf\x6a\x26\x5b\xc9\x82\x6e\xa7\xcb\x7b\xc9\x75\x3f\xb9\xc2\xf2\x8b\x9d\x4b\x46\xef\xe3\x23\x02\xe9\x72\x7a\x9f\x05\x7b\xc1\xf3\x6c\xf6\x84\x13\x8c\xaa\xd3\x52\x19\x1b\x6e\xbe\xe8\xb2\x33\x4a\xb3\xf7\xb0\x26\xd8\x5c\x76\xc1\x87\x8e\xae\x82\x1c\x27\x77\x12\x12\xca\x78\x23\xff\x3b\x71\x6d\xca\x4b\xc5\x93\x2c\x24\xe3\xf2\x72\x86\x0e\xb2\x42\x42\x21\xce\x86\xec\x22\x2c\x19\xf3\x1f\x64\xb7\xde\xcf\xf3\xab\x4c\x11\x01\xd1\x39\x63\x15\x28\xab\xc0\x99\x8c\xf9\xd7\x41\x17\x9f\x4c\xdb\x92\xe6\x7e\xb9\x9d\x48\x93\xb1\xf2\xde\x39\xd2\x65\x78\x1a\x4d\x98\xe7\x22\xd2\x9a\xb9\xcb\x1f\xa8\xef\x8c\xee\xe9\xa7\x55\x4c\x76\x85\x9b\xe5\xe9\xaf\x81\x7a\xce\x44\xb4\x84\xec\xbd\xf0\xef\x64\xfc\x60\x06\xa6\x3e\x58\xb2\x66\xe0\x50\xfe\xbf\x72\xae\x06\x5d\xbc\x0b\x94\x5a\xdc\xb4\xc3\x4b\x3e\x6d\x76\x05\x75\xe5\x32\x03\x9c\x88\xfe\xda\xc1\x59\x05\xe1\x4e\x55\x53\x07\xaa\x2c\x1b\xda\x4b\x4b\x17\x07\x36\xff\x36\x15\x91\xc6\x7f\x04\x1f\xaf\x20\x1b\x55\x50\x7e\x47\xfb\x74\x0e\xf0\x15\xc1\xfb\x2c\x7f\xac\x49\xcf\x39\xce\x08\x36\x94\x91\xaa\xfc\x4d\xd8\x59\x96\x1d\xa5\x2d\x2c\x73\xd5\x71\x76\x21\x93\x9a\x9e\x30\xd5\x75\xd4\x34\x01\x5e\xd1\x75\x8d\xe3\xbf\x18\xe6\x32\xa3\xb3\xd9\x8b\xe3\x12\x3e\xdc\xdf\x01\x00\x00\xff\xff\xd6\x21\x2f\x89\x67\x04\x00\x00")

func templatesServer_resources_interfaceTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_resources_interfaceTmpl,
		"templates/server_resources_interface.tmpl",
	)
}

func templatesServer_resources_interfaceTmpl() (*asset, error) {
	bytes, err := templatesServer_resources_interfaceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_resources_interface.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStructTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\xc1\x6e\xdb\x38\x10\x3d\x5b\x5f\xf1\x56\xf0\xc1\x32\x62\xf9\x1e\xc4\x39\xec\x66\x17\x30\xb0\x4d\x72\x48\x7b\x09\x82\x84\x95\x47\x09\x6b\x8a\x52\x48\xca\xa8\x41\xf0\xdf\x0b\x92\x92\x2d\xcb\x69\x8b\xea\x60\x88\xe4\x70\xe6\xbd\x37\x4f\x63\x6b\x37\x54\x72\x49\x48\xb5\x51\x6d\x61\x9e\x0d\x55\x8d\x60\x86\x52\xe7\x92\x86\x15\x5b\xf6\x4a\xb0\x36\xbf\x8f\xaf\xb7\xac\x22\xe7\x92\x84\x57\x4d\xad\x0c\x66\x09\x00\x58\x0b\xc5\xe4\x2b\x61\xba\xbd\xc0\x74\x87\xcb\x15\xf2\x75\x08\xb8\x67\xe6\x4d\x63\xe1\x5c\x88\xf3\x4f\x6a\x2d\xa6\x5b\x38\x97\xf6\x57\x49\x6e\x42\x44\x96\x24\xc7\x44\x31\xc9\x0d\xe9\x42\xf1\xc6\xf0\x5a\xc2\xb9\x64\xb9\x84\xb5\xd3\x9d\x73\xb0\x96\xe4\xc6\x39\x7f\x81\x97\xc8\xef\x24\xfd\xcf\x25\xdd\x50\x19\x32\x59\x7b\xb2\x15\x76\x16\x20\xa1\x29\x1c\x9b\x7d\xe3\x29\x21\xf7\x64\xe0\x1c\x22\x73\xd8\x31\x19\xda\x7b\x3a\x4c\xb4\x14\xd0\xfc\xc7\x49\x6c\x34\x06\x64\x3c\x1a\x7f\x9c\x47\x59\xfc\x06\x2f\x41\xef\xdd\xad\x7c\xad\xff\xa9\xab\xa6\xd6\x3c\x30\x28\x99\xd0\x14\xc0\x77\xc7\x0f\xfb\xc6\xaf\x5f\xbe\xe9\x5a\x5e\xa6\xd6\xfa\x8a\xce\x9d\xe5\xb8\xab\xb8\x31\xb4\x81\x51\x2d\x39\x77\x51\x57\xdc\xf7\xc8\xec\x3b\x11\xd2\x70\xa1\x8b\xfe\xc2\x04\xdf\x30\x53\x2b\xed\x1c\x76\x71\x41\x21\xf7\xf9\x79\xda\x25\x78\x39\xc8\x19\x39\x2d\x10\x57\x9d\x6c\xe1\xbd\x57\xfa\xb6\x36\x7f\x33\x45\x6b\x69\x48\x95\xac\xf0\x5e\x28\x5b\x59\x60\xa6\xbd\x49\xa2\x0c\x19\xba\x2a\x34\xcb\x40\x4a\xd5\xea\x20\xed\x72\x8e\xd2\xab\x08\x41\x3b\x12\x3d\x40\x2f\xce\x7c\x79\xa8\x7f\x6e\xa6\x53\xe5\x23\x94\xe9\x2e\xff\x2c\xf9\x7b\x4b\x6b\x43\xd5\xe1\xac\xf2\x4c\xfb\x76\x5c\xae\x50\xb1\xe6\x91\xf7\x60\xad\x7b\x8a\xad\xb6\xce\xc6\xf0\xb2\x56\x78\xbe\x40\xa8\x12\xab\xea\x7c\x98\xc1\x1e\x5a\x3d\x4c\xfc\xb8\x7b\xc2\x0a\xa3\x54\xf1\x97\x97\x10\x24\x67\xc3\xe8\x0c\x7f\xad\xc2\xe6\x49\xea\x6c\x90\x5b\x91\x69\x95\x44\x59\x99\xfc\x5f\x2f\x57\x39\x4b\x87\x20\xaa\x56\x1b\x7c\x25\xb4\x81\x6e\x9a\x0d\xca\xc5\xcf\xc7\x0d\x17\x47\x95\x96\x73\xcc\x07\x0f\x82\xef\xcf\x85\xef\x4e\x07\x0d\xf0\x8d\x7e\xc8\x3f\x71\x19\xa5\xed\x3f\xdf\x8e\x9b\xce\x70\xe5\x9b\x7d\x8c\x38\x11\xea\x03\x32\x82\x24\xf4\x5b\xdd\x8a\x8d\xa7\x71\xbd\xc2\xf8\xfa\x88\xd3\xe2\x84\x54\x87\x86\x7d\xff\x19\x9a\xeb\x2e\x5d\x17\xf1\x67\x68\xae\x56\xe3\xdb\xbf\x04\x83\x88\x66\xe4\xbc\xc9\x72\x89\x8a\x6d\x09\xba\x55\x04\x6e\xc0\x75\xd7\xad\x68\xca\xdf\x38\x71\xf2\x81\x0d\x61\x93\xc9\xa4\x3a\x73\xda\xc4\x25\x93\xde\x63\x47\x63\x65\x21\xfa\x03\xae\x45\x2d\x04\x15\xa1\xcf\x5c\x43\xd6\xe6\x68\xa2\xc9\x09\xc1\x13\xd7\x14\x4c\x08\xbc\xd6\x8b\x5d\x3f\x2c\xfa\xb1\x41\x9e\xbe\xcf\x32\x98\xae\x23\xdf\x8c\x46\xf1\xa0\x07\x92\x8b\x83\x4d\xfb\x51\x3c\x38\x3e\x2f\x36\xd3\xd9\xf8\x3f\x22\xcc\xf6\x0e\x6e\x3f\xb4\x7e\x04\x00\x00\xff\xff\xc3\xc1\x18\x45\xc2\x06\x00\x00")

func templatesStructTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructTmpl,
		"templates/struct.tmpl",
	)
}

func templatesStructTmpl() (*asset, error) {
	bytes, err := templatesStructTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/struct.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStruct_capnpTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8d\xcd\xaa\xc2\x30\x10\x85\xf7\x7d\x8a\x43\xe9\xf2\xb6\x0f\xd0\x72\x41\x41\x84\x6e\x74\xe3\x5e\x42\x33\x4a\xd1\x4e\x43\x9a\x16\x64\x98\x77\x97\x26\x08\x8a\xee\xce\xfc\x7c\xe7\x13\xb1\x74\xe9\x99\x90\x4f\xc1\xcf\x5d\x38\x77\xc6\xb1\xcb\x51\xaa\x66\x22\x25\xbc\xe1\x2b\xa1\xb8\xfd\xa1\x58\x50\xff\xa3\x6a\x07\x37\xfa\x30\xc5\x73\xb1\xa8\x36\xeb\x17\xb1\x8d\x8b\xaa\xdd\xa9\x36\x99\xc8\x17\xb6\x65\x1e\x83\x09\xfd\xc8\x1f\x68\x02\x93\x1a\x22\xd5\xc1\x0c\xa4\x0a\xf9\xed\x3e\x7a\x4b\x9e\xec\xbe\xa7\xbb\x9d\xa0\x9a\x01\x6b\xd3\x8b\xda\xa4\x61\x1e\x54\x51\xc7\x7c\x7a\x38\x7a\xf3\xac\xe2\x94\x9e\x01\x00\x00\xff\xff\x63\x4d\x17\x93\xf7\x00\x00\x00")

func templatesStruct_capnpTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStruct_capnpTmpl,
		"templates/struct_capnp.tmpl",
	)
}

func templatesStruct_capnpTmpl() (*asset, error) {
	bytes, err := templatesStruct_capnpTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/struct_capnp.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStruct_input_validatorTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\x41\x6b\xdc\x30\x10\x85\xcf\x9e\x5f\x31\x15\x84\x5a\x60\x9c\x16\x42\x0e\x81\x3d\xb6\xb7\xb6\xf9\x07\x8b\x2a\x8f\x12\x51\x49\x36\xd2\x48\xa1\x08\xfd\xf7\x22\xaf\x77\x1b\x72\x31\x66\xe6\xbd\x37\xef\xb3\x6b\x5d\xc8\xd8\x40\x28\x12\xc7\xac\xf9\x6c\xc3\x96\xf9\x5c\x94\xb3\x8b\xe2\x35\x9e\x99\xfc\xe6\x14\x93\x68\x0d\x36\xa5\xff\xa8\x17\xc2\x5a\xe7\xe7\xcb\xeb\x4f\xe5\xa9\x35\x00\xeb\xb7\x35\x32\x8e\x30\x08\xe3\x59\xc0\xd0\xe3\xf4\x1a\x8a\x00\x09\x60\x72\xd0\xf8\x23\x3b\xb6\x9b\xa3\x5f\x66\x0c\xd9\xa3\x0d\x4c\xd1\x28\x4d\xb5\x4d\x58\x94\xcb\x84\x89\xa3\x0d\x2f\x12\x29\xc6\x35\x62\x85\xa1\xa8\x88\x21\xfb\xef\x6e\x55\x8c\xa6\x3f\x1f\x1f\x00\x86\xf4\x66\x59\xbf\x62\xc1\xa7\x53\x5f\xcf\x23\xff\xdd\x48\x76\x83\x56\x89\x7a\xf2\x13\x0c\xc3\xcd\x78\xba\x5a\xc7\x22\x0f\xc9\x31\xf8\x20\x2b\x30\x2c\x64\x54\x76\xbb\x3f\x12\xe7\x18\xd0\x78\x9e\xbf\xf5\x42\x66\x14\x77\x05\xb5\x0a\x9f\x19\x7f\x13\xe6\x44\x0b\xbe\x59\x7e\x45\x7f\x03\x13\x13\xf6\x13\x0d\x7a\x75\x97\x69\x0f\x9e\x3a\x4f\xaf\x7a\x7c\x91\xf9\x59\xc5\x74\x59\x8d\xbb\x6a\xc2\xc7\x07\x09\x83\x35\xbb\xf0\xd3\x09\x83\x75\x1d\xe6\xda\x80\x62\xbc\x64\x46\x4a\x07\xf2\xa5\xf1\x3d\xfe\xbf\xb2\xfb\xc7\xae\xb8\xbf\xe1\xda\xc0\x7d\x22\xa5\xec\xa9\x5f\xe7\x2f\xef\x53\x3f\x70\xd9\x84\x61\xe5\x77\x2c\x78\x57\xc4\xd4\x6f\x1d\x7f\x47\x5e\x3b\xec\xee\x60\x1d\x34\xa8\x95\xc2\xd2\x1a\xfc\x0b\x00\x00\xff\xff\x16\xec\x5e\x2d\x45\x02\x00\x00")

func templatesStruct_input_validatorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStruct_input_validatorTmpl,
		"templates/struct_input_validator.tmpl",
	)
}

func templatesStruct_input_validatorTmpl() (*asset, error) {
	bytes, err := templatesStruct_input_validatorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/struct_input_validator.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/.DS_Store": templatesDs_store,
	"templates/bindata.go": templatesBindataGo,
	"templates/class_python.tmpl": templatesClass_pythonTmpl,
	"templates/client_go.tmpl": templatesClient_goTmpl,
	"templates/client_initpy_python.tmpl": templatesClient_initpy_pythonTmpl,
	"templates/client_nim.tmpl": templatesClient_nimTmpl,
	"templates/client_python.tmpl": templatesClient_pythonTmpl,
	"templates/client_service_go.tmpl": templatesClient_service_goTmpl,
	"templates/client_service_nim.tmpl": templatesClient_service_nimTmpl,
	"templates/client_service_python.tmpl": templatesClient_service_pythonTmpl,
	"templates/client_setup_python.tmpl": templatesClient_setup_pythonTmpl,
	"templates/client_support_python.tmpl": templatesClient_support_pythonTmpl,
	"templates/client_utils_go.tmpl": templatesClient_utils_goTmpl,
	"templates/client_utils_python.tmpl": templatesClient_utils_pythonTmpl,
	"templates/client_v2_python.tmpl": templatesClient_v2_pythonTmpl,
	"templates/date.tmpl": templatesDateTmpl,
	"templates/docs_markdown.tmpl": templatesDocs_markdownTmpl,
	"templates/enum_capnp.tmpl": templatesEnum_capnpTmpl,
	"templates/enum_go.tmpl": templatesEnum_goTmpl,
	"templates/enum_nim.tmpl": templatesEnum_nimTmpl,
	"templates/enum_python.tmpl": templatesEnum_pythonTmpl,
	"templates/generic_main.tmpl": templatesGeneric_mainTmpl,
	"templates/index.html.tmpl": templatesIndexHtmlTmpl,
	"templates/init_py.tmpl": templatesInit_pyTmpl,
	"templates/input_validators_python.tmpl": templatesInput_validators_pythonTmpl,
	"templates/libjwt_nim.tmpl": templatesLibjwt_nimTmpl,
	"templates/oauth2_client_go.tmpl": templatesOauth2_client_goTmpl,
	"templates/oauth2_client_nim.tmpl": templatesOauth2_client_nimTmpl,
	"templates/oauth2_client_python.tmpl": templatesOauth2_client_pythonTmpl,
	"templates/oauth2_jwt_nim.tmpl": templatesOauth2_jwt_nimTmpl,
	"templates/oauth2_middleware.tmpl": templatesOauth2_middlewareTmpl,
	"templates/oauth2_middleware_python.tmpl": templatesOauth2_middleware_pythonTmpl,
	"templates/object_nim.tmpl": templatesObject_nimTmpl,
	"templates/python_server_resource.tmpl": templatesPython_server_resourceTmpl,
	"templates/requirements_python.tmpl": templatesRequirements_pythonTmpl,
	"templates/server_main_go.tmpl": templatesServer_main_goTmpl,
	"templates/server_main_nim.tmpl": templatesServer_main_nimTmpl,
	"templates/server_main_python.tmpl": templatesServer_main_pythonTmpl,
	"templates/server_resources_api.tmpl": templatesServer_resources_apiTmpl,
	"templates/server_resources_api_nim.tmpl": templatesServer_resources_api_nimTmpl,
	"templates/server_resources_interface.tmpl": templatesServer_resources_interfaceTmpl,
	"templates/struct.tmpl": templatesStructTmpl,
	"templates/struct_capnp.tmpl": templatesStruct_capnpTmpl,
	"templates/struct_input_validator.tmpl": templatesStruct_input_validatorTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		".DS_Store": &bintree{templatesDs_store, map[string]*bintree{}},
		"bindata.go": &bintree{templatesBindataGo, map[string]*bintree{}},
		"class_python.tmpl": &bintree{templatesClass_pythonTmpl, map[string]*bintree{}},
		"client_go.tmpl": &bintree{templatesClient_goTmpl, map[string]*bintree{}},
		"client_initpy_python.tmpl": &bintree{templatesClient_initpy_pythonTmpl, map[string]*bintree{}},
		"client_nim.tmpl": &bintree{templatesClient_nimTmpl, map[string]*bintree{}},
		"client_python.tmpl": &bintree{templatesClient_pythonTmpl, map[string]*bintree{}},
		"client_service_go.tmpl": &bintree{templatesClient_service_goTmpl, map[string]*bintree{}},
		"client_service_nim.tmpl": &bintree{templatesClient_service_nimTmpl, map[string]*bintree{}},
		"client_service_python.tmpl": &bintree{templatesClient_service_pythonTmpl, map[string]*bintree{}},
		"client_setup_python.tmpl": &bintree{templatesClient_setup_pythonTmpl, map[string]*bintree{}},
		"client_support_python.tmpl": &bintree{templatesClient_support_pythonTmpl, map[string]*bintree{}},
		"client_utils_go.tmpl": &bintree{templatesClient_utils_goTmpl, map[string]*bintree{}},
		"client_utils_python.tmpl": &bintree{templatesClient_utils_pythonTmpl, map[string]*bintree{}},
		"client_v2_python.tmpl": &bintree{templatesClient_v2_pythonTmpl, map[string]*bintree{}},
		"date.tmpl": &bintree{templatesDateTmpl, map[string]*bintree{}},
		"docs_markdown.tmpl": &bintree{templatesDocs_markdownTmpl, map[string]*bintree{}},
		"enum_capnp.tmpl": &bintree{templatesEnum_capnpTmpl, map[string]*bintree{}},
		"enum_go.tmpl": &bintree{templatesEnum_goTmpl, map[string]*bintree{}},
		"enum_nim.tmpl": &bintree{templatesEnum_nimTmpl, map[string]*bintree{}},
		"enum_python.tmpl": &bintree{templatesEnum_pythonTmpl, map[string]*bintree{}},
		"generic_main.tmpl": &bintree{templatesGeneric_mainTmpl, map[string]*bintree{}},
		"index.html.tmpl": &bintree{templatesIndexHtmlTmpl, map[string]*bintree{}},
		"init_py.tmpl": &bintree{templatesInit_pyTmpl, map[string]*bintree{}},
		"input_validators_python.tmpl": &bintree{templatesInput_validators_pythonTmpl, map[string]*bintree{}},
		"libjwt_nim.tmpl": &bintree{templatesLibjwt_nimTmpl, map[string]*bintree{}},
		"oauth2_client_go.tmpl": &bintree{templatesOauth2_client_goTmpl, map[string]*bintree{}},
		"oauth2_client_nim.tmpl": &bintree{templatesOauth2_client_nimTmpl, map[string]*bintree{}},
		"oauth2_client_python.tmpl": &bintree{templatesOauth2_client_pythonTmpl, map[string]*bintree{}},
		"oauth2_jwt_nim.tmpl": &bintree{templatesOauth2_jwt_nimTmpl, map[string]*bintree{}},
		"oauth2_middleware.tmpl": &bintree{templatesOauth2_middlewareTmpl, map[string]*bintree{}},
		"oauth2_middleware_python.tmpl": &bintree{templatesOauth2_middleware_pythonTmpl, map[string]*bintree{}},
		"object_nim.tmpl": &bintree{templatesObject_nimTmpl, map[string]*bintree{}},
		"python_server_resource.tmpl": &bintree{templatesPython_server_resourceTmpl, map[string]*bintree{}},
		"requirements_python.tmpl": &bintree{templatesRequirements_pythonTmpl, map[string]*bintree{}},
		"server_main_go.tmpl": &bintree{templatesServer_main_goTmpl, map[string]*bintree{}},
		"server_main_nim.tmpl": &bintree{templatesServer_main_nimTmpl, map[string]*bintree{}},
		"server_main_python.tmpl": &bintree{templatesServer_main_pythonTmpl, map[string]*bintree{}},
		"server_resources_api.tmpl": &bintree{templatesServer_resources_apiTmpl, map[string]*bintree{}},
		"server_resources_api_nim.tmpl": &bintree{templatesServer_resources_api_nimTmpl, map[string]*bintree{}},
		"server_resources_interface.tmpl": &bintree{templatesServer_resources_interfaceTmpl, map[string]*bintree{}},
		"struct.tmpl": &bintree{templatesStructTmpl, map[string]*bintree{}},
		"struct_capnp.tmpl": &bintree{templatesStruct_capnpTmpl, map[string]*bintree{}},
		"struct_input_validator.tmpl": &bintree{templatesStruct_input_validatorTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

